saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_VARIANT
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatOffset"
        input_arg {
          name: "concat_dim"
          type: DT_INT32
        }
        input_arg {
          name: "shape"
          type: DT_INT32
          number_attr: "N"
        }
        output_arg {
          name: "offset"
          type: DT_INT32
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "DynamicStitch"
        input_arg {
          name: "indices"
          type: DT_INT32
          number_attr: "N"
        }
        input_arg {
          name: "data"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "merged"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Exp"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LessEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeSummary"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Minimum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PlaceholderWithDefault"
        input_arg {
          name: "input"
          type_attr: "dtype"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomStandardNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "ScalarSummary"
        input_arg {
          name: "tags"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Select"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "t"
          type_attr: "T"
        }
        input_arg {
          name: "e"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Split"
        input_arg {
          name: "split_dim"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
          number_attr: "num_split"
        }
        attr {
          name: "num_split"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StridedSliceGrad"
        input_arg {
          name: "shape"
          type_attr: "Index"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Tanh"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "TanhGrad"
        input_arg {
          name: "y"
          type_attr: "T"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.14.0"
    tensorflow_git_version: "v1.14.0-rc1-22-gaf24dc9"
  }
  graph_def {
    node {
      name: "input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 30
            }
          }
        }
      }
    }
    node {
      name: "model/flatten/Shape"
      op: "Shape"
      input: "input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice"
      op: "StridedSlice"
      input: "model/flatten/Shape"
      input: "model/flatten/strided_slice/stack"
      input: "model/flatten/strided_slice/stack_1"
      input: "model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape"
      op: "Pack"
      input: "model/flatten/strided_slice"
      input: "model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "model/flatten/Reshape"
      op: "Reshape"
      input: "input/Ob"
      input: "model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\003$\025>&N\367\275\215\260\223>\341\311\323\276\232\253\330\274\200J\n\276k\357 =2\027\334\275*s|\276\032\261\206\276V\220b\275N$\272\274\037\031 =nF\236\276\350\276\017>\373\357\220=\216!\237=~\307\213\276um\244=C=|\276\213\353s\276/\360\375=\341\r\210\271\217B\030>Y\302\363\274\216\036j=\307\301A>t\271\241>^\345+\274m\353\202\273Jir<i\227\210\276+\207\221<gc\017>J0\240\275&\333\361=\246\203\227\276\322\017\356<\315\321;\276\350l\352=D\241%>)Y\323;f\221\267=\212\225\033>\266\203\323<\2075\225=\312\\\266\2764l\231=\350\023&>k\244\304\276\3735\260\276\031\035\233\275\2754\321\274\330\333w\276\225C\200>\330\230\242\275\361\307\030<U\2054>\376G\326;\273\263\367\275\247C\260\274\325\022b\276@>\177\276\230c\372=|E\350=y\223\235\276\021\267}\276\037\270\217\276\273pT>\005W\341\274\352}\351>4\276\263=u\367C\275\242c8>=\260{>i\375\240>=q\003\275nu\000>\260\n\306=,\242\010\276\35486>\215\316\235\274\345\243\237<uKC\275\302\225@\275\316\205\236=\274\371\331\275wN\005=)\220\006>\327$\025\276\022\034\021\276\335\342\222\273\263\3273>c `\275\367e\'\276H\357\023=\307\267\254\274ja\223\276U\304\266:p\224n>gV\311=H\216\237=\211\332\007=\255\230\216=\241\220\n>#\222\300=\230\357\321>\337\001\276;*\322\214<\254\242\316=|\233f=\207\346\013>\205>]\275\376\001\014\274E\206\342\275v\016V=\343\3675\276i O>\355\246\325\276\312!\346=F`m\276&\026)\276\377a{>\312\t\002>\241\375)>7\030\304\276-\035\277\275j\350\213>jC\201\276\013\362\031=dt\206\275\313^\363=\326\224+>\306[\351\274\022\304\033\276\273$\030=\323<\365=\261*n\275\332\000\207>\226I\336=\314\244\027==Y\307\276\260\272\355\275\357\315\232<\265vt>i\374\236\274WT/\276\326\327u>\024@\277\275\014\023Z\276\207~m\276\263\215\205>\030\372V\275{\351\333\275\247L\342<j\367\351<\250\032.\276\036\344\023\274\346\353\233\275\014\274\213\276u\205\017>\320\326\354=X*\371\274\360/\210>>\344+\276M\243\331\275r:\274\275\274\">>\361%\224\276\2730\265>\334?->c\3441>\301\013\223\276`\257,\276\262\017\343=\025#)=\016\300\276\276\036hB\274/\317->\235\306\207\275<\247L=\224\311\013\276\275h\211\275?t\235<a\326\257\275\3038l>\230\353\017\276\354\024[>5\313\014>\220D\232>\021,\215\274A\017\276>\351\323\030\276\264\324\r>\370\3213\276I\254\367=a\004\217=\261\021K>\010w]\275\206\034P\275\004Z\313\275\n\031w\276\035z\242<$\377\373;\201\275\001=CZ\r>zM\265\275}o\331=\034l\251\276\025\350f\276ZE\310<\343\374/<\025!\230:\352\245/>\303@B\276\2037+\273Yo\010><d#>\243\214\233\275\347\306\013\274\365G\242;\211\276\210\276\302\357\335=bB\311=A\243\353;\265\321\305>[ \036\2767\210\215\276\221[D\276 g\365=*\377\270>\374=\034\276\365\306H\276K\004\206>\027\021g=S\302?>\371\342\214=H\345\020\274+\216F\275\004\342\217>\370\326\215\276\013u\223>\240\201\373\276uz>>\337{@<e\210\351\275\370\317g\276\211\336r\276\300\341R\276&\322\253\274\351\0253>\261\327\314<\017W\222\274Y\362\301\275\177\271o\276\030\204\254\275\247\362\265\276<\261\006\276 \2642=\347\262\006>7\022\363\275S\336\272\275\024\234\244\274/\347\265=;L\030>\305`\246=\325c{\276>xE\276\350@\361\275\236&\320\276\266yH=\033\303\016=\213z}\2752\362\257>0\360\316\271\242\361\232\276\320\023\321<uA\212\276\205\230j\276\252ey\276>\262\240\276~\t\n>\204\n\242\273Q\255\325\276[\226\336=C\204\006=Aog\274\334\245\244=\377\362t\276w9\223\276\216\326\321\275<%\231=\272\342!\275\344!>\275\275\001\233<\343\321\215\275\370\215\306<\262\266\276\275\001\260\327=\364\327i=\376\362M\275y\210\030>\315R#>\003p\351\275~ \224\275nd*\275si\234\276t?!=\254\324\227>e\035V\276\265\220t=a\277\346=\001\353g\276\353E9=\345C\211>_^\350\275w!%>\304\246\325\275q1\252\276W\200\031=\211\344q>\250\224\020\276\226\350=\276D\214d\276\003/\010\274\037\366y>%\227\253=$\316\030>\031F\366=\227\245\277\275\224\222\230>\231o\300\276\225\276V\275\3650\236\275\003\006\264>\277\3208>\307\014>\276\276\017k\275\311J\315>\227\251\350=[\262{=}\246F=\027\207[=\225\245y\276\243E\237\276\264e\351\275\234I)>\327\017\037\275\345|-\275\033\242_\276uW\221>\251\023\002>\333\311r>\265\264\367=y\306\355=\000\347$:\276\023\344=\213M\007<\333t\241\275\211\230J>\231l2\275\350.\304<a\320\335=^y\272=U\343\274\275\264\t\025\275hvv>@\021\250\276\322\"S=\210d\246<\306\t\210\276\353\347\247=\222m\234\275\233\010\203>J\340.=j-\205>|R\006\276\375=M>\354\254q\276C\361.>\023S\312\275\333\256Q>\374\310\350\275\002\347\225\273Q\310\034\276\364\355\222=i\017\n\276\363=]\276$\177r\276\361\001\267=\344<x\276y(>>T8\261\276\252\344\030\275\177\245k\275\0277\375=\317%\201\275\347\272\227=\342\030\373\275\235\343\353<\320\372\372<%\217\355\275(\303\n\275A\357\237=\242\242+>\232\205\332>l\204+>a-\361\275\363n\267<]\2565>\001\262\224=\327\\f\275\344Om\274\333g\237\275\233\274I\274F\357M\276Vp\263\275\337k\027>\006S\254>\200p<\274\333Y\335<\353>S\276\227k\354\276q\'\035\275W\\*>\230{2\275\240\032<>\313K\333\274k\020G>p\363\207\276;S\">\035\376\246<\201\022\220\276\035\251\025\276L>\214=\216\255 \276\347\024\275>\274\014\007=\272R\325\274&&p>D\355\206\276\202G\250\275\tD\216>>2\262=-\213\224>>R\274=a\024@=\344-Z\276v\030\242\276\237\370\206>\262Q\221\276\231\0356\2764L\253>\033\252\201\276\334\371)=T\373\221>\376\335\020\276\345o\t\276\302\033\223=.\274\234\275\037p+>uP\314\275\nf\">\310W\034>\326\277j\275So{\2752\006\307<\244#R\276\361\013\006\276\036\3256\275f\023^\276\241\306*\276y7\312\275\260O\233\275\236\352\330>\270\027/>\341`\322>*\316T\275kLj\274\277\r@>}~F\274\212f\n\276\366\022\277\275C\026\300\275\320\201y\276\\=7\275;\003\000\276\334\230[\276ws\234\276W\261D=l\255\376\275\027\302\214\275\353#\001<Q\256\261<\036\013\343\2758\222\274\275\225-\006=\212pV\276\247\241->U7\240;7}\022>\375P.>\232\036\004\276\213o\221\275\247\325=>\201c\202\276.\366\032>\362\332K>\263\222/\276\013.\262<\343\010\254>\214\367g\275@\032~>\226\nK\275\270~\007>\327\256-=\326\221P>X\341\">\2227\257>h\030\234;#B<\275\037\207?>\033\354\261\275\261v\007\276(\014}\275\260\250\016\275\231\312\327\275\274wZ=\177\004\321=\261\030\026>\241\214\325\273\357M\315\275H\305;>\234v\023<\363\236/\275P\330\245>\355\222=\276\200\356\233>\320D\274>\377l\252;\350\352\247\271\220\267\037>\364L\343\275\337\212\003\276\257\3610>99\336\274\3647\264\276\373\371\342\276@\237\204\2756\005\036\276\315~F\274\251\024\254=\024\0230>CT\276=za\213>sl0<K\000\243\274\300\266<\2757\370i>t\200\t=\270\321\271\275\271D\316<}\031%>xj\224\276\352\010\004\276)_$\276\314q\261<;\327\327\275]\251\207\2761J\201\276r3\232=\350oQ>|\263\273\276K\241%>\025\202\266\275\323\204\215\276\021R;>Vm\220\276M\277!>\021\312\347=\312\370\0279\224\004\322<\327B\206\275\204_\032>\001\341/>\377\354\265\274\340\370N;\271\013\232>\236\306a=\374\321\330>\322-3>\n\365\002\275^\222\037>3\320\337>\217)\315\275\242\304{\276\343\255\225=\024H\"\276\230\302*\276K\372\213\275\210\334\210=L\036|>\000\254\235>US\202\275\002\242\253=\314\023Z\276k\300d=G\307\317=\252\203h=\330b@>;\270\035\275\262\374b>A\364\333\2752\227\205>\321\030 \276\365\005\210>\270\310\305=\331{g>\n\350\376\276\035\326\205>\265?#>\325~\212\276\177\025\237=\371B\354<\330%\'\276\267;7\276W\230\023\276\3401\337\274\270\335g\2740\013\r=\333:\342<e.\272\275\307\237\224=~\361\230=\"y\036=\361:\007>\311Y\014>\254\232$\275\267\342\341=\216\016\311\275F\202$\276i\324N\276\020\007\211=m7K<yG\207\275\330\326\333=\004r\207>{\360\255=\243\253-=\010w\003>p.\344\275\254z)\275\3516t\275g\2422\273\251\005\277\275]\356\210\276\223\246\321;\376\271A\276\262\310\357\275\265sX<\220\376\350\274\331\376D\276\017j*=\n\270U\275_\003&\276e`\204>[\326\014\276J\2200>\256\206\263=kMF\276|\253\322\275\t\\\334=\251\347\264>\256\337y=bj\340\276\230\322K\275\256X\216\274\020;5=z\211\026\273I\202\374=\270\235\205=\323\305\033\276\305\244\255>3\320\300\275y\037\263>Q\037\026\276BU\344\276.+\017\276\332\266<\276<\275\244=\"f\346\274zK^> \352\254>\355\336\254>\207p\322=\376}\253\274\341\370M>\001\004\332=\n\341&\275aH\361\275sIT>xj\237>\214\361$>\301\020t=*\232\234\275\030mm>\222\216\237\273\010\253i\276 !\213\276\tz\343<F\253\250>R\t\"\276\365\325\204\276n)\211\276\300BC;\\\356\247\276\253\203\261\276~\325\034>\353t\252\276\347\355\375;DD\027=\014c\243>\227y`>p\362\211>.\331\375\276x]\244\276a\234\037\273\355A\211\274\306\317Z>73\371=\331{^>\\[\323<\005L\240\274D\315\014>Vsk\275\265\t!>\'\320\212\275/F\341=p\346k=\317\323\002>\314:\215<.\276\271\275l\360}>\341\345\202=\276p<>\330\205\014\273Q4\340\275#$m>\000\262\234=FW\r\276\001\356\266=\334Y~<\321T%\275\037g\267\275b\205\036=\361\221\365\274\225\321c=\322&)=+R?\276\323\267*>s\231\331=%\322C\276\024\271~=\226\273p\275w\271\336\272\214}\r>\211\344\210\275\301ib>O\220]=\342H\254=\323O\314=\220cR\276+d`\275\302;\371\273\244\256\231\276\357\277i>?\375N\275Hzc\276!vZ=U\302\306=\273\362@\275\200\201\347<\373%\002>\'\241\004\276\375]K>\3009\231>\013\261\021=\323\247\363\271\223Z\352\275I(\312=\374+\213\275\003 W=C\255\213=\220^\277\276\334\356k>\353@\230\276\333\364\324=\265\301\022>\3112\356=(\0139=\217\313\267<\'\023\003=\317gj\276\356@\217\276t\206\263>\371\261\220=\325Q\370\275o\034\005>X\345\n\276;?\357\275\340\003\'>\021\337O=\032\277[>/C\246>\240>\206\276\001\030\213>=\305\3319\032w\203>\333\232o\273\371Th\276\261c!\276Wy\341<\037q\034\276K\2008\275\266\321J<\253\273\257>|\033\216>\264hK\276~6\325<3i\304>\351\350\226\274\301^\n=U\221\336\275v\312\220\274y\264\250=\301\331\207\276\373\231\237\276\357\336\372\275\337\"\322=\272\257\214=_8\201\276\0017h=\254\345[>\361t`>\256\215\006\276\350\263V\274/-\217=hM\037>,\355>=\t\034\301=\242\342\333=\343\207]\276)8\246\274\321\016\333\274W\324C\276\345\362\242\274\224\373M\275\314\206\235>g\311\257\276\320@\233<PD\003\277-\rm\275\233\2321\276\027\365\222>\250\325\376\275\277\204\036>\265#E\275\020\201\020\276m{\r>\274\343U<\316\377*\276\212\351\331\275\250\242\213=\252V\204>\254\314#\273\0066\367<|E\200\276\236\014\312>\366\270\326\274\362\312x\276\376\315\033\275V\330Q\275^\274\017>\310\347\225>\373\234\327\275G\037\247\275\220\253\252\273XN1\276-\034\320\275\3326!>\203`\272=3\013x=b\301/\276xI\014>\242\202\304>w\007p\275\231Ns\275\277\216=\275z\360\242<\202\326\224\276\271K\360\273h\211P>\342\352\">\034\020,>\355\327\351\275\240l\217>?\315!\275\262\031~=\242\310\244\274\203\206J\276\316\233 \276&9\026>\\\226P\276?\322\216=\203\370\377\275\372\200\210>^\020`\274\177\032\016>\311k\372\276\355S\t\276\355\013^\275\031\246\234\276\351\336\314\275F E\276\0247H\276\240x\374\275\244\"\016\276R\310\301=n\351\020\276K_\265\273\250\217a\275\253\343\315<\311\371\246\276\356&\204\276R\013L=\212\034\246>E@\205=GNd\276\203\177\244\276\006+\326\275H5\257\274\341\235\244\276\000\2260\276i\360/>Pp6>z\313X\274-8\023>\335f7\275S\2401\2762\335\205>\311\013D=\026;\223\276rT\306\275\304\016\002>\254`\345\272T\206A\275\323\334\226<\212O\214\2735=;\276g:~\276gq\236\276\225\264p\275\274\331\277=\\~\003=\361\342\361\275s\257\244=\351p\022=0\356t>8\354\034=\331\246\243\275\247\335\236\275\272\370/\276\0247/>`c\271=\227\036\325={\250N\276\260\236Y=\351\035\200\275\t\307T=\304DD>\030t,>\222N\324\275\254R\212=V\260\004>\232%\375\275E\0300=Y\315\034=\006&z>/\366c\276\232\231B\275\033\304\\>\323N;\276#\362\315\275\034\037\310\274\373\3351\276g\213\031>\016G!=s\2103\276\260\265i=\225q\211=\352\340|>\310\004[: P\272\276\223aG\275\n\251\347\276J\'\304>,\341\265\276\n\232H=\031\227\247\275_\325C>\0213\207\276\265\315\334\276\343\223\341\273\027z[>\211\001Y\276?\005#>W_\331\275v\212\216\276\237l==\367\212\034>\267\240\021>\2660\200\275L\027\t>H\250\341\275d\025?\276\357V\t=\264\216)>\354m\202\275\211\365\304=\034A@>\323E\035\2763\332{>\255\302\247\274\010x\220\275\305\031?=e3\332>s\327C\275\227\336\003\275\n\233\264\2759)\203>\361\314\265\275\010V^=\342)W>~d&\276vw\305=\025\301x\276\3253\215>\023O\256\276\325\0025>\354pP>\320D\016\276lt+<\214\335\215>\236I$\276?\347\226<T\371O\275\251-a>\371-\253<\336\271\330\275\247\257\277\273\365\377\004\275v\243\222\276\366\001\252\275J\016\345\275_\206\003>)p\027\276@\026\216=I\230\036>_\334\323\275\326.\016>\275j\214;oE\244\272\255l\331=\311\337\244\275\245I?>6P\327\275\220}q\276\311Z\257\275\217W\241\276\344\036A\276awh<\016\351E\276\264p\377\276\023\201\023\276\265`\027>%\351\031>\"\273\263\276\326\267Y=\266\355\004>\266h\017<\340!\225=\300\374e>5no\276\227}N=*\217\005\276\242\r\250>\332\025\361\273ouZ\275m\352\322=|LW\276\364%v>\267\372\366=6Bd\276\370\035\233\275G\267\333=Mv4=\017\370u>:\242\205=\202\240\237\275\327B\241\275\340\006y>\224\224\r>\210\265=>\366D#>u{H\275h/\262=\362\267\007\276\203!\334\275\2158c\276\365#\005\275(\302\024\276\275\270\326\276Of^\275`\265\323\273\301&!\274\221\224V\275\013\367\206\275\002\200_>\3732\033\277\t\316\231\276J\235\033>\243\316\223>P^j\275\345\032\344<a\362\222\274\026/\021>\217i\2729\365*\275\276\032\311\314\275\326!d>\336\223\366;\322\250[>\021\243\032\274\305h3\276@u7\276\375\345~=\271\271\354<\355\\\332=\025}\365\275\210\361\003\276m{7\275\324\203^\276\"\357-=\213W\023\275\200\213\202=n\267\374\275e|Q\275\204<\034?\373\023\313=\223\030$>@l}>\231\020y<\374\025\205>\270f&>\324 a=]\3141\276|XA<\003\244\021\276\331fp=\367M\020\276\275\352\252\275\344\321K\276\032\210\030\276\005\321I\275\232za>\034\261\217=\213\017\365\273\213\026\221\275A\220G=\013\006_\275\230D\236>\360\375w\275d\251\202\275<\337\372\275\177\026\361\276/L\237=tL\212=9Q\235\276\014A\343\275\362}\026<j\024\266>\234I\351\275\330\032w>w\202\014\276%\023.\276\023\030M>yB\032\276\314\217\301\274]\300\203\274\327\222\253=\244\337!\275\362\315\200\275\360\230=>\241\307\314=\265\311\227>\277Q\254\275\357\277\327\274\250\306c>\206\203\246\275u\300\242>\355^\205\274J\035\365<4\3770\276\325\216\265\274?w\225>\205\363\251=u\372\354={?\304\275\317\322S>\240\326\007\276\327\301~<@\314n\276\341k\200>\230\002\031\2768Y.>\014\002\016\276\215.\272\276o6\313\275(r^\275\241\"\203>\'\337y=\376\331w>@\315\014\276x\256\254\276\200\344-\276\200\024=>\'g\366<3R\330\275\336\027\202\275[3\217\276+u\252\276\305H\350=\257\343\204;\037B\305\274\264c\206<`n#\2768\023\353\274\007\014\357\275\256^\030>\252W\216\275\223\210\010>\n\202U\276\332\033\244>:\2778=\251h\017=7M\242\275\010[3\276\336\360r\276\2559\376\275N\371\201>5\3167\276\271\025\225\273\257\003\355<a\207\241>\356\363\377<\365\004\035\276\374\034\214>\351.\357\275U\322i<\307+\375\275:C%\276B\273-\276\352\357E\276?\366k>y&0>\257SU>\004\'s>8\035\243<3/\031>\276\352\214>$\204\323\274\262\356Y=o\251\277>\367e\027\276w\316!\276\027C\210<\253\352\304\275\261W\221>z\225\200\274\"\351G\275\'\375n\276\035\313\230\275#\004\\\276\211Y6>\026\302\342=\345\341\337\276I\360\206\275Y\025d\275\037\032P=\364\020U<Zl\204>\336o\327\275\250X\010\276L\207\204>U\333a\276\\\030=\276\266Y-\275\2018\\>V\r\000=\355\202\213<\250\356\314</\202\213= \353\245\276l\317f=\0071,\275\rm\224\275p\364\211\274\302\262\"\276\203.\037\276\351\t\302\275\276\231;\2769\201\217>\231\275\250=\3353\177\275HfA>Yw\267\276\027\254\013>\221\2652\276\354e\323>A\271\341=\314\037F\274\305\252(>@\002\200=c\3762\276x\227\342\276ni\247\275UQ5\273\257\246$<Z\240>\276<\324\000>&_\255\274\367\352\305\275\254D\264\275X\314M>{/|<\361\371\317>V\255\274>\346\203\342\275\312\306\013\274\030\227\371\275@0\311\275N!\343\275\312\261\022>\302\332.<\251\320\212>A\034\302\275\037r\266\275\235\215*>/<\226>\350\220\365\274\206\305\214>m\374\246=U\026\017>k\t\000\275\371\257\017=\267\247\375<x\237\026=\342\313\245\2759\226\244;\001\034\213\274\327\220:>O\232\360\275\331\341E\276\310\021\252\275\336!\002\276\001\022]>\240\326\000>W\373\251\275\215E\230=\210R\317\275\256\207\244\276\276\362\352\275[\310\347>\013\246\227\275!?8=\3317\344\275\315\026\\>\376%\345\276!fq==<\267\273*\230\300\275\2453\013:\321j\207\276\301\356\353\275\026\035\007=\364C\223\275\342\032\244<\233\026\331\275\261\004\233\274k\010^\275\224?\263\275h\256\033>RnM\276\213\347~>\241P\350>\244Dj\276\010\224\331<\"\257\027\276\274F\351\275$\240\304\275\202\306\027\274\301\017,>D\034P\276 \357\224\275\211!E=<\360\267\275\355\230\001\277\245\271\212\275\243\376,>\030\020d<$\031\202>\323\364\304<\t\305\247\275\031\343\374\275\216\003\306>Wv>\276\177\232F\276\224\234\307\2763Ek>h\337\'\276AF6\276n\255\235\276\241)M\276,\324E\276\304EI\2740c\031\276\r %\276\321\323:>\330v6>r\024\357\275\304\215F=D3\024>\257\372\333=\351\234P\276)y\220>\330s\231\275\027\022\261>I\212&=f:\271\275\032\336m<g\212[\275\334-\">\347Z>>\036R\005\276\232\334\362\275J\213\221\275<\345\311\275\340\0368\276\343\354\277=G\212\251\275\351/\216\274 \264\200>w\335\016\275\337\234\273=\224\035\222<\027\014\232\275PQ]\276\367?\346=\3439_\276\356f\025\276v\357\212\276OUW=I\230\242=\364L\000\276\261#\"\2767tM>\025kv\276\263\253\004>\366\255t\275@\021\325\275\014\221\221>\312\341*\277\315\035v=O\333y>\031\262U=\221G4\275q\024\211<$O\230\275\311\243\256\275\311)\245\275\001\2069\276\343\216\221=[\245\241=p6&>\344\\\013\276{g\022\276(\003\204\274~\006P\276\224I\007>\353\373\271=\241\361q\276\035}\301\275\213\r\202\276&\236\272=\321\367\334<S\335\214\2760\2027\276E\337\241\272/\026\274=9\022p\275\362\032\000>\305(v=\214\234\246>+y\253=\331]\271=\352\261N\276\036\274E\275;#*=2\013\223=e\212\333<\377&`>\232\354\277\276Tb\212\272\314\346*>5\214\371=\004\317\006\276\336.\276\275\027t\317\274\224\014\\>\306\326i\276\251\221\035>\330\301I>\216\255\340\274\205%\256>\373\304F\276\3108\333\275\255_\253\275\357\316G\275\326\365\214\275^U\240>\230\322\207\276w\253\240=\255\313\225=9- >\377\3142\276o\346\344\275x\337\354\2750\350{>j\274<\275\323V\271=\333\327w\273@\032\263>u\371\026\274;\r\025>\377W \276\3135\001\275\256\363U\276\234\312L>9=3>\364\372\205><x\335\276\331\215W>\030\323\030>P\234\200\275\215b\210;\026\2605\276\372\'5>\010\2756>\2014\345\275P;\241\274\202x\177>\264\035\263>\233\346V\276\355\243\221>\363J\207>\014r\223\274\\\027\304\275\242t\";\300\320\274>\022\216\261\275\221\223\327\273\244\312\354\273^9o\276\376\310\010\275\266\322\262>\371\023.>\322\002g>\204?\230\276k\356\025\275-]\313=\304\3234\275\331\006\316\274\276\265P\275#\r\342=\364\304P\275\314\020\270=\235\360\357\275\227=\300<H\352/\275,\217n=\316kT>9\033\205>\346aO>f\277\006>\253iy>\313\207\025>\327T\345=f\362\262<HG\035\276\242\'~\276$\363\001>\034\220\227\276\260:\244>\021\371\257\276>P\223;npg\275\000C\255=#\rZ>\001^\363\275\367\022\217>\3628\250>\025}\213=q\3767\2768\366\275=\'f\214\275\307\366\000>mQ-\276\313\346\250\275\205\275(>i?\310\276\226\022\233\276VD\237=\201\001\034\276\000>\256>\005&\000\275\366\362\254>M\030\203>V`\350=\214\335&\275\334\364\216\276s%\337=Ze9\276V\017\024\274v\270\224=\340\t\246>ieE>+\034\005<\265\376\350\275\230\242\375<\275\014\030\276\005\005\235=n\022\266\275|\246\376\275\264\013\205;\206o\004\275h\302\316\274\032\017}\275i\301F\275Z\325\311:8.\261\274HX\016=\316~|\275\362\341\217=\266\022\203=(\300\351\275K\031\303=!P\224>\237\344\000\276l\n\341\275\354@5\276\266x\004>]\033Q=\207\363\033>m\315\340=\204\227\230<\207\346\307\275C\253\006>\337\370X>C;\226<\253\357\004>\024b\375\274\307\273\374\274\'_\310\275\361\363\260=\315\265\257\275\270\002\027=&\351\254\2751\034\214\276#\034\210=\031\303&\276\271\221_\276\341\317\260=S\204\230>\231\240}\275\2101\300\276`\233N\276\002\326\210\276\320\t\360\275\271\207\250=c\267\252\274\177\366\311=\r\\6>\222\275\031>*\320>\275d0\225\274\366v\013??\250\241>F$\217>\021\374\312\275\365\321\320\275\312\370*\275\3022\361\275$\254H<3\312\212<w)+\276]q\272\276\0321\257\275*\n\201=5\324J>\215)\003>\004\014!>cP\202<\343\335\345\275\037\222\275\275\367\035 <1s\202>/\327\025\275;Q\353\276mG\222>\335z?>\036\277+\276\025\312M\274\275\367\321=\014(F;\242\257\264\275\\\270g\275\2319\207\276h\221i\276\251\'\036\276\325\030\325<C\220\303\276f\2519>\005&\037\275<\267\231>A\352\274=\375(\336\273\361E<\276\006\373\322\274\347\021\304>\325\302\266\276\373\2532;\374jF=\263\017\250\275;\010\201\276\3558\233\276>\002\253=\370\205\235>\225\321\260\275\241B\370\274\017\355\321<be\346\275\250\260\300\274\341\3223=\023x\254=4i)\276\203k\366\275.\205\253<\301\306\023?\220\345\235<s\261E\276\373J\344=\2619\022=d\267\340\275\37677>\311\300\026\276\322*%\276\270\004c\276\256F\327=\311\207\272\275\273\310\230=\343]\322=\374\336\205\276\236b\303\274?!\340=\322\210\006>?\232:=\226\304r=\344\377\001>\360\246\022\276\314\230\216\275\371\246\r>\221\032?\276k\267G>\233\251\225>\321\202^>\326!\226;\277\023 \276v\034\000=\374ZS\276\362^~<\356*8\276\001O\243=j\001m\276\033\270\224>q\204\212\275\030O\210\276Q\244\230>\347E\373=\207<<\276\336M`\276\221\240\220=-o\322=\032\217\003=-\323p\276\017C\031>]H\343\274\200\271\032>\232\342\277\274\020\212Q>\214\025\265\274\302x\375<\234\220c=\223\"\000\277\215\021\'>B\2714>\363.U\275\240\362\031\276o\032\314=r#R>\\\345\210>:\373\251<\370\266\260=\355\217\004\274\034qx>\373\340]\276\203\342\333\275\026\351\230\275\010W\000\275u\026S\275k\205l=#\252\253\275zOC>T\227\315=\365%/\273\nR\225>\230^\264>\265\354\214=b\330->t\030\246\276\246\035j\275>\351\345<\244\266\232=>\032s\2762h\036\276\302tp\276\233\227\004>\\1\255=)\325p>\2278\210\275]\345\216\276\377\352\331\276$=*\274\250\322\032=h>\273>\323\2567>\220\023\035=!\241l>N\367\306\274\265{\334;\233y\020\276\325\020\352=_!\r;bb\021<\330\203-\276!\366\006\276@q\243=\2070\355=W\036\342\275\226\374\010\276|\3755>\0008\311=\316x\303=\021G7\276!T\327\275,\032\">\034\361\205>d\250\212>\205\334\347\274T\214?>\023\313\214\276M\232`>\265\251\000>bS_={\307\207>\020\276c=\000\324\006\276\334\272A>&V@\276{\272R\275\324\0060>\203\343\034>\013C\002\276\006!\207\275\215RL\275\265R\027\276\374\333 >*6\355\275S\202\037\275\014\177[<$\336>\276e]i>\333T\005\277\277\342\027=H\345\230\276\237\022\314<\201\260\237>\007Q\245\275D\261\003>G\341o\275Z\010\275="
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 30
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/w/read"
      op: "Identity"
      input: "model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Assign"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/b/read"
      op: "Identity"
      input: "model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc0/add"
      op: "Add"
      input: "model/pi_fc0/MatMul"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh"
      op: "Tanh"
      input: "model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
            tensor_content: "}\271p>\330Gv=AL\315\275}\224\007=\324\3072\276\325\257\235>8\224i>Z\033\330=\\\317h>B\010\210\275\007w\324=\211\315\311=\257\233)\275\r.k>\3276H>\020\025\222<\207\256\221\275\266\347Z>\250(9\275\255u\204=\374qP\275\211\032\004\276\227\215\201\274\344\223L>\325\254Z\276\0053Z=3\366E\276X\271\036\276\314\357\332\275\272t\360<\031\315M\274\000V\215>\212\023\321\275\260\325K\276m\001\232>Y\277\r>\233\352\337\275\223\251\210\273\311\330\333\275\n\301\303=Kx\373=\305\326f\275\032\330\233>@l\241\276h\203\026\275O\020\202>I\024T>\026\234\256>\302a&>\305\206\223>\270\272\251=\224\2571\275k9=\276@\005\300\275\374;\272<\025\272\007=\244\221\007\277\357\177\020=\310\212e\275N\203f\275\201\262\213\276\027\361\017\274\005\326\255=3\\\237\2762\007o>\321\260\314>b\301\233>\207.p=QC\014>/d\331\275|\230\201\276\025Z9\276\315|\336\275G\032\361<\016H+>\376\254\t=x|u\275\000\307\204\273\007Ws\276\234\361\250\274\251L\324<G,\353\2749~}\275srL>\364\315\325<\004\257Z\274`f\337=HT\245\276\341.\341\275h\026\260\275\241\263\336=\325\273\262\273re9\276\274\016\245>\352\236\307\276Qg\207\274\234\177\341<\236S\254=\\\336\205=P\366\r>T\224\203\275\244fz\275u\233\033\276\322\345&>+\203\245\276\375\021]\276\225\332\022\274\037J-=\010\244\377\275\2463\306\275\255\361\336\274\332U\325=\243e\347\275\220\025\216\275V\217\\\276\211\261m\276\217\210\340=A\372h\276d$$\276QD\267>\316\203\342\276\357Y\035\276\363\320\315\275\335\246X\275a[\243=\271xW>\177\\\220\276\343{.=,F\026\275\363\225%\275\210\253\027\275\274\363\023>\030w\227=.\373\240\276_U\374\274\207\323\023\275\014\r>\2762_\323>\277\354$\275z\nL\276`\235\274>\033\344\377\275\350y\020\274\333\323\277=\300\032\275=3\317\017\275\030\374\331\275\002$i\275I\034\246\276~\225\275<Yz\227\2760\367\260=\223\354\347\275\r\371\207><\217\002\276\004\255<>{L\223\275\206\360\037>\213~J\276. \347\274B\327;>\230\230u=\251\342\020>\271\277\305=k4\330\275\346PF>#_%=\326\2421>\275\276[\274\252\244\213\276\277d(>\307\337m\275\376\327\234\276\213\353\022>|\202j\276\206\356\304=N\\\231\276\255\267\304=:\240n>\006>L=\223l[>h*\264\275S\330K>\355s\351\275\317\3116<\'\261\326>\033\301\023\275\343\367\375\275\262\004\214\276m\354C\276y\344\034>\332\342\001>\353\327\266\274oY&>\3761\014\276?\374\000\276\202\247\366=\3236\025>\001T\t>\000[5\276gz#\275\n\370\t\275j\326\246\275\'F\334=\313\235\031>\374wN>\\lg\275\243xy\2751\023\271=\356\031X\275\2731\200\275\373!/=p\343#\276\346\200\255\276\304\357\266\275=\207!\275-x\235\276r\304\241\275\004}\017=\014M\225=\002\177o\275\252A\273\275\342/ \275{\307\033>\267fV\276%\275\201>\236:\022>\0365\212\275\345m\031>\344\001\226>01P\276\2424\007>\321L\204>\207\333\373\275\375!2\275-]8>\217\307\007\275\230fP=\215L\227\276v\270_\276-!N\276^\312\252\276\300\014k>S\251\376\274\354\354\207\276\032r\200>\005\340a\276\\\023\245\276\335k\205\276\307d\033=\274Q\254>w\\\366=\234\314\331>\022\324\370\272\303\267\260\275\017\243\020\276\304\022\235>\330\017\346\275\037K\334=\236\337\020>\033\314\366\271\016\237\240>\223\310\221\275\rZ\274\275\345\000\033>g\264\005\276\360\\\325\275\034\331*\276\335\362q\276\207\257b\276\237\326\033\276n\261\372=F5\201\274\342\325\343\275X\346\346\275]\226\326=O\3365\274\322\010Q\276\\\320v\275]!X\275\224\255\374\275\314\201A>\353\301\260>\213\206R>Cu\351>7\221\372\275\014\252\316\275\206n\353=\256\366\341\274\204\247\206>\330\002\312=\301\020T>\004\315\006\275\202\376\345\275\030*y\276v\0015\276\030lo\275\202R\301\273\032\323\257\276-\301>>\252c\207\276m\326K>\350\261\223=\324\371\263\273\223\010\265<\262]\036=\307\"\257>\214\237\242\275\3319\244=\2129\026>\226\275\376\274U\331\001>n\253\212=\030\017T\276\323zQ\276\336\257\225=6:<\276\212ie\276Lm\276>\032\266#\274\344\215g>W\273\226<\347\335\204\276\013\377\272=\023\312\n\275\233\034\351\274_\210\230>\262\323\376=\232\247\243;\302\332K={\256\247\273\t\331\246>u\357\"=\365\237\313<\360o*\276\245/\240\276\006\207\267\275\232\313\356\275\367\233\023>s\367\354\273\350\335\215\276R\t\225\276\3512\334\274,%\207=\245%X>\0242~\275c\326J\276\302\240\344=BT >\035Z\246\276Z\0257>f\215:\275^]\220<5vl>\364\023\244\276bY\343\274\331\034\200\276&EO=\020O\232=Q_\344=\314\240`=\tK\206\276AhX=\'\220E\2769#\233\2743\354\377=\002\306j\276l\351\005<\007^\010>\377\330p<\332<\234\275\201M\034\276\230\037\327=\007\304h\276:\275S=\331\244\217>\3644\367\275\003\016\244\276\336/\333<\266\230\303=1%^=\230\202\277<\246\263\255=\030\341\r?\353XK=R\275\023=\002\261\223=4h\335\274,\016M<\366\242\032>+\211\302\276r\\t\276]\023{=w\025\270\275q\263F\276x\254\210>>C\243>qsu\2753K\204\275P@F>\356\344M\276w\210)=\305|\350=7\256\336\274\346\026\361\275\252C\346;D\3235>U\337\\>\010\000\310\275\220\217\371=\372\266d>^\246\236\276B~\005>\247Uq\275\371\253\374=\356\312L>\270\312\377=~\\q>km\r\276L\221{\275/\211\032\2765\265$\276\022\224G>\260uE\275\203\353\037>B\037\260\275\257\313\032\275*\230\357=\0303\361=\022\240W=\360\246\305\276\'\034\323\275\331\314\201\275k\276\377<(\260\330\275\004b\336>HG\211\276\300\332i\276\344\365\340=\260\352\212=\235\276\234\275\342\243D\275a\301\t\276\247:\344\276q$D\276H\036\272\275K\255\204\276\003\030\001\2761\357\253\276\256\002]\275Jx\005\276\375\352O\275\262t9\276\344\202\211\276,\225(\276]\337K<4\213\256=g\025Y\275:Q\354=\037\037/>\010\035\210\276\317\n%\275\200\2004\276\203\035\222\275\315/\005\276\366\001\256\276f\006\265\275\223\036I=a\350\330=>\276\210\2760\317F>8\032\267\275\267\333\205>LT\274\275a\004\010>lhk\275\010LE=E\200\023=\220p\010<0\2241\274\217oT=\216\320\224\276\247\275A\274`\243\225\275\016\272D>\314+\317\275G\2736\276J &\276\236m\305\275\026\225p\275\354\304Q>*\215\021\276nVC>/\032\364=6\333&\276Z\342b\274Y\177(\277\205\213\217>\365wh>\335\"\204=\014\216\007\276\203\224Y>\205\212L>J]\301=3K\230\276\267\243\034\275\277V\014=Nr\373\275\241\030\353<\347W\261\275\"Qo>m\306\327<\265\003Z>r\264|\274\257[\313\275\374\002\265\275d\344\224\276\243p\254>\304\341\030>e\324\317\275~\007\321\274N\352\273>\003W\037\276\247\014\301\275\025y\251\274\374\242#\276\264\202\214\275a\344\t\2767\373\205>\215YZ\276\275\300)\275O\215\242\274\346\225\250>\251\002I=r~\275\275\323!\203\275\250g\206\276\322\276\312= #\340=\n\251\261=\026,\202\276\230\333\003>\022\277\233>\250\347\201>ZS\203>\"\253\030\276V\341k\276k`M<K\2416\276\346i\026\276\250\225\233=v\247\324\273\213\332,\276\251\335;\275\356c\026<\355\231\200=6\214I>\302\305\255=\270\243\361\275\017\315|>\034\240\r\276u<\210=\371\272\236>\237I\245\2763H\215\276\310\004\'\275Z\201\276<\376\242\232=\223\247\233>\200q\016=\310N\325=p\"\020\276=\376\017>\365\343p>\277\376]\276m\234Y=\004Xg\276\214K\265=\255\302n\276\332s\322\276h<\224\275D1\256=?H@\276R6\r>\276l\n\276\211\211\271=\237\r\214>\340\253\212\276\n\027d\274\317\312\264=jS\335\274\001)l\276\240\342^\276``3\276\351\213\'\276\003\205\214\275_\244\264\276T\310\016?\n\032\221>2\002\362=V\223\216\276e\202\256>\226\341j\275\206wd>\335V\224=P\350\013\276\207\215\201=\320>I\274\321b\032=R\230\260\275\2711\177<\332\330\314=n\353\264=A\366*\276\347.\207\274r\253\023\275\261c\025>\024\207\226=\205\025|\27526\022>,\311\216==J\002\276&zZ\275Bn\032>g\254\213=<\022\274\275\007\374\022>n\033\006\276Zi\n>\234\342I\275PT\265\274\220\314\226\275\270}\224\276\020\036\302\276\004r\266;\r^W\275\221\232\237;iI!\276\240\\\256\2755\216\241=\330\372\353<\237\301\024>\004D\236>\257dB\276\315\227\200\276\301R?>\316\223\324\276\277Z\345\274\361E\217>vn\326=\264\230\022\276\355(c\275Q\307g\276\220?b=\333\007\274\276\035:U\276\336\312\227\275\364\023P\275\r;\214\274!\335\277=+0\302;;\373\263\275\235\245-=n[\317\275\225\2151\276\212\024)\276Z\367\004\277Es\235>\325\211\315=\262b]\276J\254A\275\372\252\225\276Tl%\275\0261\350\275\341\022\002\276_\350\026\2763\223\375\275\027\323\257>-\262\225=\205q\257<\r$\r>uo\024<s;\210>\02210>\203j\2658yl^>\316h#\273\344H\344\275}\275\363=\024\377\241=H\344\365;m\206\253=\254\351 >2\021;\275\273\265\223=a\002\253=E\272&>\215Mb>u\372\311\275\322\333\324\275\230\034\201=\231Z\213\274\247\217\266\274B\371\230\276\215\3433\276\253\343$=\251\004\214=\343w\t>\325v\267>\240A1\276\330t\003\276\024\t~\276\374\377x=\005\267O\276`\245W\275\235\255\r\276\006\000\352\274\222\001\014\276\312m\331\275\347<L\276?c\027\274m\324!\276\322\364\315\272\216\255\034\276\363\345\005=*!\267\276\202T%>\2437\255>>a*\276\272\341\234>{\243\334\275)x>\275z\337\225\275\322>1>\000A\237=,5\364\274\204\260\251\276E\202\314\2755\330\252\276\222\277c=\251.\n\276x;\005\277<v=>\300\373K>[\037\032=\251:\202>\224\371\021>\257\316\207=\300\256\342\275\027\217\264>h\345O>~\345\233\274L\216\304<\001g\020\276\024\346\206=\315F\243\275\020\314\240=|*!\275sk\217\275\255~s\275\272\r\200\275\301\016\014>\374I\200>f\375E>\330Z\337\275Ko&>=\341\263\273\220\331\354<\002\027\277\273\"\373\027\276O\333\202>\253\353\022\276\226\2609>\250\207\013>.=\023\276\234\321\021=n0G\275}K\000=m\236M\276:\325+>\240Y.\276\363\234\205\2763Sm\2758\014\243=e\271\315=\005\352\234\275\2112]=\365=0\276\335T\215<\003\273\235=m\343\010\276\'n\260>\221\276\307=\362E\245\275\330\201\261=\307\327\201\275\202\336\355\273=\300\023\276\351\327b\276\326x\237=<~!\276^\271\202\276D\201\253>\243\010Z>\374]\371>a\034B>\214\344\226>\024V)>!\344\004>I\251\341\274\266\255k\275m\317\033\275\345\225;>\217\356\210=\330\033\244\275\270\340\036<`\252\023>\375\320P>3\273\250>\025K\250\274\373\227\247<\304\201\025\276e<F\275\025\264\254>\240\010\223\275\326\204\261=\370\224\307=\021vl>Oy\306=\006\010\335\275A\305\261\276\236\022\257>\217\350\254\276\3616\245=\375\034\324\275\r?\347=\035x\t<W\202W\276\027\225\177<\0223\037\276<5\346>\t\244\265\275\361\302\304\276X\351\251>\275\343\371\275\236\037\213\2760f<>\233\217\014\276\330&\200\274\014\310\013\275\335#\341\275\211G\240=>\224 \276\353\2313>\260?\313\275\342%j\274G\277\010\274LH+>\302\203\000=\032\337\261=D\362\016\276;O\035\274\177P\240\276\341P\034=\031\374\212>Z\270\210>\024\367\030=\247=\366\274&\255A<\366z\217>-\271\2329\311\330U\276*\302\365\275\202uI\275\014\010\332=(G\\=P\225~>\017|\271=al\263>\276/\307\275\263\3150>\351[d\276F\343V=@\240\257\276n\'\003\276\327\313\222\274\232\013<>\0372\236\275\317\377\"\275\241\0009\276\376\323F>\366\366\010\276\374^\212\276\361\247\256=\320\023\260\275\3731\260\274\376\030Q\276d\235\037>\223\242\037>\305j<\2762\036\222=\2619\215=^2->\315\211\355=j\211\004=\003\352\253=\266\223\275=Om\262=\030\021\204>YR\257\275\274\301\025\2763\025t=\314\373\262<\007\037\200\275\360\241\257<4\341\035\276\033\3124=\327Z\236=H\000\331\274\n8j\276i\n\236>c\350\254\275\230\237)\275\260\210 \275\335\004\354>\333{\316\273\n\2609\276\362\365\005>\007\\~\276<R\223\276\"\016\032\276Xn\223>8xe>LF\372\275R\231\027\276\3350\004=\341@\010>\276\356\207\275\204T\245=\022?\205\275\226rS\276\377\364U>\307\030\361\275\341\311/>\021\336\035>\316\\\355\276El\002\276{\006\277\276\305\237\275\276\377\022\250\275*\320\\>J.\221\275>\002&>)\300\370=\242\257\366\275\350\r\230\276\"+b\275 \375 ;\220= =\345<\213\275,\344\210=\374g9\276`\367/\275\350r\277=\262\234S\276\266\005\210>\27237>\267\347\217=\350V\007>\211\340N>\363-7>o\037\017>\360\310a>[=j\276\231\200\030>\357\243=\276+\306\016\276\377w\211=\207\366~<N\314\253>\266\251\346\275\300\024?>\230\302\251>\355\373\032\276\201/)=\364;g>\030/\266\274\265Y\231\275\223\323\177\275\200)\274\275N\302;\276\240!\343\275\217O\242\276<\261\035:\331<\000\275\\\003\231\276)M,>6\360[\276\273\302 >|\'s=\256\362C<-\240\025\276p/\225\276\334y\243\275\355\215\024\276\024\343\037<\223\353>=4d\001\277\033\272\312\275C\331\247=\366A\270=f\0173\276\240*\224=\274\031w>\010\257\n\275\251\376v>\205\200\215\275\323!\317>WD\014=\355\332\250\275\360v\312\275]\344I>\341\377\320\275\237*<\275R\366m=\241J\017\275(!}\276\022\254\220=O\026\355\273\017\250\202<s\262j\275\226\347|>\003Nd>\2721b>O\3039\276\0166\323=\250\354\010\276\302\032\266<\313\010\211=Q\333O=\253tt>\244Ij\276l\203\213\276\344\030\315\275F\3479\276\273u\323<l\364\236\267\2735C\276\357^\024\276W\313\321=\214\320\210;\0074\355\276\034\007\232=0\366;=Z\302c\276*\227\007>\2112\345\276C)\007\276\315\"\016\275@no<P\233\200\276\343\363\013>\237Ch\276D\366j\276\030\307\212\273n\371\277>\323\355\322\275)V\214>3h\206\275D\232:\2767 \026\276>4N=z\365\370<\311\226\002>\344\334\014\276\257\004+>\276\2255>%\204\253\276\2073\204>mh\357<\317\213\316\274\367\356\003>B[<>\255nA\272\222\213C>\336\355+>O\234\274=\274\"\022>M\177I>\326\230:>h\244\027>\360\263\207\275;\375-\276a\374\006\276\365\376H>\223K\007\276\001^\317\275\213\\P:<\345\023\274\3247I=\031\027H\274*`\304<\216\357\221>\020\360<\275\004\215\230\276\002+\006\276\200\203)\275i\'y\276\021\237,>\2419\346\274\273\221v>f\301\013>g\352\214>\032\023\002>\340/\214>\323\276\263\275\363\352S\275\023\346\206;\367\304m\276\205Q\340\275\204l\001\276\t\267:>\373,\001>\"\026\036\276pD\203\276\255\246\035>\341\360s>\310K\256\276\326k\256>\203n\313= \034\t>\225\3032\276\005\302\316\275,\260\324=\010\244\230\275H\212\215>\345\006;\276\237_5\276\242Kv>M5`\2769\377\275>\311e\007\276\217zj\275/a$=\tX(>\341\006\236\274\002\346\351\275\274\201\n\272$g\234>2\370o\275\315\375\273\275\306\344\222\276\344\365N=\246\323\245=\363\254\252\275]\247P>^\347\r\276\204\027\026\2763\237t\276~k\207>\\\204\371=\260\267\244>\353\241\010>\230%\033\274K\006 >\r\276O\276\024\210\321\276\277\266\213=\302\304\225=\026\203d=@\241<\275\361T\346\276[@\307=\302\301\203\276+\313\322\275x\247\266\275\223\344Y=[\010\370=I\2754\275l\237-\276\032\r\230\276\3764\037\276\202|$><k\347\274\023\002\355\274\\O%>\364\020\242>3{h\275\256\3635>\273\302\035\276\222\177\030>n\017\223\2765\371\t>Oe\350\273\370\235\002>T\025\253=\005\316A\276\026\305\223\275\303jg>J\347\323\274\031\372\205>^\017\314<\377\327@\275%\345\237\275\033\331\t\275\275:\203>\225/\250\276\026\257\323;\3501\305\275\311\006\"\276\301\322k=d2\321\276X\260\352=\251\345V\275\004\327N=\327\270\247=\203\233(\276\034\260\372<w=\272=P\271V>4\250<\276\000\345\022=\361x\322=\'3N\2768B\202><\010\271\276p\271\312=\312\027B\276u\004\266=1\310><}\305M\275e\230C>Oj\354=\300\321\022\276E\214\004\275\335j\225\275\'\234m\276\200\276\332=\023\263\003>r\n\364=\177Z\014=?g\336;\250zl=u\371\006?\255%\010<v\311\034\276\007mT>\235\312\r>\014\206`\2763\366J\275\246\3619>>\241o;\0056r\275\256\203g=\371\363o>)\347\247\276\t\324i\276\347\203&\276\207p0>\212\241\233\275\330\357\241\2761A\303\276>@\206=*\370\353=\225\314\214\275%\344\315\275\275v\231\274\306\257[>T\022\231\276%\331<\276\362\226j=\347~z>\217\027\331\274#&P>\310\257\272=\347\241X=MKF>\234\352\177>\034\356r\2738\312\316=>K&>\001\377J\276\362\307u\276_*&\276\304\260v>\331<\026\276\007\342\322=\201\247\205\276\023_\336\275\000U\217\275\313b\322\274\031`#<\374\254P\276\257\311n=2\334\353=\025\222\021>M]<\276\345\226\017>\345\202!=\002J\002\276\267(\220\275\373D!>\265K\016>\335\272S\276S\230\215\276$v\021=\250\312\366\275\006E\207\275+{\233\274\2458Q<P6\315\275LlJ\276\206@M\276\242\2502=\215<%>\354\007\225>LU\000\276\275\377\377=\361\232\264>\010\332\231>\217\313\005\276\255[\235=[\207\021>at&=+\333D\2753y1>\302?\037>l\364\007\276\315A\361\275}E\362=\034E\014\271\344\341\236\274!~\247\276r\212L>\306\305\033>\231\372j>i\\`>\213\231K\276\276&\355\275\032\346\331\276S\324\277>a\357\037=\207\324\216>\253\231\002>S\241\231\275\365J\235\276~\352]>G\031I>/\253\247>\233\224\206>\016\005E=\357\243w>e5\244\276]\320\300=\346\t\206\276\277i\344\274\263\267M\276^\307\013>\251\204\257=V\3313<\316]\023\276*\345/\275\3426\351=O6\003\276\361\236k\276\200\t\003=\201\364\021<\271\2215=Y\350\010=\006\206Z\274\212\236\354\275x\372\202\276CF\220\275\370\262\254\276\010\305\267=\220\336\370\275\336_\311>\010\222\260\275\216\006\305\275\031)\267\275Q\374\004=*y\222\274\342\005l\274\271\300\014\276.a\351\275X5\240\275\372{\274<\234)\227>\364U<\276\265+\013\275\262k\357=\342\250\022>\364\241\225\276,^\204\276\214S\251\275\200\001M\276\177\304\343\275^C\007\276zs\002\276\213\225\260>\251\301@\276`\304\t>\221(t>\007,\032\275v\212\344<\211\244-\274,\313I>\207\324\250\276\251\304\307\275\3368z>\234v\310\275\236\233\223>\357k\317\275k(==\350\331\366=f;G\276tZ]\275\024\004\330=|\005\226\275a\235\n\277\337wJ\276\215\215\'\276\313\005K>R\366\346\276UiQ=\234nM<e\357\263>p\002!\276\347\207A=\262\212\247=f\246\202<4\220\020\276\361\376\300=\250>5\276\227\263\341\275\007\361z\276VB\t=a\023a\276Q\303\216\276A\004\314=>\332N=Kk\255\275vK\026\276\002|\324>\353|^\275\253\213R=\206\3334\275\377\306#\276\'8\330=@\305 \276a\004`\2759\261\366\275\240fG\276\313Te=\336E\276<I\203/\276\226=\201\275r\236\204=&\246\270=\033\246\345>\227\r\210\2753p\252=\215~\236\275\353\321\204\275\241\224a\275ov.\276#\242\316=aO\231\275M\030\204\275\373\231\272<.j\207\276\205\256\315\273(\242\006\276by$\276&\324\215=n41>j\274\217\2758x\001\276e\007\311\274\201\316<\276\010\004\216\276E[->\353\004D=\037\250\246=?\275$>\303\354\354=\016\036\025>\372G4>\262`\275\275\210\300*\275\276\203\031\277$`\032>\263c \276\243 2\276\010E\334\2733\370\003\276\312\220z>&\365\365=\246t\364\275\316\332\242=\264\234e\276.\366\313\275\323~ =\266J\005>\300\264\"\276}O\017\276\275\377\322\276\315\246J>\214\\\215\275v\233\344=\214Xh\274\027\311\033\2766\016\355\275\306\335B\275\223\350\267\275b\231\330=\257A\320\274\366r1>\245\261\024>\213\226\275\274\234\t\212>\276iU>\205\036.<\001\2569=.\273[\276L-\342=\032\032\022\275\237\322\027>\245z\227<`\036\034\276u\177\363\275\014\321=>S62>6\252\327\276R\257\262\276r\006M\276\316{\037\273\034z\217=Y\211\204>Vc\302\274\225\233\277=\317\226\027\276\261\310\034\275\215\344\211<\320\320\036\274\003\316\257\274q\325\000\275\234t\347=\240wA\276\013\307\262\275\354\003r=^a\004\276\375m\023>\006]\344>.\241\247\2769\320\014\276\207\257Q=Q\341W>\312Nr=\246Vg\276\230]K\276Db\003>\272\367\250\276\3630!\2760\023\320>\"\330p>`N&>\243\033\034>/\3079=\326\354\206>\361\005\227\276\2202;\276\001\324\216>$\306v<\274\212D>P\376u\276\344H \276\254&\225\275)\177W\275P\307\345\276\010\342f\275\336\3202;\264\221*\276\024\351\270=\360qV<wf\243=\211-\213>\341o\273=k\364\200\275\271\035\005\276\300\353x\276$\353\324\274\227\302\250\275\026\216\023=\206\325->\004B\"=8D$>Y\010-\275awE>\221T\223\272\226z\202\276\2005\306\276|<?=][\323\274\331P\231>\031\313S=\223\305\210=m:\333;\366,Z>\330c\307=W\036:=\225\233\251=\301\322\250=\274\371\250=\304\036q<N\241\303\2765\266\214>E\354w=4\216\354=7\251o=\307\000\365\275c\264\273;\227\350;>\245\261\252\274j\321\247>\026;\267;;\025z=\362J\'>4g\345\2752^\007>o\341\276=\355\261U\274\311i7\276\357u\225>H&\300=\'\032/>\367PF=\210f_=z\345\r\276\204Q\272=\340\3145\276\271\200\371\274\214\270\333\2743P$>\357l\014>\360?\023>\343uw\2760\021\005?_\0341>G\343\232=\324\226\375=bP\225>\330\271\203>\312\317Q>\321\371/\276\355\356\t>\204\201}=\"\212:\275\267z\202\275\263\376\224\276\201\266%=r\354\177>\302-\365\273\256%\214\276\250[\357<h\346q\2764my\276\202L\215\275\353qJ=i&\353=\345\277\231\275w\323\361=X\327\n\276\327\220\353\276\014\"\365\273\312\222e\275\331z\027=\026\227\034\276\210\216v\276\024\r\005\276zM\021\276\025\010G\276\347{4>n%+\275\023l\340\275Q{@=\031\211;\276\033\340\356\276L\354)>\366,~8\270\254\216=?\366\223\275\202@\337\275\016]\221>EnL\276\253V\327=\232d@\275\007_\001\275\030m[\276\2777\220\276\222\312\243\273H5,>Tv\326>\017\274\265<\365\233I>r\377k\276\306%\220\274\355\231\210>\3460\020\276\"aF\275\224\210\017>\214\007\201>\370\374\274=\2662\220>$W#>>Z\252\274@\203,\276\345v\"\276\345J\344\275%\377\246\2768.\377\275H\353\336<`~8\276\213\217\023>{\337h\275\337\"\231=$PE=#\025\235\275;7\210>\324n$\276\326g\222\275\362J\311\276+\244:>\021sy\276-98>\245;D=\004j\365=\307B\016>\325(\341=w\003c\276+c|\2768\311\217\276\317\242\205>\371nb>\023d \274\376\035\363\275\000\227\361<2B-=\227\003n\275Ei\251\276\220c\264<\002\211X>\004\241a\275/\334\'\276Z\"\016\276\343\336$=:\022w>4{G\275\342%=>8f\036\276\325\264F\276\312\014\017=(\370P\275\033\303\020\276\222\024\r>\245\227H=\215t\375\273\351XP\276P\000\211\276\336\022\246\276c\351+\276\273y\020>\347>\240\273\325\222\251<\330\377@>\302d\217=\331\302\342\275\202w\216=wA\344\275\031\365\207\275S\365E=\373\305N\276<\225\240\274a\224\260\276\375\315\016\276\350\377i<\203M\376\274M\350\245\276\347\260\202\2758\035\261<\306\347\344\276?s\204\275`i\323\2744\275M\273\2031\007>\263i\243>z\244\331\275\277 \313>\316y&>|bU\2766\230&\276\307\033\237\276vJ:>\216O\206\275\205\317\261=mDz<2\273\342\275\226\3715>\020\230\233\276\207\320\332=\\\345#\276d?6=\203\002\201\275\021\000b=\307v\330\275\213\315\325\275$\243h9\016S\226\2765\340v\276\231\365V\275M\323A\275\253(]>0l\317=_\005\017\276\311\274\312\274\214\222!>\371\343\205\274\267\r\301=3\371\">\232\\\201\27347H\275~kj\276J\353\005>F\226\032>8\333\205\275UQ+>\325`M>\262\202L>\264!\205=\203?s>\303D\277\2751$\215<\270\025h=\367\2379\275\374\347\256>\346\351\270=>\003\223>\246\200\255\275[L4\275Q\317\300=\225Z\310>\257\037\265\276BB\211\274v^\235\274,\361$\276\245\311\323>\002\311R\276\326\201\322\276\\\320Z=4;\366\273\323\003B\276\013\351\336=h\025\226=\255\002\241\275\327\200(=\370=W\273\361I\204=\332B-<_8\001\276\036Z\n=D<\003\277\275\035\331=x\377\230=\315K\222\276H\206\010\276\241\310\010>\256fP\275>\317\335=\2742\217\276H\230c>8Ma=\223xq= >2\276\361c\257\276\022\2168>\037\367d=A\226\216\274\037I\037>\236\216\"={\330(>H\245\312=\276*Y>\020VP\276\356\226`<\251Fy>d\220Z>\2731\210\275\223\317j\275\215\367\365\275\216\020\343\276\034a\375\275)\232\037\276\330r\272=v_\003\276^g$\276\037\267\335\275`\272\031\276\255\314\263\275\337\322\205>\036j\305=\232\'\233=w\364*\276N\226L<9)v\276\'\240\210=/B \274\007*\037>\036\034\341=|_?\276\'\260\264\276"
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 30
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Assign"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/w/read"
      op: "Identity"
      input: "model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Assign"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/b/read"
      op: "Identity"
      input: "model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc0/add"
      op: "Add"
      input: "model/vf_fc0/MatMul"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_1"
      op: "Tanh"
      input: "model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\007\033==D\311<\276\261_\020>D[*\276\\\210\034>T\265\276\276\010\244f>2\252\217\276\037\271\020>\267\202\352=&\034\277\275\222T\235\275\251\016Y\275\257\242k=0<\256\274Z\303\014\277{z\321\273R\230U>\2735(>\260s\026>\356$\020\276\320\212\231\275v\024\265\275\356\376*\274\274;\003>\035p|\276\032\372%>\274U3\275\260fx\275f8\352\275\204\226\332\275\313\362\304\275N?\214=\232\376\342\276qWg\276\256\004\206\276\244t)>\203\313Y>0\205\027\276?\245\314\275\3555*=i,n\275`6\262\275xPI>\030\340\205=\2412 \276\302\212\003>\017\371\202=\254\300\033>c\032\272\275\356J\302>\206\267\200\275\3763\n<\207\016\006\275r\347l=\302\265\216\275\211`\301\276\322\235\340=T\365\332<\034U\221>\221\263\317\275\224\312\236\276\217\372\255<\205\006\010\276J\255}>\035*\014=*\355\243\275O\336\225\275\0069\263>\236\323\301\276\033\207z=:\353\n=\000\322Y=\265\354\212<\263\372\014>\371\242\037>\375ES>\377\001\236\276K\260\226\276\251h\207\275\003\212\270<\364\021\273>\022\267R\276\272\0063>\317,\335\275`\372\n>\274z\260\275PB\177\275OE\027=&\220\020>\204\201\036\275!\351L\276\020\304\211>\"r;>\261\311\230=]\001\243\275\025\246\376\276\241*\340=\305\253\010\276;\365\214>\241%\340<+W\337=\221\345\317\275\333\223\020>\217\2436\276\212=\330\2767\207\310\275h\347\263>\016\232\230>xE\235\275U\272\007\275]\233\025\276\177\206Y\275A\373\275=\331lP=\310e\326\274\212\230\303\275\013\375\205\276\260\376\335=r\255\350=+\202\003:J\300o>\314\277\217>j\025\373=\213;l\275\243%&>J\220\365\275\232H\027>\351\301 ;\205\000&=\247\333\310=`\223\211\275\267\327f\276|\036@\276\021q\023\276\2074\227<L\377\270\276\320\004\360=~4\254\276\350\203\247\275\250W%>[\004S<D`D\276\024\242\022>\354\364\221\275\017\314\225>K\341\207>\013\377c\275\310\2321\276\2074\007\276I\317\001\276\020J\315\275\224:\321=do->>\264\236\2761\240\214>EI\215\276F\200\330\275?b\031\274\035\223X>/\006%\276\200\2778>\273\342\260\274^]\350=\251\262\204\276,\251N>\240\000\360<\263\261\206\276P\273\021?1S\226=\233\355\354=(\230\265\275R\242\376=\0269\314=oxw\276\221\010N\275J\215\352\275y.\210\275\202}:> \275\214\275\225)\004\276c1+\275\027\t\273\273\364\340M>\361\361\253\276h{\254\275P\336C<i\2621>\223P\327\274A#N\2759\232\034\274\342\253L\275VV9\276\317\240\354==\247\203\275\257\351\341\275\nn\330\275j\3709>\274\'\243>\255\246\361\274\251\324\305\275\263\361\254<\217\303\007>\367\225\237=%\010\300\275B\256\272\275\030\001\237\276\277><\276|\330\242>w\247!\2764\365s>\226\266v>b\004P>\365dT\276P\n\233\276\266\025\231\275\275\005\220<p\317\363<\320U =$%}\276U\037(\276\272r\233>\222\225\300\275YV\262\273\343\235\005>\231\t\317\275\327\357!>\246O\262\274\304\304\013\273\312\026.\276{\300\342>19h\276\360\275|=Ei\304\275b\332\215=`t\t>\363\035a=\230\341\030\276s4#>3\345\263=\376`\351=r\364\023\276k\332\371\274p]\211\276B\221q\276\2167\354\274\"\230\001\276\3667\363\275\220\366o\274k\362\203>\243\217>\276_\314\210>\337i\215\276X*W>\243\251]\275\326*\357\274\227.\245\276\227m|\276\301\356s\274<\330\324\275\246\211\364<\324\204\217\274\257\363h=\253-\226=y\\\032\275\325\325\226\275\374\301)\276\333U8=\251\271e>X\270\034>\250\007Q= \031\222>\303\373\252=U\035\226<\220\245\024>_*\206>\021\343\276=79\003?\254\255\r>R_\240>\"\022\256\275\334\036\007=%2\243\275\033\370}\276\260\242\305>\036\343A\276O\322\020>U\373\340=\277\244E>\334\3367>q1\033\276\"\334\270\276\032\"z\276u6\203>\032\013R\276:\363\256\275\340\314\254\274?\205\230\275\271u\014\275\2536\350>\234\212\035>\230#\320\275\256#\320=\377\215\002\275\256\263\002\276+\333_>Af\002>\267R\311\275\240\314\363\273\373j\310=Z\312\351\275\035\317\245\274f~(>1\320\212\275d\271g=\232\036\213<1@\032>\237\354\005> \221M>m\311\361=\317\361h\276\343>n>\377\277\260<\002\037J><\363\354\275\rc\2329\342\362,>\216\006/>4\177\213\275\205\355\256=\3566\266\276eM\202\275\306l\372\275\241Q\275\276\033\033\\>\337\377\251\276GUU>\234p\272<~\221u=\371\344\263=\314r=<\003\024\355=A$\244=\021h\007>g\010_=\350%\335<(e\243<\316\345\377=\260\217\253=\264\262f>\016\t\247>LPI\276\323\253\355=\345\232\276\2740\322\027>iv\211\273\346e\020\276]\2175>\371p\000\275-\215\371=\276\357\027>S\244$\276\'\271\354<\300\243.:\360_l=+ob<B\365\321=CW\265=\260\032o\276\236*j\275K\361\310>\312\260\242\275\303X^=\211\256\352\275\226\356\005\276L\353\017\276Yv\247>q\327\344=\325\361\273>q\010V\276df\310=P\352\027=\332\207n=4%\234=\334r(<\320\277\240\274,@Z>oP\016\275s\nn\275\264:\016\2759\'W\275\334\257\312>\271UA=\263KU\276\367m\261;;\223\003=\353\032\306>\232\272\215>\2336\342\274N\276,\275\332\370\027\276\355V\347\274\014\363\232=\3629<\276\331Zy\276m\2047>\310\020\231\275\023\350\311\275l\237\216\274\022Q\003\277U\023\305<\010\325\315=[\021]>\033\302r>\345\334\362\276i\260\306\275\204\315\241>\020@b>\377\345\030\276_\237\007>R\263\342=b\267p=*{_\276(gS=\2364\022>p\364S=\220\324\032>\331:\356<\332\326\372\275\367\241\362\272\357\263\036=\304\236\271\274\020\027\014?0\364\226=\233\2621>{O6\276\265\312\036>b\034r\275.\220\214\274\361(K>\032r\016>\337\305\024\276\201S7\276Q7\276;\254\0058\276\214c\020=\364\323\272<\307\236\237\276\335\2407\276\036\374\206\275\002\314#>\363Q\375=\033\321@\272\232g\016\275\025\247\022\276\201\314\200\274\364\314\307>\216\300\033>\"\211\025\276\233\225\222;\031B\363\275\03540\276\242=;\276\016\304\021=\304\311\376\275\377\311(>\312:N\276}[\266\275\210\362\332=F\2362>w3I>\2300\311\274d\302\201>\2144\006>\357,\376\274\253u7>C\204\000<$\002<>\016\271\025\274_[7=\371`\n\276\205\270\274\274\\V\214\276 51>\204`\372=\371\241D\275bo:\275E\336\366\276\344^\361=\246\245p;\330>6>\320\364?\274\033\373\032>\345\311\032\276r\177\361=&\326P>\223\023\023>\334\307\363=:\356g>\366\334\231\276\273pR\274v8&\275s\003]>Edi;R\204,\276(d\023\275\370\177\206;\223\216\364\276\243\277A>>7\205=\231\221S=\220\245D>\270I\205\275\357i\250>\0016M\275^%E\276u\'\230\275\005\301\014\276\247\336\210>A\'\234\276 l\204\276.\254\244=\216:\207\2761t\347\274\372`\326=Po\203>\366\242\202\276\267$,>B\002+\276Dc\356\275\220\362N\275\340\276\005\276Z\277]>\323\246\245:\025\010\261=H=\377<\203\'\002\276\000\206\221\276{\344)\2769-\211>\323K4>`\2127\2753/>>\341\242\312\2750o\032\276\310)\033\273o\345\242=\004\016\211:\240\315\242=~\013s\275\371\236\026\274,\335!\276)u\357\274& y\276\322\247\274=\261p\231<\275$0\276A\"\303\2758\277\304;\017\226\r>\374\326\365\273m\225\344\275<q\203=\311\321\376<3\345\347=+\0325\276\327\204\257=\224\026\324>\365\257\220\276\370\206\254\276\272Yk>\023\221\t>&\371\304\275\022\345\310>\237+\243=\3170\355\273\021\271\211=tZ\337\274\017\352\036>\352\212\357\275F\337\237\275aO\330\275\261\240\225\275\334N\025\276\225\226\235\275\3771\023\276\371u\372=+\"\224\276)\\q>\377)\010\276\360j\013\276\r\237\360=\334\242\235\275\005\322\227>\344\037A=\313aR\276\313\353\200>Z&\276=\244-\020\276\224\213K>n\257\321=z\274\345\274\0010z>E\023\220=\322\236\366\275\270\356\322\274x\364Q>\236n\243>\361\316=\275\205`\334=\372\320A>\324u\217\276\246\350\022>\020\260N>`\205\313\275SQ\261=\227\202\321\275\271\317\025\276\315\263\002>\002;\r>\253\354\263\276\261\030\247=MJ\237\276<\235\265>c\344\373\274\\\216\027>\272t\020\276M\251\005=\221\325\302;{\003?>FQ\005\276\245\035\206\276\232\t\235\276u\374\003\275!4\263\275\373\324\320\276\362\353\217\276\217\245}>G,\323\275\225w\205\276\254\217\003\276\307\204\335=\263B3<\234<\001>\024[H=\354\331\031=\026\0071>^\362\224>=y\253\275q6Y>\360\347m\276?w\232\276\316\242\250=\022c\263\276\245\0075>\361\2106\275\366\001?\275y\020\021> \331\257\275J\335(\276\274z\375\274\226\n,>\024L\270\275\355\306\357\275u\303\251\276\322\334w\276\203\357\035>F\n\374<\226\340\310\2746)\221\275\230D:>Y\303\177\275\206Ak>\235\276\210\276t\030;>\346\367\250>\t;q\275W\315\'\276\274%\214>\266hi\275\330q\245=.\234\007\276\222R\245>\003\0344>\323\273\276\275GkZ=k\034\357\275[\333\3319\352\005\245\276\027\002h=\374\035o>\225\250\212=\030\031\325\275>T\004>>\311,=\n\201\222\275\361\345\237\276\367\3147>\333>\210\275\343\275:>\357\254p>\004[\371\275\343\214k=M-V\2767\316R>\370|\301=X\004\363\275\014\016>>\340\001\213\276mc[=\252(\363<;X.\276\352\201r>\035\354J>\2644h\275\351\0107=5\237T>\'\342\024=\355\014U=\203\332\270<\254Z\034\276\220\327|\275K\340\351=\020\356\276=\t_\032\276\316\022b=\365R\001\276\231\225\253\275bz\003>\002l\264\276\362\345\215>T\n7\276\334%R\275\177\247\214=\353\017`>\227\272N\276\365^c=\375>\227\276\332U\244\275\266\022\227\274\274\244t\274?n;\276\263\034V\276e\202\032;=\274`\276\254\276S>%/\226\273v\017/>`\337N>V\347#\276\3010\370\275\374/\204>}7+=\037\272f\274ZN!\276\007\340\346=g\'\217\276\252\020\347\275 \235\204=\345\244\240\276\255O\035\276l\350\023\276k\207e>\264\347\233\275\220\227\254\275\3528\271=4\225\003?\230(X\27683\353\274 \345\350=|\277\372\275\021/D\274-t4\276\204\211\004=\022\"\325=\311\253\266\274\334\313\225\274\351\376b\276\3766\037\274\002\202\257=I\373\253\276?k`=mY\345=y\"\010>\256\007m<r\246\235>\034x\217\274\014\323\013\276\000\260\331<W\327\332<<~D\276y\213!>A5}>86\205=\305\327\212\275_\201]\275~\n\275>\35315\276\347\214\223\275\007S\237\2758\241<\274\017\253\270=\343\034\254=\274\237\177=\356\316\257=&\325\314<*\345\201\276?\013\223\276\177\302W\275H\360b\276Hoc\275\250q\306\276\265\023X=\245\227\253\273\233R\030;)8\347=d\201{>\316\314m\276\020 \200=\201\256:\275\306\225%\277\035\025z\275\317Y\221=\231\204(<(\236S\275U\375\327\275\347z\237\276\221C[\275\332\232A>\267\240\215>\335N\274<f\240\265<j\3326\276f\3732=Ud\251\275-\236\315\276\223\247\226\276\340\004\343\275\374\347\204\275\307\273\003>\344\013)>I\024e\276\206J\003=\003\346p\276ce^>\366\311\277\276\344\336\222=\2046\031\276\374\324?>\335%\201\275?\022^\276)\023,>J\236\215\276qj\236\275Wl\247\276\275\376\332<\242m\255\274\203z\315\275\241u\247\275\201\300\372\275x\236|\275m\206\335\276\232z\362\273\247\336T\276\261N9\276\362\022\362\274\253U\250=\317\264.>5x\306>\236e\327\274s\022I\276ws\006\276J\372=\276\243\020\305=\t\305L=6\330\251>\023\312\246=\215\361j\274\027\262\250\276\266-\026\276u\200a;yS\246\276\252\353h>;\306\325\275@@\202\275\031\007\">Tp\210\2761\"3> \004\253>\337W\365\274\365\376\n\275\334\362\030=3\331@:\251\361\205\276\\\363S\275\242\377\300\2768?\351\275y\305\204\275\333\005b\276`\213\024\276\374Kb\276\2253#\276^T\034\276\254\311P\275\035\265\252<\010\217\307=\375R\256\274\250\3373<\'\317.\276V\211\004\276\362\1774>\262k\273\275\376r\234=\000E.>+\277\225>T\367\201\275\334A\002=^g]\275\234\'\345<\3160\006=\266\200\357\275\324/\357<&\010E\274oA\036>\230\300#>x?\231>\206\274\202\276u\337\214\276\272<`>;\312#>\310\375\253\273U\266\244\275\264l]>\231\034q>8\344\224>\300H4\276\002.\014>\365u\274=\213NL\276\367\033\242>0\003\316=\366J\233\276\266\312\223=\342\375\241\275\r1\206\276\202/\020>\324:\"<B8\230:\224f>=\344\274;\276l\254\007=\230\367\224<k\311<=@X\230\275|\023f\276\017m\363=\322M\343=*4J>\377\324\025\273MEv=aB\354=\274\232&\275\345\374\221>m\307\337\275\220ZH>\357\230\256=y\363\235=\363U\246\275\372\313]\276\027\300)\273\263\004\330\275w}\020\276b|\227\275g`\023=\251\201\205=\373\016;>\025\212\311>@]\034>\204Y@\276\231,\224\276Kv\037=\025w\263\276\261\262K>\006\220\230=\235\360\207\275\322\240\254=):\360>,\306~>\216\356\216>8.r\276\255Z\375\275h\367\212\276Tl2\276\247\377^\276\250\025\\\276\362\260\225>\233\256\034>\241\346H>\272\322^=\253\027/>Jr\242=d\373\205>\242\205\361\275\272\253;\274M\303N\276*\316\031\276\335\335\364=s\336\026<\025$\323\275\n(\247\275\311\r\306\2757O\207\276\323 />c\210\276\275\313\237!<\346\001\266\276\030\353\251=\323p\272\276\240W\233\276\3753\367\275\351\362\016>\364\313\304\275\006\356\306\275G\3254=IQ\234\273\364\n0>\020\035K\274\233 \224\276\2161\354=\327\224\261>d\326\200>$^V<\326AK\276\323\355\313>\204\004\321>q\267\007\276)\002s<\t`?\276\267,\211\275y\013\027>\265\255\214\275\217}\\>\016\n\035>$\321\217>\037\343_\276\374J\335;1zH>\300\315\372=l\377\026\275@\003\003\276K_\203<\376\276d>\004J\204=|\222<\275/A\033\276 \334_>\034\356\032>\307\034B\276\2140\303\275\227\004e>p\363H\276=\233\230>\356\005)>i\270\004\276\342\335\247\275f$Z>\320\367\246\275\377\030n>\031\305\237=\337\335\236=\345\217\250>\211%\246=\014%\021>D\360\370;L\016v\276{\315l>y8~\276F9(>\262\321\362\275\346\257&>\215\221\300\275\352\251w=\025\260u>\371\314-\275\010@\373\275B\2777\276\345\234\220\276\3032\354=\312W\304\2744O\017>\004\'\216>\301\207\226>\355\314R=\352\034)=k\330\244<\344A=\276(M\004\277\344\366\t=\227E\214=\212\031\341<X\210Z\276\360E\224\276\216\025x>\355B%\275\201X\035\276\016\255\217\275F\362\213>;\253\313=Nd\020\276\347d\215>n}3\276X\356\243=\212<\246\275\341]\217\274!\257j\275(\t\'\276\343\316\377\275\317$\372\275\265\270\205\276\006b\231=\332\333\266\274Hy\020\275\312}H>)\037\215\275-\225;>\266W\005>\002\273\000>\252\353?<\316L\001\274\352\375\374\275X\372\177\275$\324\366\271_}\177\274mf[>\206\3444\276<\326;\276S\325\310\2758j\224;\313!\244=\224\343f=-\316\023\275c\r\251\275\262\032g\275\202\210\333<\035\245\306=[\301\227\273\327h\365=4\252 >Vg\026\2769\026-\276\324\323\216>\271\205\010\276\224\220\253\276K\260\232\275K\260\354\2767\357\267\275P\272\031=%1:>\000\332\321=\376cV\275\312\371\026\276\0344L\275\226\177\373=\336\215\215\276\216+\256\2750\231\246<\204\023\260\276\236\224$\275\345<\377<^\020\366\275Q\353?>\374\036\000\276c\200\201\275a\273\000>\032\241r\276z\341u\276\014;\037>\r)\255=@e{<\237\026O>\376{\301>K\261p\275\004\304\323= \204\320\275N<P>0y\220\275-B\351\2753\317\227\275\371c\335\276g\354\016\273\000jb=\321I\325\275\331\026O\276\305%,\275\360\017\377\276Y\350x\274\301\320\r\276IpJ>\035\213\r\276R\367\261<\271\024`=z\013\272\275\206Q\022>\204\367A\275\370\214\242\274\204\330G=\014\000*=\376O\354=R\2748\275\370v\"\275\274\345c=\342\242\203\276\225\025;\276\014\337\377=\030Z-\275\377HM\275G\242\363=W\373a\276\'\334B\276\307\236\213\275[\344\033>b\222+=\351J<>\350\265\245>\027\351\347<\000\324\037\276\374\271\254=A\231\200\2762\344_>\325\302\014>\376\352!>\325\242\023\276\212\007\216\275@\300=>\322G\305>\253\321\000=\250\201\307>\233e\224<}*8>;\344\237=\340\274\013\276\260?3=\361\234*\276\247O\031\276\342H\226\276k\177S\274]\211\005>\317\357i\276\342g\375=\212+\031\276jz\352>\005\337\257\275s\3552\276\307\336\267=\221\347(>\226\3451<tH\002\273\252R\014\275\nD~=#\325\223\275\031rA\275df7=\246\372\342=\214\306\221\275\276kD>\032\324k\276\261Tp=\341\265\372=KG3>\275\372K\276\"DI\276\212\356\032=<\327\343\275S\374\301=\221\217\231\276\026\363\003\276)\371\235>\275A\367=1g\343>P\240^>N\246\327\275\257\002\317>;\005+>\215\371F>\022\331\214\275\347cn\276\227G\271>*\2425=\236\253\032>\t\000j\276\252\331G\2729\035\236<D\350\215=Y\253<=\037_w>L-\273>\366\273\036>\366\343\216>TU\211>\0375\034\274\2445\211\275l\210)>\013\232\322\275\216\324\034\276\021\375\031:\354\035\327\274\002\034T\272\220N|\275\013\242\242\274k\000K\276\371\305\356<\343\016\247\276\0058\247<,\010@\276\267 M\276\037\330\244\276\352T\242>Q8u\276\026\300\214=\305\333\221\275M\342\317=r\251\370<\244\365*\276p\243\241\276.\007\353<\357\360\207=\222\006I>\272\2160<n\034\217\275\001\022\303=\310\311V<\360\000\246\275D;f\275\001\014L>\222\030r\276Q\212z>\342o[=#l5>\324D\330=\332C\031\275l\320\275\274\346\236\307>\"-\265\276\263\032\014=\333\302\232>?\013o>\214H\207\276\226\312*\276\367/\030>t\313\304=\tc\351\274\221P\226<<\330?\276\271\277O\276\032\262M\276P\223+\275\362*\211\276\303\227\335<\007\366F>V8\266<\322\337\311\276\022q\020\276\374:d\275\343\250\242<N:9\275\020y|\275\236\277s\274\310{\332\275\374\263\316\275y\267\213=2\032\242>\210Z\035\275\350\025.>Y\206\016=\177x/=*t\244\276;\332\226\276\222\306D>U\221\033>:j\347\276U\246.=\234\205\223\274.c\276\275 ?\224\275R\230k\275\210V\234=\272\273\255> \323$>\002:W\274\016/\210\275\217\270\347>\321@\307\275\256\007\325\276UQ\030\276\365\252\t\276\0355\271\276\361\366J\275\\1\312\274\327\213\34085\206\201>Y\225\250<\374q\t\273\202\021x\276\356\031\373\275].\314\275t[\002\276pyR>^n,\276\253\344\004>\243 0\276b;K>\261\005K\275j\016\266<\272s\236<l\301\224\275\365\322\244\275E\010\357\275\206i\033>\222a,>kJ\273\275\013\275c=#\303(>ZY\213>j\365\252=u0\030>`\265q\276\352\000\226=\210\337\251\274+\311\256=<\031\232>\262\220P>\177\210e\274\313\014\371>V\201\220\276\252\332\244=\007\365<>\226R\316\272\236o_>\010,\271=.\346\327\275\365\376\326=\275\303w>\325\241\304\275!\3173=2\\G\276x.%\276z\027i\276\nL>\276I\200V\276\344\366a>\334\360O>\353<\004>\000\221\312;\240q\200>{\311\320\274U\336\214\276\\\207*>J\r\201>\367\362\376\275}\356\214>\276\351\005>z-\347\274\235\360\024>\316\317B>fMI\275@\357c\273f\373\344\274\207m\214\275W\364\207>\031\274\377\275\266\303\213\275\353\232\t\2766k\037\276%M\353\276>C\023=\247%\342\274\315\017\306\276\240=\306=\312>w\275\236\034,\276b(O\275\333\241\032>\003\230#=\304\021F=\214\356\206\275\206\346{\273\017\374I=?y\016\276\212\213\013\276\007\360\027>\326\303\323\275\341\256~=\376f\310<\023\202\270=P\3407\276\016\373\244\274p\363!\276\256\255\347=\201#\346\275\343\2113>\353\321;>\366\320\246>\254\206J\2740\016\264\276\332\022\226\276\312\334\212=\035\006e;\027\246E\276\350\0204\276\002\004k\276-\255\361=16:\275m\303\231> d9=!\312\221\2756\3163>\3502\244\275:\241=\274\333\361;;\375ZI>\271\2076\274\031\355\241\276N_.\276\371\314\322=\3630\234\274\374\253\024>|\325\324>>4r=\003\032,>\t\030\245>\225(\313=!\267-\275\250\360F\276\322a&\275\271\020\337\274\253\225n\276\216g\350\275\300\267\177\275s\3372>\350\207\177\276\236\301\255=\304+\330\274\006$\363\273\251QH\274\331qa\275\n\002e>\362\023\230\276\230B6=\346e[\275\211\021w=oV<>F\374>=\344/\341<+\304\261\275\312\365\224>w\335\n>\020ox\275\022\026R\275w\372h=\245\325S\276R\346.>\236\233T>\351*\265\275\233&\016\276\252\214G>T\3406=\224o\004\275\334\372\207=+\364\r>\342\244\246>Z\375#>A\3230=\003}\307=\261\032+\275\334\357\216\276\224)\364\275\335\335U>\313\340\340=\227\206a\273\265\253\014\276\3561\026\274e\220\021\276xn3=5-v\273h\r\256=\303\242b\276\353\320->]U\342\274\246\205\341=\017\026b>k\210o\276\327\367\236\276\307\346\373\275h,\325>\\\254\245>\035\366\314=+\031U>\"n\316<\214T\226=RM\266=\211\354\220<_\271\376\275\251\3322>\026 \215=\331\353\361=\021\276\323=\021~\321=y>\270>GB\005\276\327Xi\275X\021\034\274u\373\372=\213\235V\274o\203%\275`s\362\275A\270n\276]r\223=\377\024\237\274\241\035\343\273k\207\t\276QY\234\276_\304\224=\035/\302=\177w\324>z\315\'\27551]=\311\025\377=\234\332\035\276\255tA>\357\177m>E<\223>\364?d\275\330\227\010=-\267,\2761}\002\276f-\260=p\033\320\274&\377N\276]5\317\275tf\002\276\343\355\364\275\234\332\223\276\253i\020>\222\231\t\276;\273\010=\327\230\325\276(\020\351=\366hj>\236\353e\276\241\030%\276\0227\325=?\224\001?*c\367=\254\036\232\276B\340\357=\200b\036=\232\274\260>\222\201L\276\227\235\204;\2034]=J\301\337\274\036I\227\274\212>,\275\256\213\273\275\016\006\226\276\315\225\026\276\336\001\223>-R=>\332T\000>\235\230\371\275|Q\257\276ET\257\276\204\224\032\275\354y\227=K\250I\276\022t\306\274\205\356\017<\375\323\004>\301@\014>\373/\350\275\266#6\276\273@\202>?\224g\275\021&\240\275%w\202>\024FK\276\365V\243\276\004HU\273\266\037B\276\024q\227\275_ij=\037\342b\276\322hx\275\020\225N\275?O!=6\247\215\275Y\377\223\275:\246\270=\177+\232>\236\223X\276\304\017\253=\304dQ\275|\304\235\276\355\352\004>N\214s>U\022\226=W\006t\276\343\314H>VH\201\276\3711\213\276\016\314\014\276\030\257\325=\214\034\264=\014\265Z=\336n\256>\263\260\224>\243\273\346=\030Pe>\007\251\020>\235J\236;\370(E\276\201|\231\276\222\314a=T\346@>\261f?\274\'\"j\275\347\274\313\275v\242\237=;R\005<h\3276>WB\316<-\246\005=CJ\252>\377d\206>\344\273\022<\025\246\306;5v\003>\206W\302>,e\213\276\023\0141\275U|\016?\374u\034>\017\306\326<\363\314s>\033\376a\275<I\342\2756\2059<!\230j>\t\207A=\355{x\276m\010E\276\273\346z>\271\007\022\275x\237e>I\200\000\276t~\342\275k\230\310\273a\231\321=1^\226\2751:\226\276\221N\235\276\225N\343\275\211\265\345<4\215(\274\233\334/>\373\322E>\241nk>G\217\205\276\364\014\036=\323j\214\276%\235\375\274!~b>\016\037\217=C\202\003>\344\261C>\n\364f>pp\230>\206i\212>\177\266d\276$\366m>U\376\025>\272\352\235=\334\320\217\276\235\305s\276\'<U>\300\342p\276\324\364t<\244\266m>\276\331-\275\323\225\013>\004\360\350=\302\237\310\274\\j\256\275\375\001)>W\346)>3\315\270=\311\221p\275\023r\214>,\325l\275} {\276\204\354c\276I\367:\276\025\'\225=\267\271\260\2763\332\231>\374\032S\274\361\031\356<\340g\207\276\236\320\001\276V\216\000>S\267?\275\335\211H>\301\225\025>(\256\036>\350\200\002?Fa\310\276;*{<B\355X>\275\320\255\275\341,H\275\037{f\275\262\202\014>\327\351\362\275%n\245\276W\361\260\276\031\365\236\273\0354\364\273\375\335\240\275W(>\275,}\353\275}\266\203>}4\"=e\221\200\275\224\205\343>\030\226\220>t\034\017\276\200J\346\275\223:\350=\202\213m\275\017F\235=;Y\245\275\351\336\237\274\364\261\305=\201\027S\275\354\277+\275\026\317\245\275\276\234#\275A\207i\275\246YJ=+k/\273\001O\363>\200[\r\276\3528\267\275\224\305\254=\232V3<-\340Z=$\350\206\274\3415|\275\361$\337<\037p\325<\204\177\211=\216\273\374>\235\346\216\276\200S\216\275\016\3205>]t5\275\337x\265=\256R\226\276\253fS\2764Y\002>\241\002\225=H\244M\275\373^Y\275\002S\230>\236r\273\275\210\022(>\337\266\200\276\337\204b>\302\177\035\276\327\001\r>\302s\364=}\272\331=)\343\363:\204\251 >\372?Y\276Q:+;<=\200>t\025s\275\272\276\210=q\221\311\275\335\315\361\275\257\253g=w:\014>\"\323\365=bTN>\306 \220\276\332\364D=\322\033\314\275\331\321\240\276\236\326\234\275\036\346\206\276\021\251\247\275\226M\206\276\245v\216:\220H\006\276$\260@>\016\324\247=\367\275\362\2752\242\214\276:\275\023>\034\342\200>\271\250(>\357\rg>\254\242\345\274:\202\007\275\301hf\276\274KD\276\354\241\001\276\351\3268>\020\223o\2749.M\276\306\273\262<5\262\036=\240p\372:\224M\246\274\201\211\271\275\272L\341\275=\326p>\004\305\005=\301&W>^\017\t>\220\237\006>Bc\350\275\374*\232>\36302>,C\270=`i\206=\326r\304>xd\233>\211\225,\275D\362\310\2764\316\310\276\310\353T>D\224-\276\205\227\006>\005\241\211=\275\235\270\275R$\354\274-\013W\275:e\207=n\374)>\377\325O\275\203e|=\017\327\177\276\370:\304>y\274\237\275\360\200\241\276!\370\236>\343ac=\346\301Y\273Xz\222;O*\254=\370T\275\273\351\274o\275\177\3652>\225q\344\276m\027\233\276E\001,>\204fX=9\271\370=\347}\231\274\217=\245\276R\002\366=\030\270\017\276=\002\305=$\204\370=:\227V>\274\206\303<\372\"\243<\273\323\205\276\'\204\371=\211\316\303\275#\336\224\276\254G\235\276\253\332}=\265M\203<\242YM\276\357\300i>\345(\022\276\027\177$\276x\002\232\275U\254\036>\226\302y\276[;]>\271:\032>Y\366\252\274\237\212\303=\212\351\357\275\321\313\031\275$p\241>\364\307\002\275\005\020\263<\362\260\"=P[,\276G+)>\330-z>\267\376d\276\254So>\266\022Y=Xb%>\2661\252\275\207AV>\212kR\276\340\337;>\016\311\366=\305\362,\276\377\270$<\303S\320\274E\365\264<\025\220O>\303\254\003<\363\353F\275\373u\037\275G;->E0\016>\340\352*<\352r\211\275j\036r\276gw\207\276\352\312\r<\276\223.\275\032}\305>9\351\225\276\351&\337<\237P\244\274\0052\244>\376^9\275B)\301\276\017\300E\276N\025\211>P\002\211=\\\2700= ,\322\275\t\253\217==\004Y>\215\014\222<\311\031\022\275\346\256\022\276"
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Assign"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/w/read"
      op: "Identity"
      input: "model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Assign"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/b/read"
      op: "Identity"
      input: "model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc1/add"
      op: "Add"
      input: "model/pi_fc1/MatMul"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_2"
      op: "Tanh"
      input: "model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\014\225\313\275U\017t=\r\026v>\3412Q>\3565\226\274B\314\371\276\267*\241>\322\364P\276\347\005\243\276\323H\337=\220\237\225=\255B\340=\n|\231<\226\177^>q\310\337\275\247\260$\276H\304~\276@\345\022\276\356\311\343\274\337\377B\276|\262\242\276\300\016\363\275\t\332\203\276\321}B\275\262&\233\276A\206\260\276\303\372W\275\243;\347\275b\245\256\273\035.\221=\304\260\002\276\376u\330\275e\333\272>6\326&\275~\3604;\210v\000\276Z\326\016\276\337\237\305\275\362\330\234\275\276\271\301\275\360@\302\275\206\t\247\276\313/\276\275+nJ=\240z5>\340\036\345=3\010\036>.-v>p$\035\276\031\232K\276{\376p\274Q\367#>1\226\022>\223+\000>\240\t\004\276\347\006\031\275|\363~:\261\306j>\242\277o\276\246&_\275\364+\025>\223>H>\306\251\245>\000o_\275\323\210\001\276\246\232\222=RFV>\032\347\211>\247\306\222>\233Y\222>\034M\327=)\324\374=\256c\357\275Lj\214\275\216n\242\275/\272\262=B\222w>.\217\034>\253-R=\311\320\267\275\025XM>\361\205\376\275\303\020Z>\316m\024\274O\242\014>\230\241\227=7\300G\274\237D\202\276\246\347\200\276\310\240C\275D\366!\275\232\340\327=/\314)\276DT\321=\026\026\254>\364\266~=\345\030\346=%z\007>\246\3465\275\257\334\027\275\t\t\234\276\032\316\014=\004A\224=P\315\026\276\2178\214\274\017\267p=ES\316=\262\020\240=\035\265\231=\221\020Z>\3411\277\276\017\266\334=\262\363\240=\250\344\370>\001vN>\342#\327>:~O>\332-\022=\017B\016\276\311}\336=\327<T<T\325\266\274\3126\000\275-\030\336\275\3735\244>\037$\220\276;\346\000\275\276\0307\275\233`\334=di;=\027\206\226>Y\013\305\275>\333{\276K\252\306=\332\203f>_\312%>\321\213G\276\225\030\000=}~\357>\026\233\027\276\003]\275\2753-\321\275q\300\307>\356e\035\2754\223~\276\001\025\310\274b}\213\276\016\024\033\275\266\352\377<\341\275\230>\0055\222\276u`8\276-\347\313=\031y\'=\034\217\340\274\3413\030>(\372\254>\203n\227=$\314\213\275Z\261+>\003\354\210\274P\337\217\276\217=\204>f\210\340<\305\200\251\276\244\302\n\276[\014\224=\024^(>\305\244\036\276\267\334\311\275(\025y\276\000W\004\276\025\273\034=\256\244];q\216\231\276\255\"\274\275S\357\256\274\310\307\226\275!9\217=+\344\233;N\254\250>\226\036\245\275\270\003\362=\316\360v<\362\300\226\274\363O\232\275?D\302\274\260Z\201>4G)\275]\204\241==\237\347\275\234e\233>\244\351E>\245\224\206\275\024x%\276\375W\216\275|u\017\276\334\372\321\275\366\030o>\016\212\231=\346\357\304\275\322\336\226\275Eom\276\236L\017>\304\002N\276\262\006\233\275\2773\320\275\274\370\205>kh9=6\003/\274n:\352<\017S\211\275\313\375|\275\355\377\216\275w\235\250\276\"\312j\274\366\\\">6~^=O\306\314=a\367\211>\253\262\004\276e\036\225\275\251\027\230>g[\321>1\205`\2765\022 <\350\244D\276H\032\245=}\2360>W\216\203>z\342\016>J\354\326\275\217\213\263<\325X\241<\330\034\303=\354\260\204\276\024\233e\276tz\374\275\266\r \276\350\262\272\275\355n\200\276\210\261J>U\201&>\340\026\312\276\327\236\023<\256\n!=\340J2=\014\177\304;l>\255>Hu\\\276O\206a=;\r\316\275\355A\221\275\350#\030>3\032v<\004\254\256=mw\220>\370<\223>\005\001\263;D\021\000?\037Z\257\275\020\021\317=\264\033\224\276~\031\';:\345w\276\356\352\216=rK\314\275MN\"\275U\026\037\276\225\251d=\034_\256\276\007\227\225>\316\257e\276+XP\276\025\035\213\274\243\351\240=\361\000\207\276\252\347*:\250G\361\274\177\2332\276\333\263\276=\3254\032\275z:J=`\317\220\275\351\267\213\276r\347O>\315CH\276.Du\275\030\255\226=\246\030`>%O\256\275\344\330r\276Y\037a=\233.<\274,\316q=L;\000\276\277A\364\273\007(\200\274\361\314z\275\236\363@>\242\234\205\276F\003/>\224\254|<\234G\344\275\377D\007>\267\366\230>nW\242<\036o\313\274\202\356n\276I\'\025\275\377w\251\275\205\1779\276\222\010\000\276\377\260Z>&\340\255\275\365L\352\275\221\272\037\275\334\260`\276\213P\205=\233\306i<&\336X\276\302\2236\276I\271s\275\2045\314<(M\262=\203\207\320\2754\255S\276\347B>\274\275\334\203<\230L(>\377\327\237\276kz\031\276a5\336<\356\310M=*>\350=\tR\213\272Z\345\304<xG7>_\315\321\276\270{-\276X\353\241\276Y\314\252\276\203\313\234\2765h\221>h\344->\177\014\350=\227\200\007>\277\\x\271\207@\327\274n\270\340=\3117J>_\365\367=\314pW>E\210t=\221\0316>^\324o\276\350\206\225>\271W\334\275Y\211\021>\230\202\277=\204\322t\275\3518\022>>\300\203>|]\364=\227w\270\275\344\346\260<!g\201<\255c\274\275\220I\316>\224:\026=hod>\327\205<\275sm\250<\003\302(\276g\206\211<:\335\252<\354\177L>\277\374\036\275}r\026\276\273\251q\275\312z\366=\236Uj\275\036K\334\276\330V\003\2734\200<=\346\267\372<\351Y\243\274f\320\376\274\2626\363\275\314\340W\275\203\'F=?\341\325\275\314\254I>\177o\201\275\342\210\226\276\001\300F=\033\335!>>\377\000\275M\215\262>\271\301\313\275\232v\224=\240=0\275\314\027\010?\2432\r=Z\225j\276\365A\273<z\2732\276CZ^\274,\214\327\2758>Y>f;\030=zr]\276\202\217v\275>\032\355=P\200%>J\032\207=\334n\351<\223\213\205>\354\334\014>\272\272\222\276\250\234\215\276\325\245J>\230\306w>\002@\205\276\205W{\276\310mF>VB\245\276D\316u\276\313\350\3549g\306\036>\2539M>\276\310X=u^\307\275\")\r\275q_f\276m\010\213\276\206\224f>\027me\276\364\335\026\275\326j\344\275\242\336\027\276\235\242,=[#\237\275p\304D=\300\236\">\275\020\'=\2157t\275\240B\240\276@*\323=\214\013\244>\350\032Y\275\311\232[\276\346\000=>,\362\206=\377{{\274h\177\361<\227\375G>\220\260;>\377\255\320;n\217#>\255\302\337\275gU7\276\376\317Y>\327\255V>\357M\241\275*JJ\276J\301\r\276\330i\242\276\303\277\226>\027Gf\276\336Zd\275$\225\003>\355c9\275\324\353\001>\235\224T\276\220\007$\276_A\207=\332\232]\276f3r=)\022@>`\t\021\275t\022\200\276\351\263\033>#>\226>\276u\212\276\241t\343=S2e\276\310\017#=\007\354\332\275\014\327U>v\242\361\275\326\027\375=3\254L\274\323Y\335=E\264\226>\251{\234\276\020\2717\276\t\355\225=8*\017=\t\223\302=\224S\037>\231Z\213\276\334\271n\276\332\346\265\275\325K\220=\327?\250=P5P\275\327q%\276W9\002>\016\274\035\276_Z\347\275\006\257.>\217l\350\275\275\275\236\2753SH>\263\000`=(J\361\274hx\242\276\024\304]<3\233m=\200C\232\275\010\301\243\2738\3652<\207\000R=P%\235>l\260\177<\322\230\016>\010h\003>\326\264\242\276.\374\263>p@\036=\376\244,=\234\254\275=\235=\244=\030@%>\326w=>\212\253\006?0\356!>\241eu\276\376p*>c\307u\274\2255:>\005G\026\276\356a\203\276\274_\031\276B\204\221>#\361\325=\'\230\213>s\204\243\275K@\375\274a\326\226\275p\324\334;\034mZ>\255\2063\276JWF\276\266H\265\274\253>\\=\215N\373\275)\330\303>##\232=:\343\033>\364[!\275x6;\276\016\246\337=\232\360y>b\277\247=x\023\246\276l\006\377=\026\263\246<8\031r\276v\350[=\316\302\203>\232\352\003\276\306\035\275\276\nu\224<\014\2051\276k\216\312=\265\365\214=\004V\240=\246A\320\276\027\007)>#4C\276F\227T\274\310\2007=\032\221\214>z\272\305\276\201\025\203\276\272K\304\275\377J\366\274\214-.=|\377l=Z\177i\2759WK\276\205m<<f\320\033=\223\344%>\356\262\213\276g7`\275\363^\200\276d6a\275\031\251\216=\333?\234\276a\220F\276\030_\023\276T\217;>\035(\273=\360<\354\275\365\357\275\275\277\224C\276\237A\374\275\'\262<\276!\024 \276\336\303O\276X\004\200=\206X\261\275\000\305\370=\001l\330\275\337 \264=d\260*<l\023\262\276\010\326]=i\2738\276UO&\275\"\tb\276[\322;>zyS\2762\000\255<\023\200\330;\031\021?\276\351\'\357=\353\327\000\276\203\200\234=M\0246\276\222\211l>9\316\265:\322S\315>\213\315\262>\257m\341=\240\205\375\275x\344\250\275\335\020\334\273\360\226\r=T\263\"\276S]->Cy\t>\242\213\003\276\331^\307>\017P\317>\021}]\276\322\210\216=&\232\355\275\244\007\370=\352\"\210\276\000Y\257=\333\204\237=\373<\201=\177\262.>\301m\002\276\376\'\366\2757\3334<zlW\276\304\226\345=\271\332\036>Z\307\276>R\371\021>$\033\236\275L\2319\276\030i\031>\273y:>\216\372\344\276[\254\216=\'\237\253=\305<\271\275:(\001\276\232\264s\276\211\262\215=\334L\214\276\314N\205>\352g\373=\322Z\344=b\375\307\275\"z\025\276\245\300O>\221\215\375=\037\333\225\275\003\010\232<d\027\254=\373V\362\272\031\232\325\275\336\245i\276c\336:>\353\327\234>\'v\201\275\231\005.\277G\237\021>\370\227Q\276\253\t\277\275\'C\346=6\222:>\3063\034=\r\261\375\273\310\004\366\275\017\344\207\275\352\373G\276\022)\245\275\256\354W\276X\213\235\275\212\376\306\275W\270\366=\243\351#>,C\211<5\242\362=\341\336p=\350\311\300>\327\001\263\275\217\217\025>9\016\242>\266\032\273\275\006h\312<\335\013~>\203\202\233\275\032\001\346<\243p\303=\341D\243\2752\272/\275\251-;=~\265=\274\311\363d\275\177\373D>\324\375\214>\342M\336<\034\355z\276P\307#>\002\266==)R\334=\246\374\314\275\227\226\203\276\025\025\253=\'\231\024\276\201\035\267=\312o\322=\255S4>A3B>\376\272?\275\031\225\013\276@\353m\276\255\225\027>\000\031\263>\205n\364=\255x4=8\302!>8\306\330\275\361:%\275?\274;>y\257\325\275\266 \034>\007\272j\274\304u\005\276L\277\232=H1\261>\321\203\247\275\013\324(\275$b\207\2766+\217:j5\340\275c\033\234>\'\336F>\246\231\334=66\216\275\035\375\014\276\222\336\365\275\301\221\341\275o\222\214>\202Z\244\275{\271K>\325\344\324\276\343\222#\274\254\300\356=\267*\254=Um\341\275\023,\003?\355c\377=c->>\374\374\361\275\351\314\025\275\363\324\005\276\267\2122\275n\365\\>\022\336\036\276\272U9\275$\001I\276\276gh\276\303}\331=A\027(\275\3172\030>v\312\271=\260_I\276\333a\025=\014/!\276q1Q>^.D<\304\226\236\276\205\010C\275\232`\020\275\177?w>S\032;>\032O\023<\220(\262>\334\275\226=\370*+=\302\026\202>\027\365J=\2250*\276\023!\262=\023\212\241>\203\305\356\274\321\205\322\274\331l\007\276\002\264[\275\306\030H>\236\2069\276v\271\203>\302MN\275\200,B\276\030\307\016\276\217\217 \276\376\251\327\275\306\037,\276\006\315N\275\016\311\027=\033\2776\275=\272#\276\374wt\276\210\263\'\275\316\000!\276\031\211\327\276r\274O=0\232d=\374\366\337\275Q\354e\2745\nn\276\337\271\007\275\244U9\276\210m\034\276\"\363B\276\264\277\323=\201\3128\276k\273\223\275\356\253\223=n\364\233=j/\220\275\340\207\315=\030\252\263>z \252=\345\247\025\2761Kd\274u\375\223<\217?\020\276\326\267\261>\205d\204\276\252\374A=\252\246\223<\270\021\242\275\220\241W\275\251\224\221=\021\274\033\276|m\002\276\010\035\016\274P~\236=\303\216\222=ht\264=\026\277\256\275\327Mj\275\202\0260\276b8\312<\331\000\255\275\'\217\022\276di\274=U\316\345\275y#,\276Q>\r\275\362^\250>\233\261\226\276\262Z[\275\326\271\214\275\320c\304\276\345\340\206>b\307\325\276j\315i>u\327\032\275\300\023\344\276\322U\262= l\257\274s\212\357\275xu\207>v`\016\276`\312\030\276\031\303*\276U\030\177\276\022\035n<\031\354\210\276\320q\275=D\342%=W\317\223>\001\364\233= [W=\312\\,=\275}\356\272}\013k>\230\002\214>\010o\003\276\3238\332>`\3636>\2235\354\275\206J\255\275\035\354U\275%\204\201\275\241)\302\275\230Z+\276\025\2109\275\npi\275\215\223\260\276\374\262\247\276^\003\007=3\007\261\275\340\256\317\275\304\213\037\276\351\024\000\276)\220\020\275,z\002>\230C\237\276\215BS\276\245y\034\276\211\343z\275j\032o\276j\226\025\276\222m\304\276\027\341\376=\376\300\336\275\330\224\201>\217G\334=\331\257\251\274\333\202\242=\000\327:\276\243\214#>B!B\276\320u\r>\257\006S>\037\232!\276(\214\033>\261\024\010=\343\233\033>J]\304>p\225\211\275\312|\252\276\346\370,>\200\231\234\275i\231\265=\306\374\010\276S+\233=Yf\031>\211\372\023\276\245q\247\276\350\377\177>\305\206\230>\243u\205\276\3046\016\275\35394\276\034\323d>\000uD>\t\030\323\275\353>f\276r\037Q\274\\g\344\276b\320c\276+\376G\276O+\262\2759\357\315\275\242\336Y>\016\2332\275\004It>\022)\213=\306\212\222\275\315~T\276\rq.\276\351\201\017\274\227I\250\276J\310\325=%lw>2\356\213\275\217\025\267\275\030\370\362\275\350g\215=\252Z+;\036\324m\276\245\305\274=\2073\263\2751g\336\276\262#\022\276\n:\004?m,\373=\312\221\272\275,A\"\276\222\223\023>\273\342\212<~;|=,\353b\275\031\304V\276?$\272=\255\317\213>\325\016\261\275\212\231\\=\021\2503=n\216\342\274\335\025:\2767\300K\276\266\213\026\276\272\276\316\275\320L\306=\223\332d\275M\013\253=l\236e>\001\217O>\304\345\357\275\251\330R>\236\251\265\275Y\020\326\275df\307\275\254>\025=\211\3773>\r\367W<\007\001^>\365$\322\275\227\205R<\375k\006>\n\334\202\275\233\206.=N\360c\274\t\270\016\276\270\314\214\276o\345\337\276B\316\243\276\001\320B>\223|\363\275\346\217c<\3110\205\275\3260\252\276\204\212\r>DP\332=C\361\016\275aPB\276\267d#\276+S3\276\373\240\214\276\246]\004=\212\343\260>M\205\341=\267\000\360=[\3010>\025\311r\275\204\356V>\300r\016\276\372\242S=\340\'T<\357\245(\275\023\307O>*\360,\276\'\253\230>S,S\276\263\243b\276\204\257K\276\246\264m\276\037\304\236\272l{\256\276\325]\232\276\354\335\332>\232\341\342\275\254\354h\276q\246\240=\016e\250\274\032\202\315\272\001T\362>\260k!>i(5>\232\307Z=\225\222\241=\323\2408\275)\242\354\275\265l\204>I\n\001\276\0320F\276\354u@>\254\246\274=f/\260<y\300#>\273\312\252=\201\023\265\276(\256*\276\332\004\202\276\250\263\346;umx>%\262\032\276\014\373\216>\363!\021\275\027`\323=\037\203\031\275\2204W\276\312\332\364\275L\372\277>\332 \252\275\t\360\247>\363r-\275\335p\021\276}\336n\275\013\013\204\274\227\201\207\276\332\003,=x\3462>\3401\014\276\222\336\276=\211i\217=\231\3471\276owf\275\306&\221>\307%\316=\300\035m<\356\321\212\276\n\310R\276\370E\377\2755b\r\276c\n\323\274E\332\377=i\321i\276Va\223=\344\351\242\275\374m\263=\355\2409>\203,\204\276d\317c\276S\002\246<\235S4>\237\367\341=\345&j\276\332\226\244\273\273\322\251>\364S\231=I&\246\2760K\271\276gx\201>\373\033r>?4\226\275x-*\275\236\305D>\373\360(>\222>\"\276qb8>\300\273\000=\225\317\217\2767\334\321=\356th\274k\265\r\276\227\n\305=\365\242C>O\252u<\325;9\276\364L\215=;\023}>%\303\321\276\035yn\275\346U\003>H\351\027>\270\242\223=>\251\214>z\325E\276(\370\200\274\201\215\033><\265H>\236\372X\276\027\373\300>\210\226\027\276|\234\365=\027\331\370=C\243L>t\214M\274\275\363f\275\2315\340=\274\004\241>\352\027\253\275\002\302\023>P\264\037\276x>|\276\316\210\253=4\274\233\276\225\371#\276\331Dz>WW\234=c \205>\345l\251\276lMd\276\326\313\306=L\217\316=\236\350\264=9(\254\275\027\326\020\275+=\315<\2657C\276\265\226\330\276~\252)\275\266\030\034<\031\243\233\274x\000\032=\353\260=\276\375\314[\276\001\353w\276\247+\027\275\275\304\311\275s\225\004>Lx\204\276\240^\024\274g\270\217=!f\003<)\031\001\274\266\346\223={\231\213\276o\272{=C\024\343\276\360,D=\013\226\026>\263\373N\276uy\361\273\302\347\353=,\234r<Fo\351=T\236#\276\0053\021\276\337\r\232\275\327^)\275\201\036\212=\004qt<\237\036\207>]\227\326\275F2\\\276\3612X>\351\225n=P^\304=\251\307N=\204\254\234\276\251\277\030\276a\006\'\276],\304\275-\377\367\274)\247\265>4\032_>\275\205\273=\256q-;\351\364\347=VB3\276e\367g\275\356\"\262;w\030\250\276\237\235\003=\036;\223=\254\331\024=\364\262{\274c0:>\010\261\312=\260\036\275;6\346\311\275\253vn\276e\246\242\275\030\252\210\276)\177\246=B\240~<\377^\200>\205\262\021:\347\363\375\275\274\302\237>\264\304n\275\234\336->\250\276(\276w\260+>\313jF\276qt/\276\225\302\226=:`\364=a\330(\276\365\304\206\276o\254\366\275\221s\r\276\2632\031>P\371\247\275\233\370\027>\t\336\221\276\264\251\375>p\316m>o7\005>\316\327\200\276wM\004>\302\341d>\340O\005\276\204\372\234<`g\263>\2018\354<\336\016\377\275\'\346\023\276\206cy=\351\253 >U\027\252>\375\204\231=\212h \276\331M(<Z\023\220=A\366\231\276\323\210\n>\352\351\021\276Sd:\276M\252\276=Vi)\276\244P\323\276\231\225\200=\345\311\257\275\320\205\003\275\231|\304>m\232\263\275\241\262\366\275x\302\236=\003\311\272=\365\036\'>\360\277\317\275\350\371\006\276u\3249>\214\251;>\310\325a>\344{\221\276\337\203\202\273\22584\276aJ\355\275\214&\321\275\335\367b\276c\222Z>\363\244L>\277\242\027>\035>\202>~\033\317=\3765\014>\334\360&\276\257$A\276xi\366<\245\277D=\225oV\276[\337\210\275\334\202)=\177\235\033>\014/\223=\272\"J>\372 \356\2752dd>\343\010\234=p\376\r\275\003J8\275T\356\"\276\217\242\323:\207\331\207\2754\254\302=-\034\\>Vt\306\275,f\332<\230\013\035?\\\327\314\276\037\327*>\275\322\313\275\273\302\026\276\372\010+\276 \220\033\276\004\372\334\275KV\005\276 y\210>F\026\362>\376t\260\276`W\010==\300\000\274\237+C\276\374\226j<\362\261\222>\235J\272\275\006\014\364=\030\034\375<kx\002\277\0170f>7\216~>z\340\226=\216\231\r\276\213\204(>\255|\307\2757\247A\276_\314\240\274=\2032=\2150\341=Y\033\217=\025f?\276\242\261\032>\244\206\354=+d:=)\314T\274\374\276\203\276\316\217S\275Ij\334\274*:\031\276\206\031@\2768\223\311=\260\331J\275@\313\021\275\205\376n\276?\341\203\275\374\330h>9\013\265\274j\207\256\275\235H\326>D\273\022=\315\227\007>+F\231\275\356q#\276\2040I\276\276\003:\274h~s>&\316J\275\217_!=+]\250\275\2054\310<\">\316=\232\342\363\275Nd\032>\003\234\205\276J\234M\276G\307?\276&a\354\275\3462\377=\210\013\377>>\230\205>X\322\313=B\2554\276\177J\266>\225\202t>Js=>\256\311\340=\212\'\035\276\360\255\205\275Kh*\274\325\014\305<\307\312\266\274\3171\363\274\004\370\254\275\200\263#\275Y\262p>\244\247\020>\264?O>\246\351\223>z\327\"=?F>>EiT\275\024,\233\275\260\341\250\275eJI>\315\341\005\276\233\027#\276\230s9>b\354:\276}P]\276\333\305S>\367\353\226=\2506\230\276#\277\244>C\023\211\274\220\324\300=\r\"W=\207m\203>\372x\221=X\032\031>\305\014\013>\327\221\355<^\320\t>\217\215\014\276\022\202\027\276\271\225\037\276YQ\216>\r|\204;\005~D\276\275\177\256\274\362\2140\276\253\322\240=$C\n\276\220\272\236>.\022\025\276>*\317:\312\243\233=3\013\017\2756\244\327\273\"[n\2759\232\200=B\014\246\275\334p\"?\237\240G\276\031F\231\2755\207\347>!\246]\276\255\005B>d\336p:\223\033\005=`J@\276\332\361$\276\362n(=\355\230h=^(\235>}\311\202=\021\301\211\276\300\002*>\357\020\267=P\324j\276\273^\014>\243]\014\276\2552\242\275\372q\221\276\214j\274=\352\322\231<\317\006\350\272\\\222\026\275\254\200(>\263\337t\2766\267\227>\354\251\334\276\0074o\275\246$\203\275K\313\332=\256\222-\276\027\206l=i\221l\275\303\322k>)t\242=\'r\231\274\325\320\306\275\254}\n>A#\235>\206%\004\276\327u\242\274\025w\321\276G\0209>\374\310Q\276\2412w\274\3741w>\006\367H\276B\315\203=k\244y\275bx\316<\254\257b>\364\305l=N\315\221>*\302\022\276\t7$>\335\302 >\027\273\245=\224^w\275?\306\246\276\025\354\314<A\242\375\274X#\026\275\276\000\341\2752&\013=\375\240\276=\321[\271\275w\200\023:%\226A\275\014\314\250=\263\352d\276\001\233\">\n\270\212\274de\337\275\231\204*>\313\222\n\276\237|+>\321H\307;5\026\336\275\235#L=\373\214\'\275W\300\215\276T\264\330>\251Q\271\275<X#\276P\237\022>\246bH>\005\010{>\217\305F\276\331E\005\276\366\217i>`?\335=\332\217\216=\356\342q\276\321p@\276D\363\324\274\220\206\007=\267\021J>V`\204=\327)\351\2743\006->\211i\010=Y9[<}$:\273\006\265\244\276\237E\014\276\3574\203<\331\364\303>\363\361E;.\024\276\276\223\244\236\276\307BD\276g\343\210>\014<t>\275d\007\275\226\321\251=\337\252F\276\344\365\360>\261\240\314\275B\316\337\275\313\r\017>\204u\023>\023\345\"\276\3212\267\276\241\014\244\275\346\362\332\275\266\242\366\275\265\337\232<\377f->w\2775>Y\251\352\275\326\030\213\274\226=\201>\016p\217\275i\036G>\023\"r=-\247n\275\r\302\250=\244\255A>q\307\231=4\351\224\276\3176\374=\022ro\275\020c\266>\274\233B\276\201\224\212\275F\314K\276\267\231<\276o\332\243\275\266\235\335\274\321\321\213>}v\253<\322.\253=\233!Q=v\223\210<v\310\277\272\371WK\275\251\027\026\274\031x\226\2756\371l\2734\340\261=|\371\342=\3150\241>\020i\001\275I\252\255>\376-\036=\\\237\002\276\331\273\205=\371M&={\246\032\275H\220\036>\242\341D\275\207M0>W\353o\275\267]\263;\3226Z\276\r\314\331\275\213SD\276\355,\016=\367\023Y=%3\261\275R\237\216<\211\220\034\276\360\2352>x=\024>+\031C<\026\271\363;\nL\273\274Di\t\276R\025\216=\322\217\202\272\316G\"=\037E\352>\230\007~\276\243\006\225\276\370\254\207>\374\341\220\276\343}x\275 \257\243=\333\272;>}(\217>\246\267\013<\2501\344=\221\322O\275y5\r\276sX\341\274O\020\r\276`\2220>\245\030\315\275\213Z\361\274j\005\311\2765X\274\275\006\322M\276X\361\263>\377o\034<dzk>\031\304\202\275\313D\265=u\212\206\275\215V\246=\007\337\346\274\333\3318\276\333(\213\274k\350#>\233P\361\275\211\021E\276\206C%\276j\240\217\276\263 !\276\367\363\301<\265U\315=g\376\211\276\217#\311>\353#|\276\361|\206\276\377\r\355\274\031\236\250\275\226M\233\275?\376\007\276\370U\263\276\236D\273=i\\\001?m\017\210=\234\262\010\275\0162\370=\325\\O>\305\223\364=d\034;=p\351k\275*\nn\276>\177p=V\374\242<k\376\005>4\033\030\276i;\021\275\002\007T\276J\322\003>\003\313\003\276\372o\210\276\356O\022\275\2215\026\275\373\005\222\275\004R\242\276\375\034\210\276eS\026\276\022\231`\275\345\225M\275\031\255\262\276\275F\r\274\253\"\264\276\025#&\276)G\323\275|\033\376=k\t\327\275\364\355\303;\310[\332\275\001\034\326=z\255\271\275\367\207m\2763^\233\273o\"\302>\335\323\001>\212O\251<&,F>\257\237\304\275\022p|\276Y\236\027\276if\241\275\346yT\275\267\352|>\254\316\031=p\310\213\276Qi\325=\005\240u=\36668\276\372\216c\276\010;\252>\350W\202\276]\313m>\324\357\246>V\377\275=II2\276\264\332\377\274yr\224>^\361\234\274\357e\221\275\277^\005>$\245(\275\254\255\025\276\275[`>\024\005[=uXm=\031\274m<\037\334\263\275\017@\200<\025\276\375=`\014\220\276\353\257$\276+Y\225\276\2458\013\276\340\214\316=\177}\006>\252\201\304\276=\346M=\244\2542=\021\370\">\3776O>l\354\t\275\307O\226=\214c\314=n\024|<p\037\216<f\346Y\275\200\3362=\205\365$\276\242y>\276]\235\257=\275t\254\275v\\\227\275R\016\231>\345\244s\275\272lH>\236d{>]\315\317=B\3529\276|>#\276\273r\023\275\276\357F>\302\3779\276\254\001\275>\'7\221\276H\244\262=\323=\243\276\3165\376=\023\226\215=f\372\270>\213(\265\276Ev\252>\354H\212\276\275\300\277=\217G]<\255\376\232\276\210\rK>\242\002m<&\243L>\372\234>>\002{\355<a\225X\2766g_=\361\354\246=\307\335#\276\nw\005>\350\221f\274\367\371\006\276/\t\223\2750Q\236\274`\315\004\276\247\244\020=\373}@\275\n\001\000>\002\375\020\275he\236=\227\223F<\"\342\304\273\272\240\263\275\2778\315<\234\355\363=\207\223\371=\025\204*>\202\310/=\366\333o=P\341\027>\230\014w>cG\002>V\376<\276\375\275n\276\253#y\276j\366\260\276\327\256\221\276R\310\304\275\276\316\347<\203\347\306\274\345\'z\275\340V\305=\3264\341>\002\2555>\246\356\212=\303U\t\275\331\317|\276\006[R>\260\254\234\275\025i\027>\204\246\242\2763\363\226\274I\276i\276\354^U=v\2275\273|\343\014\276\035\376p\276\257$e\275\023\240l>|Z\033>w\270\022\276\r\207\343=F\223\211\275y\206\227=\023L\346\274\250\n\211>\303\207\246\275a\323\347<F\033\336\275\367\260\226=\322M\253=\237@\324\275q\317:\274U\272\032\276\266\010\226>\\\030\247;B\366\272<\374\351E=\266\230*=\261)\005>B\'f>^\n\325<\250[-=m\206,\276\310\003D=\267\257)\276\025\356v=\375/\003\277\007\356J\276/\216#>X\216:=\236Bn=\277\251~>\261\201\032\275\177\001\272\275\237\247\313\276\372C4\276B\0367\2763\317\000>\344\354\010\276\022\300\017>\020Y\201>mX\031\276n3\326\275[\323d=\326\340\247\276H\024#=\350\3710\273\325\302\320=zi\n=I\361\007=\316\2178>\322\347\252=\335J\034\275n\324\234\273\365 {>\346\360 >\367-\207\276?y\317>C\223\241\275?\352Q\275\027\330\002\2765\202\256\275\231\004\025\275\363U\301\275\372\254)>\317\271\203\276\271\222g\276\330\263-\276\277\\\210\274\037\225g\276\277\323C>6\236\267\274\234+\275\275Tn4=H\006\270\276OWG=\002[,>\344\302\016\276g6:\276q\213\235\275\247\312\363=u/d\275-\002\347\275\313\270\251\276\366\203@\275Ca\250\276\241\002\031<\352\226\255\274D~\242\276\253\226\354\275 M\365\275\350\256\246>\262\315\321\275\031\016\"\274\265tj=!\262\332=f\005\214>\352\370S=\232\026\030\276\276>\233>q\365\250=\335\024\326\275!=8\276\020\350d\275\332BA>\241\375\223=cYf<$R\237>\322\367\212\273\365\312(>\017\2651=\301t\010=\201@\302\276H\277W\276\210\3435>*O?>\262\230P\276B\206&\275\377D\270>W\334\374<\363\207\233>\004\204+\276a\202J\275"
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Assign"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/w/read"
      op: "Identity"
      input: "model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Assign"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/b/read"
      op: "Identity"
      input: "model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc1/add"
      op: "Add"
      input: "model/vf_fc1/MatMul"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_3"
      op: "Tanh"
      input: "model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc2/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\317a/>\370e\026\277c\371j\276\277h\271\276\257\310\177\276t\036\357<g\343\014\275\302\017p\276\367+^>+\016\017\276\336=\250>\333Q-\2764\271\305=\240\203\210>\025~c\276\253\336\353\274\335\272\371\274.0\374\273\037p\003=\216l\326=\355d\030=U\257q=\320\353\265\276\225,\326=\305A9>\302M\206\275\310\005N\275\022\256\031=wa\013\274\314B(<\333\373\t=D\372c>2\002S\275\331\215\203\274\353\204Z\275U\343\357\275\270\250\024\276\275\330\264>\223\003\001=.:o>=s+<\014\272N=!\020N>\000\236\232=\376\022\237=B1^=!l\000>C\305\251\274@\200\240=} \177\276\257\373\260\275\306\202\034\276\331[\t\276\335c\004>H!?\276\365\213\220\275a\357\354\275\253\215->\250\262]>\262\026\234\276\242\"+>\333\303\343=P\030g>\220q\351\273\373D\330<\337\242\202>M\303\233\276\246\230U>z*\t=*\003\240>z\211C\276\036\310/\276\335^4\276\245Z!\276\007\277\236>?c\016\276o\320\222\274\353k.\2760\301Q<?,\303\275\301<\202\276\370\355\354==\307\374=\215\312S>\\\016\276>\310\210a\276h|\033\276\254\024\251\275\353\273\\\276;C\215\276\376\324\306\275\220\241\376=\244\005:\272\326\242\376<+zh>\344\276I\276\271\264\223=\233\350=>\314\035\232<\247\020\227=\321yS=?\321\030\276Q<B>\\\"\020\276\"\2062>\224m}>l\230\244\276~\272g>r\025`>\\&\027\276%\254\251\275\320\300\235=\331rX\276\212\341\372\271E\357B\275\341V\004\276\370\212{=\252\237\245>\024\375\225=\305h\220\276/\204\022\276\036\352U>\024\\\221=l\2649\276\203\326\213\274\027U\230=E\234\346\275\351\267;\274\225\325\334>\204l\312\275\230\273\206=\341\201\246\275B1\004\276\003\247\232\276\305\233\225>\353nd\276\327\233e\276g$\201\276R,e>\225gc>\277Y/\276s\357I\276\220\360\232=\275\007{<Hr\227\273\363\024?\276;\350\032=0\345\204\276t2\222\275\353 \356\275cS->\032\211\'\276 r\252\276L3T\276\031\220\322<`p!>:\370\035\276\363\316!>\316\"\252=\300\001\244>j\016K>\334\304^\2741\206\016<D]\347\275\211g~\275\275\007\250=J\372\237=\330f2<\304\321w\276\3440\210=\005\030\356\275\237\"\216\276\023\274\215\276v\0250=\367\227\027\276p\305\335\2752\232\241\274\342\213\334:o\030\355\275_\2451\275\032\201N=l\2210>\225\374\344>uH\232\275\202\255\231=\242\205%\275\303V\207<\325\311\215<\354\352P\276\217\221?>$\277:>\237\rP>\260\3637\276\372\222Q\275\305\263\216\274#P\016>S\nU\276v\221\335\274 v\266>\2436\327\2756F!=?\000,>Ku&<\231H\326\275;f\353\273\274O\205\275*q\262=\0339\033\276\240\331\206\275W\203\021>\026\331E>\315\267\261>\373\367O>\204n\315\275\221L\340\275\016;\222\275RC\004\276A\340\305\275!\342\231>\202\327P>\010\270\014>\230\300\204\276\275\036\340\275|\006\216\2750\334V=\346\303+=\272\372\377\273\330\3065\276\260\252o\276\031\277\016<=\346h>\3544\346\2753\317G=\362ro\275\367}\300\275B\332\021\277\0029\351\274\242t\374<t\032\306\275\315\354}\2758L\350=$*\204\276\035<&\275?\0135;\374\315y=\305kc\276\261n\235\276\006\252\022\276\346n\305=kV8\275\013l\234\275\205p\244>\261w\276>\371\220\230\275C\220}\274\243;\310>\311\250\270\276\212\3347\273\007\220\217\274\261\221`\276\317\337\360\275\312E\217\276\004^D;\242D\375=\221\200Y>\316\326\347\275\264\341->\271\272$\2764\330\224\276\263\266\022>c\014\241;\340\250\206\276j\351\227\276\366z\351\273\314:\263\275W\237\236;\203O\177=\270\305\205\2764\222\226=\017\002\344\274\252\353\245=\243\341\310\274\232C\t\276\271\022\314\275\206\005;\276\177\3351\275\\w\273\274L\3266>\343#/\275\247\227\256\275w\263\321=v-\374\275\260$\356\275\316\367\371\275N\332\007=\320\357m\276\204\002\001>\024\232\340\276\\\263\233\275\030\213\002>~\336_\276\037\345\217\275\tV\333;\273\324\323=\317\336:>M\372k\276\266Vb\276u\276\332\275c4&\276-Le>\351\274\325<\316\345!\275\030\371\373=H\311\027\275D\276*>\263d\211>\264\215\267\276\025\345\232\275\302\006\365\276\355\354:\276a\264\252>\362\261Z=il\207\275\225\261\026>3\031\031=\356\230\322>^\r(>Z\271\215<\254\244;<\244\262Z\275\016N7=\237\rP=#6&\276XQ\025?d\250\233>U\004\251=\217^+\276\335d\026>\275\341\254\276\260\347b>\360HW=$\025\360<\365\207\263<\247[\003\276\312\214\227=\227\034\243=`I\240<\304\014\330\275\366(\227;J$\243\275\177d\331\275_f\320=y\362\327<\020\303\321\274]\202y>\341\342\035>GJ!\274\263\367\230\275y\353r\276\236\226\203\276\334?\346=*\263\342=\033`\023\276v\312\202\276\267\002\230;\372{\246>\200A\222=\277 \007\276Q]\361=\250}\240\275T\2455\276m,8>\205\330\216>A\306\276=\022\211\036\275\262\000\273>\237\021\364=\241|=>\216/+>\333:8\275`\253;\276\rR\030>#\266\320=\205KY\275U\363\206\276X\327\232=\344\342\362>\007\343\255\275\323\324\225\276\330,\333>\370\376\247>6~\t\276\316G5\276\355\311c\276)\225\013>\252\306\363=\342\240\026=m\232\250\275\235\317\010>C\362\000\276,\357\210=\376\r\276\275\252\253\360\275U\213\322=.$N=\240\367g>\033\265Q\276\324\330\243:3-\236=\352[\206\274\307\0206\276.\360\205\276\255u=\276\022_7\275,M\273>\335h\016\276\311:\205\276&\333\250>\036&\373<d\306T>\r\234\335\275\211h\371\275_\377\315=\205vw>\357uX\276[f\260\276\300\356\215>/G!\274\332\3423<\305O\002\274\3406\267<}e\244=\342\242\200\274\227r\264<#\3206<\344O\002>\033\372\265=X\"\306=\353\001P<\270\356M\275>\230\016\276\003\020\222=E\300\214\275\221\236\035>\304t\037\276\rY\245=#\273\332=2\'\013>\205\274\235\274\310\247\370=\214\300\333\275\rtN>\357\255\250\275\330M\007>z\360\221;\357\357\314>\203\232#\276\007\227\317\2760\262\313\275\304\330\n\274dW\320<Pn<\276 VX\275\307c\021>U(\351\275\t)\335>5\216\341\275\253BR\276q\264n>\036\255#>\261\354\010\275\213g\272\275\014\232\270>\3213\n\276\236\354k>\315-N>\270\003o>\204S\020\274\014\340U\276\343[\242;\001\016\344\275[jN\274\003\224I\276\333\242\215\276\273&\371\275\252C\205>Mr\r>\362\213\301=\213<\035\276\2058\001\276\322\343\215>\215^\253=\335\220Q\275\362\ra\276\240\336\347\275_\324\202\276\317_\377\275mO\022<Csp\276\202\262\371=\024\240%>~\200R=\'\216\202=j\337\346=\355.\352<\t\304J\276\312\373\224>4\323\332\274\236\210\267\275^TH>O\254\362\275\333\352\353;\260\226\036\276\317\350-\276\237io\276\276F\234\275\324\352=\276\335\225-\276\356\377\260=\247\306n>(\303\206\273\211r\202=$-\227<\372\017c\276\255 P=\323\037\344=\217e\307=y\275<>W\323\366;\020\303\304=\257\305\037>\263\241\346:\257\260\200=\345\355\371<\365\355\310=\204\244\356=\227\205\244\276\242\004\033\275XM7=)\360\233\276\267g\300\276\2202\323\274\226SF\276\031\227\267\276P\376\367:\330\346]\275\374\026\353\275w\334\325\274\0354\201>\267\010`>K0\251=\305ez>\317K\303\2745@\214\275\253\001\337\275Ot\027\275\251\214\316>\027\000\273>\263\205\n>\030 y<\275\244.\275\340u\315=\001\222n\276\203\330@\275\276wz>\345\331#\275\217\213A>\001V\255\274\3504\350\275\224\177\333\275\363\004e\2769\321\026>\354\372\315\275\304\253\002?9G\016\276\337[\252\274a{,>\215\316\267\276\351\222\230\276G\264\370>)\337\243\276\006\257\263<\335\001\025>\327\324\201=\217.\036=w\320\204>4\242\013\275\232\321<>\017)|\275\005fK\275D\251\\\276\320\375\331=\330\377\022\276\274\254\235=\226\370\022>z\246\313\272G:\004\276\220\367\">\363\300U>Ke\327\275\3507\'>2\360$>\261\351\334\275\260\312\035=\201\306\261\272\007z\\>r:\344=C\321T\275\225?\205\274\2676]<[\260\204\275=W\234>e\210\213\274\264:\302=\024\227\245=\356\213\331\275_\013\342=\247\231\364\2755?K>\010\240F>\223 >\276\364\352\335=\375\246y\276\226\312=>\323\305\376=\006\246f>\241\233\214>\341jX\275\234Z,\273\344\256F>\026\034\211\275|\236<\275aZ#>\234M\270>\0172\374:\313g,>c#\323\273\255\272*>\336\202\241\276\241\220\223>@d\205\276\337\177\257=6\312\300\276\342\327\241>\232\332U\274U\270\224\276\203\3631>\272g\341\274W\3353\275(\326\263=}\300\200>`\255o>b\335\255=Z~\n>\326Q\237\2760\004i=\253}\363<\210\350\214\275\021\224j\275\225<\t=\365\037\306=\204\240L\276\252\267\212=\325\'\002\276\351\020\013\276\212\201\227>\242\265x>\361\'\321=O\305\234\276\003\013\255\275\254\004\341=\026\327\273=2\000\364\275\215\362\337>\2172\326=\256\325_=\337.X=\232\224q<\0103J\275\250\223I;\024\226W\275S\030\351\275\006\265\300=T\300\337\2748\376\210>\347k\302\275\202\213]>%\202\313\274\256\374\226\275\302\021\301<\020\341(=\346\341\332>\207s\221\276\276\266\237=\352\n\347=\';\204>\375\340\t;n\nc\276\3362\223>\017\337\356\275\t\240\220=\026\037\005\276B\233>>\343\240\316\274\'\222\345=\037sz\274\306\302\\\276\026\324J<\363\314\\=\343u\004\275\373\0170\276\214\322\303\2763\326\321=19i>\243\375{=_\350\201<\256\311w\276&\213N>\217T\371:\363b\314=\312{\220\275\025\355\247\275\266!+\276\331VS\276\207\315\333\273%\216\037\276o\014\r=\275\276S<\304\007\371>D\355c\276P+\020\274\226t!\276\256\033?=\031[\342\276n\014\276=0\201\340\275Z\242\255=2\270\252\275)\247\016\276zG\271=\272.\t>\225\2256=\251\345\034\274,\025\235>\254\233\212\275\246\244\226\275\302\251\327\274\202\352|\276\346\204\220=\"\221\333\276\361\316\217>\036\323\r\275\214\232E\276\230\310I>\"\235\246\274\247 \310=\234\344^>\300\367\t>\325c?=}\317\t\276\300\357\'>\265\210\334\275_\214[\276\357\375\206=`\217$\276ZN\027\276\024\007\004\276-\023\266>\365]3=\306\341\210\275\313\231\257\275^\300\024\276\232\241\022\275\212\276z;:\245\207\275)\327\014>\340\027;>L\021\361\275OdZ>2\351l<\362\335\237<\374\016~\276\336{\377=\335\"B=\256\317\325=\272\342\217>j\335\036>\230\360E>>\347\330\276<\277Z\276y\352%\276S\201\230\276\261\277\371<o\014\022\274]\342\347\274\313f\027>\363\356\\\274=\021\273=E\t.\276\200\267\035\275\206i\314\274L\250\246={\363D=n\250}>\t\232\007\276\201\200N\275+\266\204\276\311\006\347\276\355\225e\276d\266\353\275\002\225\204>T\314W\2754\\\225>=\234\000\276\364\302\214=\226X\037>\267\207\000\276\377\363\004\276n\017\264\274I\214\242\275\353JM=\014b\306\275\234\250\222\275\021\244p=)\361\255=h\002M\276\372\177\340\276O!\265\276\035\301\241\276\001\225\330<\367\222\014\275\240:\200>\254\363\206>\364\373b;\255\037\024>y\351c>\033\3326>\305Dn=\235\332\331\276\017eO>+\221}\275K_\262=\312\236\236:X/\213\275\331\370\n>3\255\017\275\223+\355=\021\321\334\2751\311M\276\317\005\206\276\227V\275\275\227\304\200:P\021\277\275\206\347(>;\016\024\276D\313S\276\350=\214\275\210\357\374<{\256\365=\327\354\270>P\331\324\276*#L\276\005\371\014>\335\250\214=\277\367\'>\324\275\372\275R\022\001\277\n\241\006>\204K\226\276\255\347L\276\264\331\230\276\314\352H>*(\003>\263\206M\276\034#\362=\372|\264\275G\252\t>\210<Z=F\227&=\314\357S>\314t\301=$\345\036\276[\002*\276n\333\036=\034@\317\275\354_\212=D\212M\274\013\224\007\276\276\262\t=\356\006\321\2750\024\310=\262\2154>\253\036\014>\237O}>\253\020\031<5C\250\274\032\032o=\036\205\003\276\321\3647\276\'L\232\275v\267\033=w;\313\275\257\351\330\276f\034/\276;\301\220\275\033\347\021=\347Y\212\275S\342\252\275\235\210\222>\374\262\274<\017\273\211>\310~\031\2758e\204\275\"\207?\274z\232\245>\371\224\223>D\347\014>\251B\310\274\246\024\226=%\272\324\276\261\307\006\275\251\0067>\210\025\007\276\0302\346\275W?\024\276\323JK\275\033\216\301\275!gO=\343vY>pI?\274\010\213\325\272_!@\276\343\266\224\276\307\354\032<L\352\235>\350\256\217=O\320\t\276\213!e\276\276\303\327=\\b\233=^\242c\276\216\276\212=\017\234\227\275?Yc\276\254=\315\275\023+\232>B\370\312=\374\204v>V\351d>\212un\275\305\257\261\2758\316r>\210\375\244\276I\332\017>QW\343\274~\226\316=\355\020\217\276\3333\224\276(\010\000>\237\336\204\275\330j\003>\274\261{<:OR>\326\353\231\276S\"\360\275\273\013\262\276\306\367\324;\200\365\300=\312;\007\276\350X\274\2752\220\256\275\216y\322=*\300\232\276Z#\222\273\341\220\024>>\221\210>`\024\016>Z\342\356>\262OO\274\265\312\027\276\330\206P>\234o\234\275\210V\270\276\243N\215\276\245J\033\274W\030\256<\3461P\274kZ\t\275\372\"D\276\'\016\237\275\215\306$\275\206\233\210\275\221\270\234\275\203\224h<\t\025\363\275\201\3320>Gu\253\275$lS\276\344\271\313=f}\266\273\031#\260>8\3348>\361\035\005>\245\257\177\276\374\265\232=!O\240\275\227G+>u\311\026\276nkz>\235\375\277>\350Q[>\010fT<\265\303\224\276\'\3604>\3365Z\274Q\203\236<\246\244\344\275\317Vi>i&\311\274\377\2476\275\311BT>\364O\251\274\024[(\276\350\244\000\2768\3746\276n\021\017\276>\217\004=\2334\275\274\371\324\027=/\232\241\273\363\353D\275`\217q\276\240j\224\276\r=|>\351\267b=\005\360\303=\301\323%\275\362\021\231\275v\027T>\3432A\275\275h\r\275\253\305j>\371\262\021>@g\233\276\2658\336\276E\023\215\274KvF\276\206\227\324\274\364\343]\276\247\306\231=\251\336\215\274Ce\230=Q\201\n>K#7\276\205\324\302=I\\\222\275}\306w\276\177\360\234\276\315Y\235>n\226i>J}\326\275\306^{>\373E\337=\213;\371=3=\243>\206r{\275O6T\276\326?\312\274\246\265\335\275\244\005\352\275\310\363n\276\034\337\221>\323\030\305\275\026\001h=#\215Y\276\314\241C>\231\244\341=\231) =-yf\276c\024\025>\363\000\036\276.\374\222\276\202q\257>|\345\006\276\372?Z\275\207O.>t\343\010;\n,y\275^\315\277=b\311\324\275O$y\276\030\003G\275?0\004>JZT>\266\355\031\274\207N\016>\037\271\003\276\025*R\275H\303a>\355\021f=\343},;\232b\251=\342\300S\272\371\373r\276\303n\017\276\340\010\241\276\376-\002<\277\024\014\277\017\205\037\275\306]\201>*Z\254\275\227\316\226=\030\211!\276\246\216\022\276\220\216\213\275\177\0376\276sUM> \\\242\275)/Z\276\334\364\t<W\304\327\275B\244\207>\367\025?\276\257KW\275\027\334\204\276\212\366\336\275\222\207\210> \001\250\276\224B\204\276 o\330<8\240\265\275\200\317/\276\210\341\030>\216]D>\342\274F>\327\314,>\257F\211>\373\345\250>c\270\377<[CI=-d\223\275\311!n\276\346f\010\276\206\'\210;_!\344\275\301\005\235\275\025\240\253=\371\271\013\276K\306x<\031\354\035\276\207\246\237\276\222sd=\215\363y>/\221z>\266\243A=\262w\327<\002t\362=&\302\273<:\271\020?\265j\304\276z\215\214<\221\020\031>4\344\017=\025R\013\274\355:\334=\222|\260\275X:\206=\'\035\203\276JQv\275\\^s\274F\027\036<cf\237\274\241\216\240\275\222\334\277;)t\022>bw\230\276o\347\365=\210\322-=\371V\371\275\322\324\362\275\212\316b\276\200O\225=m\033\313\276%F\352\274g\251F=\273\230\265\275\017\375?\276\006\030\316=\265\303!=\0250#>\260\374\275\274\327\247i\275D\277\221=\256e\207:\365\263J>\010\033\365=z\366\251\273\034\325Z\276\020.\203>\336\312\266\274\034\307\307\276\013\014\313\275\351C/\276o\223\341\275\244\272\304\275\270\273\243\276\030n\213\274\270\014\227\274pq\177\276\023\277E>\342?D>\222\3408\272\034\233N>\354\'\306=\231\343\235\276\330\260j\276|\267\037\276\353\257\237\2769\262\220\275i\002b<|\214d\275 &\240>W\310\264<\273d\204>\3676\250\275?\020Q\275\242\263\327=\3460\237=p\356\244\275\3658t\274!\034Z>v\276\376\275\370\274J>=\317\342\274\027\007T>\312\3426=\002F\272=\237\206A\275Tl\353>\340\213\007=r\241\006>\272)L\276\002\326\245>l\263\205\276l\335\r\276\274\022\321=\215\'\251=\214\230\256=p\311\232\274\265\\\200\276\024\206\333<\277\202@=\235\010Y\276\354\331(=\r\026i\276\206\244\236\276%\267a>\212\231@\276\367\035\336\275\204rJ\273\224\3274\275\205>\255\276\305\020\202>c\357\023\275}\305!\275\004\177\304>jR\346\274\377+@\276]k{\275\214\325?=\\=\215=\321b+\276\007\377\333\275Q\372\241\275w\316d=\303\335\226<l\233\201>}\361#;\301\330\326>\242\345\230\275\260\360O>\203\356\203>k:\314<I8r\276\361\2524\276x\220\233=\267\236\256=\301%\351=\336x\203<\270\204\205>l\224\301=\272\261\023\276\271\242\324>\2506\200>3\"8=\232\324@>\346\036>\275t\"\246<SU\225>\316\374Q=\236R\365\2751I:>\227\276`\274G]\375=\265\221\304=8y>=A\203:>\263\t_=\356\240A>l43\276m\033\207>\322W-\274\231]\323>\016;D>`<\004>\270z\263>?\336!=\337\212\035>\232r&>A-%\276\366\311C\275\257\\\026<\032o;=\032\265\266\275\206w== =\240\276\032t\335\275pES\276\007\234\223>\360[I;\314\203W<\313\201;\276\232\237c\276\321\017\200\275\335\"\216>N2\310\275\315!\257\275mjR\276.c >i@&>3\250o\276\303\311\231=\352=\327\275\027\010h\276\324\314\177\274\023\022\004\276\202\200a\275\255G\204=\032\372\233\275\247;\000\276\243\"0=I\354\355=\274\266\205\276\251\221\226\275\\\017\364\276Be;\275x\345\371=\301\211\361<\263\n\266<\036\026r>O\262\265=R\3241\276\003~\234\275\203\344\037>#\014/\2754(2\276\214DP=\261sD\275Ou\353\275\315\361d\276\036% =\211\330\201=&\032C=\222o\220\276\302Uh\276\306\357\224>\2326\234\276>u\000=5\356u=\216\231\262>\000S\255\274\254(s\275\255V\014\276J\217\323=\313\\\367\276\363\375\353\275\355\035\264\276\022\346)<\230\t\250=\343O\t\276\244c\345=\267R\226\275}\334\217\275\372%\017\276`\376\215>O\226\203\276\377\372\346\274\335&\355=\204\300\215\276\227\204\021\276\252\205\177\276w~V>F4\216>\327\222\231;7V\034\276&\317\255=7\004\357\275\177\203X\274\341\031\n>\321k\355=\364\211\223<\010\022\273\275\n/2>\216(\002>V\241q\275W+P\276\261C\360=; V>\272\327\245\276\274\216\r\276&\361@\276\314\202m\276\361n?\276!\025+>\355\221\314\274\003\230\314=\351\036k\276Q\216\205\275\2571E\276je\010\276\342\304\235<\370\205V9>~\223\275\242\307\337=D\203\307>\314\024V\276\036n2>\334\365&=\255\023w=\305\365\311>\261\304$>\231\237\321>\013\322\276=L\276\243\276\032\267o\275\276\313\035\275\314\323c>L\320\255\275\245#&>\334\035\325\276\246i\023=\023a\357<Y\234R>p\366D\275\032> =#\226m>\314\341\306=Q\211\255=\357\330\010\276\327/\227\275$\263\231=\216j\276=1s\014\275.\214\323<\330\302\177\276\312\333u>\033(\014\276\236\300J\2730\177\366<\215\272\271>\016-\351=M\366\024\273\221\243\241>v:t=\006\252\365\273\030-r\275\332??\275\254\006\216\275\253\215\251<\t\017\030\275\365\345\302\275J\264;=\331\034\n\275\0138T>\264Q3\276\241\277J>\246W\021\2762\326\330=\036\026]\276q\330\216>\020\326^>\272\332\215\275\362@\262\273`\2160\275\236L\207=\272\207\272\274\326\204s\275G\366v\276\3333O>\263w\354\276\261\322j\275\200[\013\275C\206\344>\021_\267\274\033\n\371\274\353\373\216\276u\274\016\276L\312\245\275\324\351\037\275\350\337\213\276y\331\266\273\276v\374\275\000t\257\276\266cA\272\342i\000>\232!\215>\260\233 >\356\026\356=\n\253<\276>\317\\=\202\213\000\276\207\300\304\276\206-\335=\315\n\207\2755\324\021=@+:<\327U\024\276\253\215\217>@t\\\276D\337\225\2764R\024;\033\344\367=Xb\223>\n\2214\276<\350\\\275X\326\037\274\317A\365\275\006\206c\276\305T\257>\271p\227>K\263\240\276V\260\260<?;\206\275\271\t\314\275\010\260\216\276\267\207K\275LC\032\276z\010H\276z\324P\275aB\200>b\271 \276\206\325\005\276\260Y\020\276Wg\010<%\223x\273\3032\001\276\362\256T\276\000G\261\2742\r\272=\244\366\257\275\200\325b=\200\362Y>\362(#=AR\271\275\264\274\221\273flB>+`/\276\356\321\'>\217\262\303=bj\205<O\014\263\276\277zv>\250\346\315=\013\3622\276\005\233\003?+.\252\275\231RA>\320~{\275\373\362\010\276\267\250\204\275^\377b>\263\024\201\273\254\243\032\274y\177\246\276\021\250\003\276u\246O\276\276\355H\275\240r\212\275\353\242\247=\335\270\235=\022/\026\274\257m\006\2764\217>>\013uC\276l\3633\276\340\317\253\276\220\267_\275\224\365D\276\340\262\036>*\355;\276_\2611>=\266N\276\204\025\341=KaR>\001F\013\275\2268\366\275\"\016\310\274\246$\205=\374\362\234<\207t\207\275-\315\354\2745\331\264\275\350-\027\272\246\326\267\276\241\324\024\275d8\025\276\276B\213\274zD\376=\221\010Z>F\207\322\275\326z\266\275\256\355F\275\356\003\263\275\312\304<<?\005\255=\375\350->\214\310g\275xa\301\276O[\177>CC\243\276\000\275\246=\313\241\301\276\233\200\247=@\321B>\210\243\222\276\265n\356\275|Tn>\233\206\322<\001\021\204\276\tPn\276\371\002\216=F\n\217<\263J\204\276\022z\r<\342B\231\276\201h\264=\373\"\246>m\343\030\276\177\t\234=!\345\243\276\014\242`\274n\246\210>j\027\207\276\365\235~=\275Z\236\274\231\210\372\274\345\020=\276/u\000>\2362\034>\260 \333<\244\031\215\276d^\376=\205\027\203>\005\331\273=[>\247\2752\232\264\275\323v\213\275_\331c= \022\022=\256jE\276\226\237t>\232}y>\027\317\336=\r\023\344\274\010\306\036\274M\346\020\276u\"\017\276\177\232\241<\032w\212>\376B#\276\324\254\205\276;\r\264>D\376]\275\240\266\250\275\260\3116\276@\222q=`Ew>K\202o>\360\233\205>\254`<\276\203E\271\276\360sd>\024\316\327\274\300\307\207\276\312\350\303=<\265\032>s\n\253>\2125E>\251[_=\237\033\370<\261\317\264=\271\001n\276\244\220\302\274.\213A>\211\026\254\275zo\310\275\314\333\021\275\240/P\275\362\365M>\336\211Y>\276M\262\276r\354\227=\260\331\212\276\3175`>\374\327\232\275>U\200<,\303\217\276\\\3368\276z\264\237\274\224\211I\275\014\030~\276\372\025\034>\355B\037=\330T\030\276\305<\251=qd\342\275\334\263\223>\t)w<\307\343V>\301\021\355<8r\205>o\333j=JY\233\275F\315\206\274\255\204\343;\033\301\033>\300\026\314\276\360\211\002>(\217\014>GB\234\274\037\217\314=\177\222U>\rjb\276\273\034\007\2774\365w>\207\303\227>\35719\274\261\257\372=\3166\232\275ne\200=\212\374m=\325\030N\275\027\2234\276\251EX\275\003\374\244\274\327\205\275=\027\3221>\243,e\276\307\220\204;\354a\300>\377.\242\274e\025\027\275U\014\025>\020z\202\276\r6\266<ORc>\221\236\036\276V@\264=m\025\000>\241?(><\224\036=\275K\246>D\374\217>\243\n\270=\355\273s>\270\\h\275\023I\237\275\344[Z>\322>\247\274P53=\031\303\351\275#\033\031>\321y\233\275\247\363W\275\357\324\254<\2571a\273\370{v\276i<\232>=wQ\276\312=\327\275|,&\276\217([>R\026*\2758\323\317=\214\314z\276\333\366G<%\310\n\277,[\031=\202\'\001\275\353\215\0009\366~\365\274\316\240k\273\300j=\276ryd>F\342h\276\025}\006=\201\234\322=\324\024\240\275\215\024\020\276\265j{\276\246\330K\276\333[\270<*\322\372\2757\201.<\327/\354\275\256\037o=\025\225\241\276\230\246\351\275\220\256\236\274\326yA\276\375\216\021>J{9\276\214?\006\276\023x\233\275\261Vm>\237{v\275\257\337\022=\216\367r\276O\223T\276-k\000>\376\315\220\276\030\266?\275,\373\010>\275Xf=pE\234>\206DX\272\032\232\357=\331\004+\276\211j|\276\233\251\227\275\224\355\"\276\204\no\275W\212\261>\005L\266>\203\324=\275\270\356\300\275\255x\277\274\316C\255\276p\351`=\033\373\026=\032\'\374\275\014\212\243\275\360\245\257\275\243b\333=j\326\362<39\326\276\033\203>\274\010\3135>\\\357U\276\241\351P>\322\333\241\276h\023\335=(\354\307\275\240\201\"\276\0142\330=g=l\276\340R\005>9Ec>\310\367\204\275t\004\372\275\317!\324=z\3518>!\216\312>\373\340\t\276\247\035\'>\303\311\t>\212\226L\2765Qa>\277\242x\276j\236\320=\327-\224>\371^=\275^~\240>y\262\254\274\230\337(\276k\260\231\276\036\342\002\276\234\234\303>Yh\267\275\265N\211\275l\"\362\274,\325C\275\037\2330>\010\364[\276W\363[=q\004\357<Pw\233>bC\205\274gmK\276[T\017>OB \276\002\220\264>\217\"\274\275\306\325\260\274=\003\204\275\037\262i\274:\315\331\275\006Gi\275\232\357\334\275\027\'T\2767$W>\246\334\226\274\026\337\207\276\331\314\255\275\037\340\257\275\177xe\275\303\027F\275\364\274\013\276\2202\206\276\252\354==\253]6\276,j\276<B2\247\274\343E^\276\203\000\343<\036\260\020>\335\325\251\276t\347\t>+|\007\2763\0216>\232\007Z>\203\262\360>\365\225\036\275g\320\363\275\213\376\201\274v\3061\276\000\327\\\273\373\317\214>\024N\204\275\335\346\024:\211\266\005>O\210p\274s39>\216\302M>g\031\r>\031}\017>\2070\372=\306\223\022\276\316|\314\274-\361]>nhn\275\222\305#>\327\031\216>\251\216c>\323\234\225\275yL\177>\321\205\221\276\301\211I>\301\226\323\272\302a\233>z\000\375\275NF\322=!\206\243\276\274{\211\276I\300?\276\014\010\263=gDt=]]\005\275\326\000\215\276\032\276\250\276\2625\n>7\200\227<\'\214+\276\275\323\010\275\345\302\211\275:\277\023>\021\307\013\274\376\342\001>\252\tT\276\211\350\010\275\211\247\327<\213\375G>\\\r\211\276\221\310\267\275+\356I\275\253\314\357=\002\232 >x\026\305\2753\007r\276\017\210\004\276\345o\214\276\326\220\253=\371\013\230\274\353\254\225\2757\232\205>\373/\233\2758\341\306=\016S\365\2757\3423>e\376\246>)\234\217\276`3\000\276\325\367\254\276\000>\256=\344Rl\276\213\242;\275S\022;>m\020T\276\222i\206=\377\252\310\275S\017\337=\236\277G\275(\363C\274\225ka>\217\\\302>9=\273=}\016\236\275\020y\371\275\207\226\322=`\333\207\275\277\242j>\320\231\361=J\256j>\240\265\016\276\376\204\306\274\225\247#>\025\032X\275aut=\r\364$=W\332\361=\315n\204>|D\033\276\231D\024\276\331\215\t>\024J6\275[\324Z>\312<G\276\373F\346\276\263G\320\276\357YI\276\216\254\017>x=\360=\263Y5>\0103\321=\236^&=&\020\025>\330\002O\275\253\340=>"
          }
        }
      }
    }
    node {
      name: "model/pi_fc2/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc2/w/Assign"
      op: "Assign"
      input: "model/pi_fc2/w"
      input: "model/pi_fc2/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc2/w/read"
      op: "Identity"
      input: "model/pi_fc2/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc2/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc2/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc2/b/Assign"
      op: "Assign"
      input: "model/pi_fc2/b"
      input: "model/pi_fc2/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc2/b/read"
      op: "Identity"
      input: "model/pi_fc2/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc2/MatMul"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "model/pi_fc2/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc2/add"
      op: "Add"
      input: "model/pi_fc2/MatMul"
      input: "model/pi_fc2/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_4"
      op: "Tanh"
      input: "model/pi_fc2/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc2/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\252s\243\275Ce\205=UH\313=I\'b\275\242\004\007>R\370!\276\330C\216\276\244\342\272\274\307\306\006=\246\201z>\273\315\014\273\365u\'>A7\271\275?\222&\274\320\246\034>\364\266\263>\002\346\264\275\006\263\n>\210\204\036\276\335\3043\276\353\001\351>\203\366`\275\253\323\026\275\306N\372>\237\356\247\275\347\026\226\275\216\360\024\276:\026\316\275\222:\305=\372\255\003>\3139{>x\350>\276\035\253.>!\330O\276&\342\266\276\3332p>\232\265\010\276\311\263\032\275\354\002*>\036v#=]\320s>f\334\262=g\224\'\275\225_,>\373\202_>.\231\017=n\254\260\273tX\224=\220\304\346\275\031\233\262>\216\025\177=\345\372\026\276A5\242\275h\357:>\201{F>@\275g>&\215\211\276\222\214\351\275\243\333\001> 7\361=\303\007c\276\375\370\341\275N\243m\275\2542w\274p\325\360\274\023\312x\275\354\271\315\275l\200{\275h\325~\274\007\021\014>\370\374\237\275\277\323\260\276\354\373\332\275\340i[\275LT\007>U\000Y=\355\235\220\275i7\027>\313\317\222\275\227\216\217>B\223\236>B\343(>\024\326\242\275\024\301$\276\261Qp>\305]w\274p\365\342:1\302T\276&.\304<E\363i>8\351\303<\332\230r>\016t\213\276\235t\264\276.\013\330\2748o\270\275;\024g>\250\237\317\275\030x\332=I\206\267\275\013Q|><\033\006?\366\311\370\274\236\020\371=\315\243)>\nh)=\227\251\374=/\243\316=6\376\310=t\265(\275Q\353<>nA\366=`\306\271\276\217\341\205\275\313\264\021>\224\024(\276\340\323\252>\323]\335=$H\366\274\037*\204\276\005\0370>\202\352+\275\274w\231>\374\247\212<\034\274\"\273g\212\203>\n\232\303\274$\t\363\275\356:6\276\237\3002>f\217P>\206\002+>\305\334\301\276q\016\256\275\315c0\276w\030\037\276#vy>{\271o>\202%:\274\\\356\351=\362p\214=_/\330\275\270\353\240\275v|\325=r\243\013>n\313\337\275\274I!=h\245\351=\221\004\251\275\255\247\177\276\033\027\256\273J\225\355=\017wF\276\240\306\032=\212\367\226>\002\367\324<\\D\000>\257%\031\276\204\003V\276\231#\237>M\026\217>\256\3040\276Z\312\211\276\377\022\200\276\002a\213>\004\021\242\275]\227\365\275}\275\034=\362T\265\275\nH5>qN\032\275\252RL=[4#\274\227\177\027\276/\223\025=X\240\210\276:\014\324<s\034\n<n\305c>\021\350\245>\213\n\235\276\357\t\254>\310\030\034\276JI\371<\356\025\371=\317\360\250\276\ne\243\273\225\030u:\304\270\221>v\260\276;O\262-=u\350!\275Bm\002\275\304\373\233=kl\220=\257\265\242>\010\202\r>Q\202Z\276P/P<z\022M\274w,\027>lC\262\276i\336\362\275\026{z\275\370g\246>0\224k\276\301\221K=\224\006\004>\372TH>\330oK\276c\026\002\275`\332z=\207\320:\2751M\364\275\006):\276#i\244<\231`D\276\331\335v>\t\240\212\275\243/J=k>\225\272\216\334\304\274\037$<\276\226R\343=7\352\035\276.Z\361=\320f\371\274\331\002L>\r\302\267\274\"<\237\276\215\250\253>\241Z\006>\357\\\014>O\002\271>\353\0059=R\250\223>\340K\016>\260\243\214>o\030\255>N\000Q\275\311\270\230\274\013\026e\276\341&\326=\333\306\353\275\027\263\253>\311\365\276<D\026\223<\034\374Q\276\313\211\351\275h\017q>\207\351Q=\273\233\034>\002u\331=s\222\210\276d\314F>\347?\254=\275\360\'\276zH?\275\314\214q=G\201\241>s\3575\276\352\253\263>\001\2132>\3411\250;h\371\301=\263Db<\030\017M>\332+\326>Ma9=\201fO>\361\214f\275Eb\262>)\252\242\275\206R\337>\005\032;\2764\261\243\275-1J\276\371\017F=\363\260\336>\033\030U\276\032\335\253\274\013\177\004\276\036\237\372=4\366\246\275m(\331<\311;\026=\202\317\323={Y\037\276j>d\275\035\341:=0L\206\275A\231?\276=>%\276\230\266J\275\0354\243<R\346\231\276d\301=\276\3353\214>*\356\302=\271\207\003\273=\345\035>`\367\360=4\177\311\275\2118\354\275\306&\244\275+\026\237\275\356\340\204\276B &\274\247\007\002\275\027{\005>\013\254X>\221\265\341\275?&\255\275iMk>\345D3=\276\375\230=\254\260\245=u\3725\276*\"\201>\255^H>\000\374,\276\020\246\031>\n0(\276\036\273\207\274\37455>F4%\275\225\3457> 8,>\353F\321=U\326\344\275l\320\303\276-\205O=\313>\032>8eX\275\266\317W\275\262\347\314=\2076\252>\254S*>\022W:;Mw\245\275\327\302\204>\210\027\220\275:&K\276\363\353\242\276G\020\036>\222\357#\276:=w<\332\3172>~+\265>\260\261\226\274\374\334\276\275b\225.\276\024,/\276\347\225\232\2763\023:\276N\036\245>\321\3300\276\312\003;>K\027\222\276\312E\254\275\312\251j\275\272\332\206\276\222>\207=\255\021\n\275\365\351\215=\377\216>\276\226\231D>:\023\353\275J\202A\276\347\240\244\276iH\n\276\232A6>,\354\204\2766\275\016\275\n\331\311\274\341\n\241\274\306\261\207<B\216\033\276\314\376\260\274U\233\020>\250\271\027=\325dF\276e9\037\276[3\214>\306=\014\276fh\213>\377\344\342\275\364\347\232:\037\224\024>:\005(<\372\356l\273pR\341;\0052\010>|\2314=\202\360Z>,\014\342=\217\223O=bd\244<\307>\326\276|n\252\275\020!\355\275\307\374\205>2\373\304>y\242\274\276\332s\230\276\3157\245=&\021\224\275\020\247\347=d\216\023\276>\3276\274\372**>sY\204>\274]\006\276\'tC>z\256\354\274\021\016\203\276\337C\031\275\255E\340<\346M\352\275u\032\231>\004\337\217\275\261\324\255\273\315\315\321;5\272z\276b\334\237=7\023\203\275\227\205\r=\331\337t\274\210P#<\"\355\331<\310\315\025>\213\241z=\3630\031>\343kx>\025\270\331>\2448\316\275\255\277\230\274\214M\272\2751h\215\276\251\217%\276\002(\253>\022ix\275 Xj\276I\274]>\322\343\204\275\347vo\275\312bN>\252\300U\276\254KE\276\206\341|>Tu\340\275mk\022\276\263}\352\274\'VV\276%\264\241=QC_\275|\0064=\211;\346\274*d4\274h\313\214>\300\225\036\275\016\013\300\273:\325m>s\352Q>\244\330->BGt\275\270\230\247\275#?\355=]\332\223>\214\242@\276A\211#>\226\020B\276w$\363\275)\025k\275\3356?\276\352\016\221>j\313\000\277\312n|>X;$\276O\311\312=\302\254\017< \252?>\306\':>\001\234\035\276\"\303\204\276\354!\344\275\234\302}\274\032\315\007\276\340[\215\275\217\277\037\276\330[\r\275\200\n\236\275\344\217\250\276\006s\217=\224\277+\276\246J\272\275\241\306)\274\345\235\270\275\312\354\277>ka\267=\327\317\206\274Q\213W>\000\235-\276\272\221\222=K\321\264\275%\256\233=\244\344\370\275r/o\276=w\346\276\346\214\007\276\335XR=,\225\300=T\345\227\276\304\323\204>\343\2327\276:\345$\276\232am\276\215\242\211>\\|\r<\222~1\276L\216=>DM?\276i\230\345<\r\362\006\275\320\024\233=Jr->\307\251\214=\206\005&\275hk\201>\311_\367=\036\267Z:V\357G>\233\024\201\276W\203#\276k\024I\274\217r*\275\301\257\'\276\271\371\212\276\236\317\033\276\242Y\024<\377\026\217\275\367\264\341\275[\r5>\024\377\006\275\212\363\316\276X0\375=\351Iw\275\326\204\025\276h^\305\275y\272\261\276\3248\002>\352\356\217>\234\363\211=\342\215\034\276\373\236=>\256\335\246\275w\353K>\220F3\275=}\313=\213|\303\275\330\275\345\275\000\330\021>qO\257=+g7\276\275+X=\352\265>\276z:\222>\223U\036>:E\337\2750\030\256\276#1<;\024\371\034=\220\310\205=\275q\024>Q\360\252\276\276\"\241\276\336\365\203<\331_E>\332\367\223\275\332\324i=\206\353e>\253\204\017>if\246>V\001\017>\372\360\257\276Vw\325<0\211\372\275X\274\212\276\217\276\026\276*\230\250<c?\021>\212\007\360=LZ\300>\376\2302=\346=2\276\351\000C\276\272{\277\275\017\232D>\202\305\341=\373\377\213>[+\273=\033\312j\275U\260V>Tjc\274Q\257\027\275\260\344D\275\331\302\006>GC\021>3\222g=!\366\274>\375\010\272\274Y\020\234=}\035\226\2763\376\322\274\276\357\217\275\264B\355=Z&D\276\220Fa>\017k\014\276\034\322\267>!>\253\275\355\337\003;zkx=nM<\275\013\200q\276\2529g>\215\217(>%\202)=\r:\210\276\371\214_\274\022\206z\275\001=\025;\006\241\205>\205\343\000=\261\250\332=\366\362\310\276\241G\212>\177s\021\276Y\027\272\275\323\352\365\275\223\357\325>\265\324#>\n\357\225\276\036\t\224\275\376W\315\276\343\247\312\275\220a\345=(\325\331<b\374\317<0\220\022=\320\243\017=%<!\275*\375\235= D=\276\316\347\354=S\366\014\276\240?\257\272ew\321>|\330n=R\275\307\276UN\210=4G\212=P\344\233\275\241\225\222=\007\004\253\276\352\235W>G3\260=\251k\331\275\320\2617<X>c\276\177\244\231\276\357\327\004>\310=$\276c-\017\275\232\333\357;\332\207\007>\313G#\276G\177 \276l\346\345=i!\214>\242\313\021\276\305\271~=O\322\243=\305\010\256\276\206\275\"\276Y\301I\276a\243\277\275\346=\340\2749\360\355:{\213\023>wt\017\276\2371\243\275\237\2243\274\305\212,>M\354\255=Y\331D=\n\306\'>\317\331\306=\360\035\277>\267\006(=\244l]\276\375\007S;\352x\365;\373\n\201>2\ri\276\013\351\034>\244*,>\0022\r\276\360\344\026\276\371\371\024\274\021\230\">\371S\004\276\356\027\314<\334\325\251>u\007\356\275\344!\212=S\022\267>\n\250\031\273\240 \220=G|\"\276\345!\002\274\007\342\277>\267\023.\2766D\224=\370\366\t\276Z\203\320=?\\R\276\261\021]>\005\372 \276\177fj\275\337\357\003\276\334\2355\275\367\263\357\275;\030*=\017\341\004>\227\023\244>\003\215g\276\302\3360\276\265Q\'\275\274J\373=DZ\205>8\365\270>\027@#\2764\313\027\276\205Q\002>i\323\321\274&Mj<w\311@>\244 \357\276c\375\217>\251\216\217=\014`\257\274\210&\014\275\230\300\317\274\223\244\026\276\214\313{\276\354p\004>\273\0352\274\374\244\374\275S\342>>\206\315\224\275\272\271\246>jn\007\276\261\253\262\275wME>\231S\361;vW*\276I?a=\231Y;>\255\317\\>)o~>\326zV>\275\035\207<\271)\223>m\373\\\276)\252\372>E\034/=A\232h\275`\374\313<s\245\217=\232W2>\253!\003>\013\263L>I\341\223=n\243O=\3123\010>R\272W>\333\005$=aC_=\317\247c\2763s\r=\002u\035\275B4\213>\004n\221=\0265H>$\332\023\276\356\244\374=\342\022\257=\010p\214>B\274\007\276\317aw=\273\334\336\275l\033\257=\323\032\264<\301k1>\327\312\023\276~\t0>\257ml>6\325S>n\t\334=k\007@>\355\346\356\273s}\211\276\360\336\224\276\277\352$\2728\332^\276ei\343\275\374V\202\276x\r\253=3\372}\276o\272V\275b\363\247=M\333}\276h\\\361<\350X+>(\"\177>4n!\276\307G \276\223}\223\276\375e/>\003\356\032\276\007[#\276\272\002\247\275`\216\234=\336\214%>\231\016\213>`\216b\276\353\215\331\276\3026\006>j!\321=9\304\351=\233\365P=\267x\001>\360\017\246\276\021\313l\276\302?\305=;\275\311\276a\006\"\276\313\255\310\275=\317\207>\274\221|\276w\337\203\275\375\353\274=5GV\275\251@\034=\016:8\275\211c->\213*f\276\243\327\t\277F\342\225\275\001e >F\374\220>c\311\n\275\347;\235=Q\310\310;V\017-=\312m\230=T\323\017\275\335\314p\275\365\254\001;\327\025\336=e\301\022=\177\002\027\276\250\311\027>q\303\014>\014\337/>\352\212\033\276}\247\003\276\273\016\335<\207F1>\365I9\276\343\202\245\276\331K\027>m\271\003>\360\344\014=\343\"\223=\2469\320=x\233\200=\277\376^>\207\250\345\274i\201J>\260i$>\236\2616\275\220\276\026>\344\363\234<\335C\224\276\035\004u\275\002Z\354\275\037O\031>\274Q4>NN\'\275yf_\276\001?\203\274\372\314\370\275\357\030Q=\\]\017\274s\005w\276\353\"<=\000\305\343;r\227\255\274\247\006a\275L\000\251>\340D<>\002\265\255>\\C^>\234e\370;]:\205\276\033\010\371=\301\270\007\277\027\365\r=0\035\363\274\310iT=&A\217=\235\312\261\275\340\226\337\275?fd>9V8>\365;6=\263J\205>U\344\017=\355a\334>\270\251\255<\256\307\224\275\2260\351\274\014OD>\357\r\031\276\010\275(\276$\206\247=I{\276\276\363<\226\276\340r\247=\236\330\017\276\030\243@\275h\251~<F^\003\275ktX</\356\277<I\213\334=\002\300\372\275\027\230\005\2768\350\264=\035Y\217\276\304\236\242\276O\344\014=\353\257>=+XB\275\363\345\276\274\207qe>\010\330\261\276\235\250\261\274\353\340\217\276O\250\322\275z\335\271<\377\301K\275\321k\207\276=o\252=\335CF\276\342\202|\276\203\3640\276\0242\277\276\221\'\245\276\020O\306\273\277]\032\275\237X\201\276\361A!\276xw\372\271@w%\275\375\377\265;\372\351\026<8\254\344\275\256\373\273\275#\225\211\276\301\2658\274\371\\\006=\316\310\252=&sO=?`<\275\216wz\274au\377=\356^;>P\305\225>jv\253>r\3725>9w\262=c\r\226\273\246{\276=\361B\r\276B\321G>\327\245\206\276&G\340=4\344C>\346U<\274\237\225k>\\\024\224<0\323\240\275\205\337\273\276\036I\331\275\222\210n\276s\343\231=x\307\201>M\261\205\274>\364f=#\203\336=H\320\200\276\301\302\222>U\307~\275\304\324\007>g\016p>XZ\212\274W \225\275\353\227M\276\360\210J\276>H\277>\237\2404\274I\253\377\275\2246\276\2758U\027\276*\352\265\273\252\006T>\2625\202=\275YR\276\331Q\310\275\033\211;>\351[\246\274\0253\\\276\353f\343>\202\002\357=\224\251k\275\301\366\311;\370?\256\276(\236\350\274\225/e\275P\360%>`\313W\276\210\027\234=Zj\226\275\215[\222>\t\342\264\276>\'\347\274A\212\026=\017.\303\275yn\240=\276\006f>\246\021!\276\302\240\347=\267\014\254=\177\314G>\021E\202>\014\260\021=L[\251=5\273\017>\033\336\201;;\352}>\351\224\253=\3173\203\276\231A\240\274\010\211\204\276\377cx>(J\255\276\367\016=\275\t9\024\275\004>\212>\226\260\274=\306,\234=\013\277;>\360M\021\276\316\242\215\276K\2504=oOx>\317\210\260=a83\275\252\234a>?~L>T\270^>i#9>\325\237\026\274\002E\204\276\033\251\273\275}w\200\275\372\347`\276\303\227\035=\236\240\000\276\301\324\340\275\243\0223\276{Q\307>]\311\200\276\367\230\316\276\031\304\315=\267\201\250\276\355,\030\275\340.Z=\211k\306\275\205\211\314\273\253\353_\2756o]>!_\204\274\347m\030>\035\257$>\234,\341;\276{\307\274\363\276\343=\201\177#\275\277\231\312\273\310m\006\2745\375\327=\246\3559\276=_$>I\222\022>\"\333\010\275\221\363\317\2767X\346=\027\0230\276\204\357\"\276\\\313\002=\324\031\312;Wq\232\276\3108\252\272\356\256\276\274)\316>=\310\241\235\275\323\242O>Z\361\335=\324\003\035\276\346<\244>\220\367\251\276\205A\031\276\250\322\377=\341M\216;}\023\362=\321[u\276Y$\320;[j\251>\214\336I>\"\245\275\276\314$[>\253\325B<\274\214\332\274\245_\t>\223\032%\275\303\224\216>\236\206\200\275s:\276\275{j\325\276\316b\303=\364;\213=\233\223-\276x\313\224\276\323\330\014>\341\250\241=\332\372\253=\364\017\013\276\224\306\201>\032\333\205\275hC\241=\314\004\014\276><\026\276 \303\350<\023p\227\275\310%\010\275K\225?\276H\330\246\275]\272\004=\0326\206>\314\250<\275SP.\276cV <\255\022(\276\365\3129\276B\010\312\275\333O\301<\210\207@\276$\255\222\275\000\242\203=\261q\254\276\013Y\213>J&A>\204x\230=;\243\355=\02677>\"25\276\023g\271>\215\013G=\215#}=\250%+>\203\3740\274\3334S\276}\377\020>\337\351\005\275o\244\224\275\034\362\203<h.\013\276\257<\344\275w\000!\276\213@\254==\225l\275\224\257\347\276\301Ob\276\0355v=\232M\341>\324\177Z>F\005\005=4\313\r>t\206X>\226.>\275Z/&;e\207\241>!W\235\275\020n\366\275\227\345\314\275S\372k>:l\230=%\267\014=\034\244\177\275\255\222\262>\321\277\204\275#:\240>\370\037\017\276\032\203F\276J\242a\276\215\0055>\2748\034\276AYF<\371\033\243=\323\263\037>\215s\203>\'\221]\276\211\222\361=O\024J\276\265Uz>`\232`>e\002\253\275h\374s\275L\200\360=u`\242\274%\303|\275M\335\330\275-\270\242\274\r9\315>\021\213T>\277\314\325=\201\247[\274\223JA\276\361\227\260;\337\237F\276\030\363O\275\205c\017=\345\037F>\316\274\373\2761\260\322\275\030\354+\276O\271\001\275\367\262i>kj\013>\220\033\215\275\334\274\371\275\250c;\276\026\t\346=\027\207\005\275i\223\271>a\371\203\275j\355\242>\345\004\301\275}\267;\274\332sB=\245\002B\276\337\317A>\035\037\331=\002j\307\275\210e\372\275\010\031\213>}\225\274\275\217\237\200\276\236\331\270=\215\177\033\276\253\361\006\276\235:X=Ou\254<\311\036\364=6\"T\276\300\355\245\275J\240\200\276\214\251C\274\301 \223>Z\262J\276\3364\374=U\247\031>!\025\237\276\253I\221>\346L\206>\270\323\376\275@\313\026\275gY\200\275\3516[>\356\350\302\275GoS>\300\354\367\275K(\037\276\311~\355\275\247+\263\276\262\\\213\274\246v\037\275F\373j\275Wm\251<\246\333\356\275~\335<\274\242\312\003=\016t\220\275\255\221J\276\316\004\323=2\313\203<\337\360(>z\236\217<*\342t\276\242Q\266=_\315h\276\275\364S\276k\265\r>\206\207h>\001\240\344<F$\366\275\326\032\232\275\030\351\313\274\210\n:>LF\202=\345\362J\276\021\005\332\272\363\267O\275\327\003\033\277\203I=>\361\272?\276H\310\240>\347\346G\276\336\322M>\370G\215\275[\023\301<\264r\'\274\005\000\272\274\314\n\222<J\370$\276\205w\213\275b\020P\275\341\266\322\276G\005\265>\206\253?=\267\3123=]\241?=B\022\341\274JQ\000\275\306;,>Q7 \273\313\274\263=\241u\240\274\370\267@>\321=6\274\332f\206>\237\341\251>W\251\"=\327xl>\323_\201>x\032\252<\332\235\004>\007p\227\276l\222\307=\244\261\024\276\252p/> \216\002<\027\027\325\275IIg\273\007\200\334\275\036\026\300=\257\274\343=\234$7; \351\024>\036rb\276\202\205\240\276P\344y\276;\010\344\275\270\266\241\275y\331\236=\357\014\257=\273+h\2750K\374\275r\2326=\325\334\354\276kt\'>\213\207\362\275Bj\023>~\253\207\276\370\002\346=\337\306\276\274\223\252\207>\002XG\275X\245\252=8\355\260\276\226\026\377\275\2418\305\276\006;\377=X\002\205\276\035L\247<\315U\234>\326\372|\275\\\276\241>\227\214\250\275\024\274\265\275\305\376\"\273\200\253\267\275\331B\325<\200\366:\276F\355\">}c\002>Q\204\264\276\234\257\330\275\"j(>\006`\260>\314\216&\276\317\242\034\2766\007\247\274\271\301\214\275\031\246\240\276>!\267=\250$\254=\212\317,=\236\216\n\275\253\277\002\276H\033z\275\226\207;\275\006|\014>)iH>\377r\221\276\3330R\276\225 \310=\325Zx\275\230wk>\347tG>-J\272>\240nZ\274\230d\037\275\376\352\020>R\220\336=;N\357\276\322/}<:\034\220>\300\236\243\276T\236\303=\361\321\242=\375 \036\276\026\2423\275\376*\236=\337\317\275\275\235f2\276\204\262\372\275\t\345\177\276\367@\275=oO\327\274X\213D\2759\016\031\276\361S\177>\275\207\016\276\227\371\261=\375\032\340=\346\253*=\333b\220>\231\352`\274$S\333\275a\375~>w\255\266\275\345\322\262\276\346\177\002\275\356\243~\274p\221\\>7rQ\276\270B\026>\257\006\326>\263p\371=3Q4>\237\317\031\276\004\320@>\316\263\217<y\314Q\274\014\030\000<0WK\276\312\377\024<\034w\204=1?\313\273\347 \n=\337\243\203\2762\"Z\274T\353\323>gc\336\2749\357\241>N\014\324>ySq>(\345A>M\005B>\264\337\034\276\201t\353=\343\267\373\275l\222\347=\274[o\275\252Y\204\275K\030\307\275\224\001D6\240\276\274\275c\265\t\2753\316\266\276\373R\034=\232IW=L\355\002>\314\037\201=#\316\260=sT\021\276$\242\250=\366\005\022>\210!\356\2753v\305=\241\240\211\276\366x\346=\241#\217\276\"G2>\222\214\260\276\003\204\025\276>\320\204\275\355\024\372\275\023?\353=\010\351\351\275\350\003 >,\262x\275\307\235\255\275S3/\275<07\275\375E\310=\252}\231\276\211\201\241=>\327\205>;\211A<\235\242\020\276b\3673>E\317\257>J\007\000>\370\231Y\276\335\301\027>Fs\321=-\312\361<`Eg\275\017\021\275>0g\250=\252\363\242=:n\251\273\335\270\205>\375\326b>\210\216\300=8j\200\276pf:\275\357\237\277\274\035\272|\276?\036\270<\226\341\231\276\304\245\026>\302\306\376\274-;\366\274\225\232\224\276\247!D>\370K\321={\341T>L\264<\275l\246\331=y\217 \276\200\371}>u\230\023>x\241V\276!\232\273\2736we=\201z\027>\t_2=\313\032I\276\335\340\261=\327SY\276Q\027r>\035i\377\274#\344a\276\236\233\301>\355\275\022\276\326H\342=\302\032\013>r\'G\276\314\026\023\276\226\245\030=x1\304>rou\275\255\254~\276\327\373D>\032hH\276\206\204\347>\034\024\227\276G\224\366\275\321\"\341=\246\231\220\275\260C\254=\035f\320<okZ\276\350\213\023>Wv\376\275\310\270n\276K\364\250\276\337\302\371\275\355X?=\274\016O>\242\241\346>\350 \370<\337B\225=R7!\275z\210\233\276A\232|=;\224\010=(\203<\275l,d:\031\014\036\276\345\246\221=\\\274\261=\266\371\225\275\014D\222\276\273\275o\276\233\037\302<&8\343=_M7\276{\320a\275\257\326\021\275\362\363\207>A\225y>\257Fe>\211\006\327\275\251\222\261\276J\242H\275\343\261\234<\275\255!>m\251R>\362*Z\275\360L\036\275\241\243\022>\352\331:\274\324\333\026>V\003\346:d\255I\276\234r\303\274\263,\021\276\2119w<\203\254J\276\314W\233>8J\357\2752\360=\276\221\334Q>\213\200G\276\353r\312\274gg\236\275\r\304\225>\306\377A>\261?$\276\226r\215\276\215\265\255\274\330$\020=\315(\205\275\215\325\017>\234,\266\274i\'\321\275\247|]\276\261\217,>\370TB>$CT>\362L3\276a\337\265\275\222\322\214\276\352\274&\275\267}\217\276\324\254\245>~\306\374\274#\241!=4/\261=l \240=Q!\210\275\366\365\263\276\252w\256\275\303\305\341<\021\336\">\260Yp=4\333}=\036\335E>?\227\311>\357\254\215\275d\374l\275( \202=Z?\301\275\204\324+=\022\213\374=\375\314\247=\253wq\276\365\263\014\276\027K\022\276_\355d\276\225\361,=\254\"O>\274*g>t\002\254\276i\222k\276\327W\315=*\336\241;14\024\276-\230\274= y\250;\304\330\225\276\255\362\351\276\n\256;\275\004\327\211<m\003\212>P\224$=\033\375q\274p\034_\275a\023\355=v\365:\276\271K\373\275i\327\"\276\0373\241\274\275^\204\276\215\360\233;\323\t\206>\265u\355\275z-\352\275l\304C>@w\001\276~*\213>E\260\034\275\216s\017\275_\036`\276\314d\033\276\004\300\263\275OK!>\377gu\275\200\332\332=x\006\372\275;\313\202>\317-\330>\321\247\201=\023\351M>\351-8\276\250\205\236\275\203\215\000\275)\343\325\274\261U|=\001^\334>T\2417;\006\036\240\2757\"!=(\376\304>\343\352\220\274E\031\343\275\215\374\263\275\362\302\222\275\365\033\234\276\000\251\362=s\223\217>i\354\364=\311\257C\276\225\307N\275\035\036$\276\331Y\311\275L\211\237>nk\220\276\240\267\302=?l\271\2761\261u\276\025\243\251\275#\273\305\275\247\016\225>\006\215O\275\314\260\373\275\357)\327\275WrR<Z8\342=\360\335\224=\034\017\201=l\004->\312\355\261\275-\301\277<\327\375\000>\tH\330\275\366\330^>\236\3721>\277U\246>\021\320\241=\244_\024\276\354T\177>K\327L\275\014)\320=\355\227\016\276\333U\330=\006\035X=a\356\341\276\220\212\202\276\006\322\342\274\305#j>\371\360\346=tD\357\275Y&>>3Ld=\226\362V>\273\026G\275\275\343\301\275\334\343\206\2768wD\276\275\2101\276t\r\252\275(\316\021\276\200\304C\276\267\247\362\275\r\307\230\275\272\005\240\275\271\336&=\227\034\342\275\252\322O\276\223\3078>\322T\033\276\304\264F\276[^\242\276M\251\206\276D.\025\275R]\314\275\243\210I>2\271m=l\221\253\276!\253h\275G\320\233\276\226dy;\326\\J>$\336\336=m,\204\2768\273\220>\"jN\276e\2071=\322\247=> q\341=b\271\247\275\225\225%>e\210\205\274\022\030c\276\007\201E>rh\250=\036\034\206=\001\207@>\362M\243>\0361\304=\334P\036\276\335?\340<D\206\"=\320z\216\276\305\".\276\243H\020\276i]\356=\003.\343\276\003W\204<&)\2568\204\340N\273\032\004\037>\300\243\240>\246\351\023\276\021\263\220=\350\306\321=WP\375<\240\263\206\275\021\323\270=/\247\027\274VP;>\345\232\t>Lf\214>3F\241\276\016\032T>\243\0377>\220\300\037\275P\305\313\275\374\254\t\276\365\250\303\275\\)\305=\314S\371<t\347\014\277+\'\031\276:\001\177\2757\201\0348G:\033\276\204\305\375\275\310t\031\274\342\234\212=\243iq\275\321]\213\275!\r\324=\3719\373>\005\315\025>\250\263\307=\327\345Z\275\370r\034\276HJ\265:\244\2455\276?\224B\275\3442&>\226\270\204=\340\236\262>\"2\310=k\245\031\276Y(\n>}P\016\273\375\254%>v7\005>1c\220\274\367\320e\275\234Z\007>W!\361<h\237\323\27486O=\261\206\232\275\377\235\364\276\317W\201\274\357{\005\276Z@q>\335\253\216\274e\217\345\275\207z\031\276\204\177\272<3\336Z>O\304\004\2765x\000\2762y$>`q\216=\350s<\275\215B\'>\364J\030<\033\205b\276=\255\224\276\324F\246\274\315>\262\276\374\022\215>+\237\303\275\327\020\260\274\353z\266=\021\325\034\276\346\256!\275\272\225\362\275d\240\374\274B\253,\275%B&\276\277\325\304\275\\\200\374\274\363\253\313\276\250\016s>\201(\001\276\370\262\273>g(~>\274\204\303\274x7=\275\026\025A>\361+G\275\260\360/>\217\005\234=\260F\t\276\370\020\242>|\312{\276\353\221\321\275\264\342\255\276[\321A=,\036\236\276\202\252\224\276CY\017=\274\233\r>\205\365\235\275\306\004\025>\333\235T\275\016\003#>T\024\202=v\320\243<\341\013\300\275\007#2>\376\021{\276~\n\347=&\225\274\274\272\222\245>\235\317\265\275c\200\306=\234\365\270\274\016\223\010\2765\266e\275\307\244\207\275Q[\006\276\215)\344\275\324X\353=\323]\037\276\217\215r\274\350\347\030\276t\205\277\276\237\t\372=\332\305J\274}\205_<x\003\034\276\303\035R>^\367I<*\365\336<\336D\245\276\006\343\221<g\355\244\275\236J>>{\214\030>aT\033\276\034\367\272>\262\274\351\273\217K\35396j\001?P\325\273\275\255\346\n>A\220\213\275>2\023\276\224\2149=\030\014\315>\260\225w\276\303\2668\275t\246\275=\004\320\263>\371\355\346\275l/!\276\313\364E>\237\346s>M\001\206;+\333>\276\225\213[=\305G\370\275:\233\213\275\265n\221\276?!I\276)$K\276\346\314\231<N\235\021\276\222 \357=$\344\274=\340|i>"
          }
        }
      }
    }
    node {
      name: "model/vf_fc2/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc2/w/Assign"
      op: "Assign"
      input: "model/vf_fc2/w"
      input: "model/vf_fc2/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc2/w/read"
      op: "Identity"
      input: "model/vf_fc2/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc2/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc2/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc2/b/Assign"
      op: "Assign"
      input: "model/vf_fc2/b"
      input: "model/vf_fc2/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc2/b/read"
      op: "Identity"
      input: "model/vf_fc2/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc2/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/vf_fc2/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc2/add"
      op: "Add"
      input: "model/vf_fc2/MatMul"
      input: "model/vf_fc2/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_5"
      op: "Tanh"
      input: "model/vf_fc2/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
            tensor_content: "^\307\232<OGG\275\306l\367\275\373\2617>?\201\224=^H\306;\213\017\263=\367W2=\215(\001>\023\304\221\275\326\307\024>\374\373\304<\360\215U\275\275-\251>i\376\025=\032S\373\2755\265\333=\347)\"\276[\270*>\202\336\341;\342~\260;z\344\256\275\330c\224\275c\331\243\275(\235\013>\253\374=\275\264\201\347=\373\265t=9\201\207>*V\343=\017\003F\275\304\360\376\275\237\014\020\276rs1\276\377\'<\276I>\023\276c\250\026=}\\Z\276a\030\t=\231\277\025>\235\215\245\274\357\021z\273\230\311\203\273\020hY\275n?/\276\250H\370=\312\306\342=\222$\037>yh\010>>\371H\274\357\311\t\276U\314~\275\321\264\022\275\032\267\214>\"\364\313\275O\311c>\252\177\t\276\215y\225<]\356\256\275\212\026^>\034A7\275W&,>\267\242t<\341B\261="
          }
        }
      }
    }
    node {
      name: "model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/w/Assign"
      op: "Assign"
      input: "model/vf/w"
      input: "model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/w/read"
      op: "Identity"
      input: "model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/b/Assign"
      op: "Assign"
      input: "model/vf/b"
      input: "model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/b/read"
      op: "Identity"
      input: "model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/MatMul"
      op: "MatMul"
      input: "model/Tanh_5"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf/add"
      op: "Add"
      input: "model/vf/MatMul"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
            tensor_content: "f(N\273\033\367\032:\2375\016:\341\361\374\2720\213M:Q\200\0049zh\3429\217\035a\272+\352S\265\321\010\3527\305a\024\273L0\013\273\363\305\343:b\n\025\273\013\312i:\017\324\304\271p\021U;\252\312\243\272\241\007\330\271\265\004\":\204\001T\271\253\360\\\272#\035\237\272\2273\255:\243\342\232\271\007x>9\364\256\254\272\242\370P9c\355\256\2727\013-\273\365+\3558\346\371i\272\333\002\005;\214\320\020:\200\006/8\335\260\3719F*\037\273\310\252\241\271\216\320\277\272\362gK\270l\260\262:y+\010\273\246?\2138\257\225\323:u\222t\272w\236\\9\316\201\0037\306\244\352\2705/\221:v\213\030;\371\224\331\267\310\203\207\272\261\007\005:\220O\223\272d!\024\272\224\376\3419kC\3759\351d}9\224\253\306\271\226\204\302:\260_U\272\264\206\245\272\030\300\254\271\004ww9"
          }
        }
      }
    }
    node {
      name: "model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/w/Assign"
      op: "Assign"
      input: "model/pi/w"
      input: "model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/w/read"
      op: "Identity"
      input: "model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/b/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/b/read"
      op: "Identity"
      input: "model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/MatMul"
      op: "MatMul"
      input: "model/Tanh_4"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi/add"
      op: "Add"
      input: "model/pi/MatMul"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/logstd/Assign"
      op: "Assign"
      input: "model/pi/logstd"
      input: "model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/logstd/read"
      op: "Identity"
      input: "model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/mul"
      op: "Mul"
      input: "model/pi/add"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/add"
      op: "Add"
      input: "model/mul"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/concat"
      op: "ConcatV2"
      input: "model/pi/add"
      input: "model/add"
      input: "model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\210|\016:\206\325\223\272\231\355\247\270j\371:\272\013P\325\271%\356\257:\211\330\240:\227E\024;\252\243\275:\010\373Y\272\374(;:\340\376E:\275q\30394_\271:\177\374\204\272\022O\014\272\314\377\032\270\220\034\247\272Bz\363\272\016\334\374\271Qg\342\271\227\302f:\326\'3\272\256\2724\272>2 \272`\363U\272t\324H:N\213\001\273\237\365\304:\367\276\221\271\253Q\006\271\013\216+\272\320FF;\347\221l\273\217\215%\272\211y\004\272\227\374$\272\202\022\345\271\212\321\271:\323\367X:k\343\305\272\3170\021\273\234\034\023\273\203q\026;\t\315\031\272s\332\220\270\375\266\3549\364\205\332:\032\241\021\273\242\217w8\t\301?\270K\347\010\272\ry\177\272\315\220\226:\325}\027:W\020L\271\034\374\025;|\332h\272\023Z~\270^\261\276\272\013\214\252\270\003\251\n:a\243\246\272\177\363\246:"
          }
        }
      }
    }
    node {
      name: "model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/w/Assign"
      op: "Assign"
      input: "model/q/w"
      input: "model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/w/read"
      op: "Identity"
      input: "model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/b/Assign"
      op: "Assign"
      input: "model/q/b"
      input: "model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/b/read"
      op: "Identity"
      input: "model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/MatMul"
      op: "MatMul"
      input: "model/Tanh_5"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/q/add"
      op: "Add"
      input: "model/q/MatMul"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/split"
      op: "Split"
      input: "model/split/split_dim"
      input: "model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "model/Exp"
      op: "Exp"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "output/random_normal/mul"
      op: "Mul"
      input: "output/random_normal/RandomStandardNormal"
      input: "output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/random_normal"
      op: "Add"
      input: "output/random_normal/mul"
      input: "output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/mul"
      op: "Mul"
      input: "model/Exp"
      input: "output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/add"
      op: "Add"
      input: "model/split"
      input: "output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/sub"
      op: "Sub"
      input: "output/add"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/truediv"
      op: "RealDiv"
      input: "output/sub"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Square"
      op: "Square"
      input: "output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum"
      op: "Sum"
      input: "output/Square"
      input: "output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "output/mul_1"
      op: "Mul"
      input: "output/mul_1/x"
      input: "output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape_1"
      op: "Shape"
      input: "output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "output/strided_slice"
      op: "StridedSlice"
      input: "output/Shape_1"
      input: "output/strided_slice/stack"
      input: "output/strided_slice/stack_1"
      input: "output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "output/Cast"
      op: "Cast"
      input: "output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385175704956
          }
        }
      }
    }
    node {
      name: "output/mul_2"
      op: "Mul"
      input: "output/mul_2/x"
      input: "output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/add_1"
      op: "Add"
      input: "output/mul_1"
      input: "output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum_1"
      op: "Sum"
      input: "model/split:1"
      input: "output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/add_2"
      op: "Add"
      input: "output/add_1"
      input: "output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1"
      op: "StridedSlice"
      input: "model/vf/add"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 30
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Shape"
      op: "Shape"
      input: "oldpi/input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice"
      op: "StridedSlice"
      input: "oldpi/model/flatten/Shape"
      input: "oldpi/model/flatten/strided_slice/stack"
      input: "oldpi/model/flatten/strided_slice/stack_1"
      input: "oldpi/model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape"
      op: "Pack"
      input: "oldpi/model/flatten/strided_slice"
      input: "oldpi/model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape"
      op: "Reshape"
      input: "oldpi/input/Ob"
      input: "oldpi/model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
            tensor_content: "F*\311<\320\343C\276\367\024?>\000\241;\276GVH\276ad}\276\226\274e>\214\0226=6j7\275;\254\255=\216=\027=\005_\273\276$3\3569\003\223t>\277\356\036>\254\232s\276\242;.>~6\374=\200v\245\276\231\030\226\276s\372\224\2741x4<\334i\334\275v?<>L!\031\276/\271H>_W\236\276\363<\331\2750!\235\276\354\221R>\034\331\210=\347\230a\276Mt:\275\207?\312\276\302\201\241=+\241\'>\241\306\364=bG\325\275\035N\241\276mI\026>W\3255=;\337\243<n\240\036>\266\323R>\353\030\030>\311\276\330\2752\215\243<\355\t\027>u\034\366= \350\254<\367\246w=\2103\202=e\231p>P\242\215>\021-+\276=\250#\276z\361$\276}r\337\275\342\333\266\275xz\265\272Nd\030\276C&\211\276\273\000\323\275\317Ts\275\302\320\212>\n\n\220>\007*\231>\007\216\020>\300[\326\275*r\207=gA=>\202\342\240\276q\314\345\274\027\207\207\276|\254*\276\265[\005>\004\363\201\276,y\241\276\243\344\215=\260p\204\276\371\0013\276\373U\032\276N\206f\275\323O\342\274\032\235\210>\2427\241\276\023GJ\276c.i\276\033r6>\331\000i>\323\004n\275%X+\276-H\353\275{\213\251\275,\203*>\304\2032>\352\017N\276\024D\020\276+;\270>\331\262x\274\010\314\267=96\377=F\252G\276\234\222\n>\326\362\032>E\316\346\275o)\330\274%\024j=\017\231\202\275\267\027I=\347\270\213\276\204\350A=\341\236,=\357o\253\275\337i\261>\344f\335;~\257\210\276\277\257\272\275>\277Q>)\004q=\224\007\311\274\234\210\216\275\237\023J\274\2051\320\275H\316B\276\305g\254=x\330\010>\214\356l\275,\001~\276~Ya\2767\315=\275m\"J>\352\221\006\276\216\231\265\275\332\240\267>\233G\026>\350\036\207\276\322\306(\276J\242\247\2734\275G\276\222;n\275\372\245\312\276\243\327\251=\322m\345<\315\000\021>\227\225\">\212\226\337=H\364T\276<\322\273=\327\212\007;V\261\373\275\337c\260=\257\231\n\276(\'\233\276\3126\311\275\017P9=\362a\004\276,ym\276~\310\231\276\t\342\243\276\342\013\004<P\022\005\275\372\304R>\377r;\276\007U\240\276\230bQ>h\355\237\275\324\217\245\275q\256n>\205|k>\330r\321=\214!\333\275\312\033$>\211\245%>\324\030=\275\372j\014\276\032\005\r<X\275\266>?h\000\276\257\261-\275kF\000<\375t\374\275\035\236P>w8\243=\267Z\305<\355\035\016=t\005%>\023\3114>!\n\300\275\005&@>\025\233\230>\340\232\034>\252\'~=\226n\350=$o\347\2756\332>\275\246\246!\276B\002\207\274o=%\274\0225\'>C\002\267>\227\207\255\275f\302n\276\355_\210=\232M\007=\317*\305=\332\214\333=\276\266\003\276\315\234\362\275q\210\236\275\220\252w\276\224[\026\276\024\265Z>}_p\276\257\303\036>k\215\025\276\353\275\025\276\035\203\252\276\035[\361\275\260}\217\276\370\373\227\276\n\0246>\030\271\215\276%\326\213<g<\036\274\343\310\213\275\004o\214\276\326b\253\276\363\032\300:>\005)\276e\274\244>Y\347\233=T(\335;H\211\202=\322\333Y\276N\000\272\276\235\243\263>Q\234w<\33289\276\342\016\030\275\n\344\227\274h.\006\275\205x\232=\255y+\276\022\224!>D\354%\273\260LE>NGZ\273nY29\274\266\n>Z\253\243\276#-s=\037l\244\273\025(A>\255\235\200\276\301x/\276\204?\222\276\013\030\027>\t(\013\275\013W\243\274\224\'D\276\352\217!>\n\177X=^\310\270\274\246\265\226>\351\357\262\275\320\237\000>&\t8\273\025h%\276;L\344\275\020\017\214\276/\207\250\275E\366e\276\2576\004>\353\352\200\275\253a\204>T\350\014<\264\216\215\275\360j\331=\365\016\203\276\351z\300\276\314\\K>\336\261\255\276\223\375n>A\320\341\275\007\275\313\276\031{\021\276\245\377\034\276\017\324\313\275\004\351\352\273\317\364\375=\340\323M<\021\346\332=\321\036C>\030\367\323\275\307\253\205>{\332)\275BS\032\275\370\322&\274%\203==;C+>\234\325g>\347G;>\264\223\n\275j\365\035>W\317\272\276M\376\226\275\361|\231<\322w\277=\317\274\223\275\240\251\214\276\177\240\200<\264h\224=\254\334\032>\2752\251=OX\346=J}\274>\"K\217\275\236\352f\276\333\221l>\227\242\273=\361\014R>\214\'t\276KL\022\276\310\2065\276\211\025\362=j\'?>\316G\232\275\327\206\377\275\252\350/\276\317\261\356>\210T\236<\n|\210\276\364\006[>?/l\274{\204\230\272\023\377\315\275\227\023\023>\362\201\026\275(/D\276S\260\'>O\344\r\276\323\205\013\276\211\\\304\275\232\355\200\276\317\321\010>A\254\310=\217\'\213<\225!\345\275\006\345\210\276\233R\007>H\177\007>x\315\334\274mH\262>\215s\301\276\'\023\"=\312g\231\276\347\023\022;\340J\232\274\262V\370\276\301\274m\275Y\221\017>\374\330\030>W\271#>>^m\274Ji\245\276\376H\023\275\t\333<>\254\320\224>\310i\201=\2537\274=\016\"{=/\001\344=\316|\235<w\235\366=$\265\332=\021\214.>\213\317\r>\204\267\323\274E\020l=\2455\001\276\032A\222\275\t[\207\275\r\366=\276\017g\336=8Z\220>YG\003\275\034j\213\276w\300\300=\203|,>c\222<>J\013\214\276!\241k\276\213\341\220>\205\367\254\275h\346$>Q\177\003=\220/:>\026\226\241\276\304\277\212>YJ_>A\276\030\275\370\302k\275E1`\276h\333\201=\302 \325=\014\004\276\276\307\223\363\275g\226\223\274\351\237\224\275\204\010\204\276(Y\323=82F\276\302\213\263=\351r;\276\350\206\344\275#\341U\276\260\3519>\244\316k=\3079\231\275\351\334\351<\2063a\276\265a]\274gv!>,m\034\276\215\354\333=\376\272\037\275\372\223\263=i.\013\276\377\351\202\274D\227C\276\271x\001>\202\343\252\274\324_\367=\005\255\017\276\315?\276\276\250\333}\275~+\373\275\021\021\233=\372O\275\276r\240\000>\324\333\212\2769B\036=\364\371\233\275)\265\210>\354<M>YU\017\275n\210p>R\232\317\275M\000\330;j\340\364\274\202\227a\276\302Qm=\340i\010\275\236\3150\276\364u@>5\313\001\276th\322<-?\001\275\310\237\037\276a\250\361\275\270b\360=\315s\003\276\355u\371=\222\326]\276\021-\003<\302\002\361\274!6|>m\006\374>@[e=\036\316\274=\305\200\205>\346>4:V\273\264=\276&\036\276\3015F>EE<=\030\231\332\275\362t/>\\\004\203=\373x&\275\356~e\276wv\334=\037\301\022\276\242\326\214>\304t\225\2764\005\203=\022\024I>\361\007\244\275\250\377\374>\35219=\337a5>\347\000\244\275.\234\243<!H\027\276F\342\303\275~\371^\276;\006\216>\017\375\277=0\346 >1\226\227=\000\362\021\276\365P\315>B\256\242>\272\253\334=\315\3014=\337\024\220>\326\274\004\274\\\366\336<v\370\246\275\327\"Q\276\300\226&\276\007\022$\275\217\371\244\276C8{\276\302\334\200\276<\253{\276\312\312\260:\304\207!>W\3740>l\276\245=Pr)\275\n6=\276AW\256\274Q\203G=\334\270\261\275\014\353i=.#\355\275\356\351\222\276Y\200\272\275L\244r\276d4H=\216+W\276|\266!\274\370O\205\276&N\'\276\023\212\031=\177Y\235>\030\307\247>\273\374\264>_\020j\275\036\257A>\340a\251\275P=\372\275\362\362\347\2754\327\001>F\037\251=v\3058>\033_\007\276h\234\352\276\317h\205>\341\262\r>\364\302\210>6mK\276\323\227\301=c\247\005>(g\030\276\340\023\355\275\303\003/\275\031\272\200=\323\353w\275\232\212\352<%g\370<\263\202\200\276\225\272M\275\365\271\236\275\261~\n\275\007.\232>\212+\307\275\343h\206>\247\374\334=y\253i\273\\\224\316\275\335fJ>\355\241\020\274l5N>qA/\276\242\276t=dr\314\275\036<\326\273\371\020O>]q3\276=E\372\275RT\363\275\377\353\310\276\305L\226\275\222\336\212=d\026\260\2769\354C;\274\307+\274:\227\205\276\007`\226=v\324\006=~r\254=/\236\233\275d\265<\275\355\357\210\275\213\274\266\276\036\312#\276\010\"\312\275\027\235\206\274\220\330\201\276\030\230\031\276\265`P\275\362>\216=#\361\260=#\214D\274,\021\016=9\221 >\3306\017=\365X\006>\'o\231>\342\236@\276\025\351\021\276\346O\313\275h\351\014>O\317\254\275S\334\375=\346\324==\314\261\315\275\314M}\276\246` \276o\341\311<J\236\313\276l\242D\276Q\336\353\276u\242\214>5v5\276v\317a\275?\377\014=\237c\210\275 8%>\310M\010\276$HK>\376-\223\2766\246\230>\217w\357=c\371\303=^\366\250<G:\214\276\227\342\216\276\351\013\311=[\363\027>sD\210\276\250~_\276f\241\223\276V\007\006>\363\000\227\275\316\377\032\276\362a\354\274\377\007\305<\276\314\347\276\311)\007>/\352+\276J\301\345\275\233R,=\025~\347\275\334\224\023\276\271\210\247>\302\307\255=K}$\276*:\236=\212,\221<\311\024\215\276\0250D\274\225\t.=\274Il>\214\361\027\276\026\014\023\275N1\316\275N\321A<k\261\205=\003\344\001;\237\020\023>\307\224\222\276\202\226(\276\321\177\010>\253\014\000>\322\356\001>p\357\227=`\312\205\276MC\202>\340\375\233\275K\357\227\274\002\210\030\275\214_|>\037\352\330\276\344\210T<A\312\216=\233\270;=\022\3447\275X\2125\276&\027V\276\313\022\r>^?z\276\262#8=\314\326\215\276BZ\307\275\267z\216\274\253\262b\276\032\363\231\276(\0162\276\305yI\276\226\300W=\303\337\226=\365\345\372=th\256=\021<\020\276}\"\217\273\375\320\243>\247-\251\274\272Bj\276O~/>\001}\235>F \267\276\332l\265\276\214q\\>-\333\201\276\215\367\222>w\022->\'-\327\274\271\013\002>\026\301\214=\337=\351=\257\000\037>\335\273w>B\233l>\246[\351\275.j\355\275\236\235,>\245MQ\276\315\260\027\274\216\222O=*\332\267<\260\207P<Z\312\321\275\023\363\371\275\031\230\376=A\253\024\275\226~\310;\257\323\323\275w\361\342\275s\221\311:s\377\324\275@\277\n>\355\312\200=NC\377;\365\t\200\276K\252z\276\034\374\256\276\277M\035\276\350\031w\276f\222\231>_\364\006<4\034\377=\2435\337=\305\324\211>\227\271\030\276\230\310\377\275%\005U>8\240\266=\324\276#\276\370\202[\276\021\346\006>TQ\267\274\377\234I\276S\\\233>&A\303=\216\320\n\276!\302\036\276\250\276\026>X\004*>\016\351\261\275o\336\306;\340\177\213\274Z\325\302;=\334\235=\014\277J>5\271\374\275\300)\3358\211U\207\276W\200\033=\277\362\354\275T\rJ\276\307\200\r>\316\0137=e\216\206\274m\254\202\274\267\266\267\275\372\2439>i\277\225\275]\224\235\276\303\365\377\275\326\'\222\274\230\322n\275\342O\235\276\374&N>\317\031\026=\017\022O\276n\263}\275d\321\230\273;WA\27603\250\276x\257\313\275\276\274\207\275k\257\257\275d\035\344=\247\000\027>v\213\177\275\2200`\276^3 >\353\224\">R\032 \277\366\333f>\270\310+\276+\327\211=$\204:>Q\355\237\275wJ\033\276G2\010> \007\021\275o`\374=~7\335>C\002\310\275Z\227\010>YE\214>c\346D>7\010V>\364\256\251=\r\236*\276\205\223\n>\371\206x\276\203In>\261\263F\276P\0078\276\210\036\000>\210[Y>\312\306\375=\225\"\025\276W\032\253\275\257g\321\271\275\305\275\275P~T\276\260\273\033\276\323e#\276\211\t$\276Rc\025\276\003 \202=\233\334\314\276Fx\251\274V\224\223\275\233\333\202\276\250GJ\276\241r_=\252\343\322\275\334\360\312>\274\345v\276\213z\261\273\371k\241\274W(E\276!\333\177\276\261\020\251\276{6\201\275\340v\264\275]\245^\276\367LM\276\357\375\245\276\264|<\274\r\356\037>\214\036G>\367\234O>%9\263<`_\221\276\375}3\276 \337\241\275\021\221\273=\304\356\014\276O\273\237\276\364N\025<T\250\217\272\033\306\375\275\003\324B\275\004\340\265\274\315(^=\373\242\354\275\326\213\213<\302l\304\275\351\373\033>\003\000\214\276\377<\256\276\022\271I>\nW\017>\007\314\256<\342\263T>5\347<=\200rj<\313\344\205=\377\016\352\276@\211[\276<\342\302\275\230\316U=\324_\270\275y\224\225>`\"\005\276]\312\207\276\240\222\035<\370a\223\272g:J=\335\306\371=\245\227\374\273\365\364\330\276?8\217>HD\334\275\035\027\026=T\035\301=(\2129\2769\364\354=$\336\264\275\336BT>\273\201\027\276\340\327\230=5\036\005>\363\236\351\275Rx\014\276\356\303\246<\240\343\256=W%\223>::_\275\221\234\346=\201\355\336\275\213\355?\274\201Y\251\276Fp >JeC=\352\273\211=\311T\344\275\317\342\244>\n\221\303\276m\277\220<b\214\364\275?\314%>\014\002i=\272\3229\274\366\001\r<\217D\034>\350 ^\275\261\332\241<\352\177\351\275hS\217\275L\010R>\306\300b=H\030\262>T\331M>\337\227\315\275S2\212\275\350\035J\276\3718\304>\321\342`\276\263\226*=}\266\334\275#\013R<\n\026\307\274_\224\201=\367\213\202\275\347\331F>\026nK\275OQ\215\275\330\205{>nR\200>\005\346\274\2750\272O=\033\367\263\276?\004-\276\304\232\254;!\323p\276\301c\322=\316\024X>>M\246=\r\324I>:\320\354<\254fL\276(oo=\006\364\001\276\270\211\325\275\232\373n>\020\367\306=\034V\013>D,_=P<\206=\223\314\002\276#\re\276+o\374=\005\211\020\277\337\203\313\274i\031G\276\003\324\241=Y\376\235>D\322\021\275\334\272\261\275S\rN\275\033j\256>^\r\204\274q\314\213>\007\3567<}|.>v\206\023>O)\010=h\250\226<\256\207D\274Q\035\027>\220l\205>\023\006\205=\231\004-=\004\000\210:\3171\206\275\321\344K\275!\364\256>\301\0302\276[y\245\276u\340\002>\350a\006=\224\352\254>r\272R\273\021\210\201\276G\321\255=\000\201\307\275^6z>\260N\340;\304N\204>\216\345\230>\312\3713>Y\351$\274\305\024\201>&M\037=\205UL>q\345\336\274\357\253\315=S\032\256\276\375\260(\276\234\335\272\274\361\302\344=\217p8>\202\354\217\274\r\325\310=\217\252\017\276\246\003\022\275\322\345U>\003q\305=\270\301\231<\274\020\013\276\337\371b=\016\233\225\276\220\337\370<\315\262T=\200}\r>\3463\301\275\311\273\205>\312\023U=\274\2364>SJ\217\276r\374\016\276dW\232\275\251W\200>_\006~=\r\257r>S\016\246>\300s\215>\366\275\334>\351\220^\275\006E@\276mUY\275\342\256\276>\216X\260\275S\304\223\276\243\230b=!\257\017\276o\221C\273Q#\202<P\226\316\2738x^:r\016s=6.\377\275\021\003\001\275G*0>F\357\031\276\275G\361=r\312\263\276\025\361\331=\016\361\262\275\221@L>\355\002\005=\254\\\255=\376\311S=f\356I\276\025e\213\274\324B&>\373Q\006>Z+\376\273\023\035)\275\234\235R\275\2363\206>\\\t\014\276\215\230-\276\342\006\r=\302\026_\276B\t\233\275\327\342\037\276\033\316\257\275L\026\236\276\326\207\006\276\315Zl\275>a;>4\315}=\275\320D>\306N\303\274\337\'\220\275u\246\227\276\235P\360=\263\007\\\276\246\031_>\211\225^=,!5>j\n\205>R\310\233\275\023\346\244=\214\243V>\343\363\277\274k\261\223\276\332\023*=\351\232\036>\361\217\017\276(\355]\276\265~\251\276\023\001\207\2757\254.\276\221$z>A I\276\013\2458>?a\221>\375tM=\2001f>\221X\255>M\312&\275~T\336\275\267\333\250>\322 m>M\363\221>\345\025\350=tB\210>\224dl\276\200%\234=~$\226=[\236\030>\344\270\306=j\210N\273\232/f\276Id\002>\3250\271\276&mw\276\252b\332\275_`\320>\017G\220\274\014-\207>\225yI>\366d\010>\337\004\202\276\345\203\256\274\355^\362=.\027\224\275\202\357\235>s\345\342\275\2628X\274\262{\244=\'&\322;\237F\035\276)ln>F\010\007\276\210{F>\030\316\034\276\303\235\033\272\nOA>\370\006\216\276(\025M\276pw\273\275\250.;>Ta\364=\367[%=+\304:\275\266}H\276Q\022\260\275\200\257\030\275\347\3221>\337\353\311\275\311\255(\276g\342<=\\\005\005>(*\305\275I\215r>\271\3535\275\366\t\237\274>l\221\275o\322\201>\331Lv\274\362\020\r\276\033L\317\273X\357\255>m{L>\366\355#>\223\377\034\276\367\236\030\275^%\362\276-=\203\2764yR\275A \204\2727~o>8\311\375\273\232u.\276P\006\353;8\025\r>\330\2522\274\252{G\276W\024\221>>\230\036\275\215)\n=\026OW>\005i\215\274M\314F>F\336:>h\356\035>?L\345\274P\237\327\276{\261\000\275\266\253\254\274{y\n\276=\254\010?K\177J\276\241\301\231>\300X9\276\001\367\361\275\313\224\330<9\377)>b\021\230=Mz\032\276??o=l\265\354\275;Q\222>\022@\212\276\3024Q\273jz\271\275i\311\354\275\257\262*=?\376\243>q\\\224=\304~\241=i\225!>\351\304\312<\255\014\250\275\271\302\210;\355\325Y>\233\307d\276\370<T\274\322\337R\276E\027\007>\177LK>e\025\'\276v\267\210\274+ \257\276C\337\242<\214\024\210=\360\206M=\221\024\207=\231\263\200>\342a6\276\364\237n\275\203\177\215\2757\234\022>\247\313\223\276\266\024o\276ma\020>\354\343|\275\2723Y\273\316\025\225\275k\224d=-\263L=\275~\205\273\005\030\200\276\263c\317=\232B\207\276\332\360E>e=W>\226&\212\275\"ui>\306O\270=\032\334\375=\372\3678<\252L\200>!C\020\276\0263=\276\320\242@\275\203\200\237\275k^\203\275\225d\301>\323\357_\276r\337B\275\246\221s>\"a\316=6S`\276L\\\257\276\257\0360\276\005\036>\276\351\241\241>\34715\276\236x\222<\230\265\315=\242(,\276\266\253\025>2\276K=@u\301=\022\310k\274+P\233=\267\'\363=_\014\343>\310{\231=\316\343n\276\353\275\021\274NwI>\2067\370>xK\275=L\311\234={\275\"\2754\003\027>\312\352\217\275g\242\342\274\010\356\326\275\273`\025\273\24686>\323p]\275L\260\261>\020L\220=\377\326\336=\005\2040\276\345\034k>\006*\033<\314Q\220\275E\242H>;7p\2759\327U\276\342\200\300\275\204\200\002\276\0361\305\275`~\r>\317\357\210\275Z\337\003\2763N\234>2\026\036>\252]\327\274\240ob\275I\353\032<\242\317<\274a\223E\276\307\306\315=_\214\355<\355\001F>\255J>>s;S>\210\3055>8\250\220>\244\'\265=$\201\227>\253;\017=}\212\272\275\252\003 >\227\263r\276\376\313\001\276%.\322\276[\265\222\274\007\026\232=[\356\244\274\020U\263\276s\226`>\233$\325\275PJ2>}\032N=\360_#=\276\200\313>m+\275=\210f\255\276\026\250\031>\240\270\037\275e\021\225\275\026\235\245\275Ag\033=\216\346\220\2767\201\274\276J\342\242>3,&>\025,\265\275\253\221.>\213\000P>\000\312\370\275\340\256\033\276\273\301\314<\343io<\323\362(\276\301\322\220=\276\341v=\332d\256=\222\3703>\007*\006>M9\256\274\"\316\317\275\270\250!>@\277\344\274\260\351K\274\316$h>\356\353e>5?\307=42\021</\273\034>%\371\224\276\370\243\276=\253\246\014>\t\352\337=2\\\314=\375\010\360</\255\032\276\217\320!\276\250\rh\276a\366\230\275*@|\275\321R\254\275{\225\t>\222\245\214>\000m\000\276\202\223z\275\213\366\315>I.\256>\347\366\016\276\340\230\312\272k[G\275F\373\215=V\231\027=\311\300M=\315\351\201\275&\177\026>\331\315\237>A[J>/LQ>\024\323\224\276`\273\242\275\236=M\273 \211\026\276$\003\037\276\246\033\002>\027\016\025\275\253\030\255>3\366\225>W\255\234\276\2322\224>u\n+\276tO\223>\311\211\261\276y\037\242>\006\275\251=#\021P\275\316M\n\276X\342\310\275}|Z\275\312\345\203\275Zu\031\276G\352,=\022\033\214=|\251\260>\030j#=\3056\330\275\367\331@\276{\320\261\275\005D\346=\2519\231=\035\362\210>\361\022\233=\233\236\235<\374\253\263=`A\005>j\240B>\271\251{\275\'r\243<;\335\357=\013x\221>\221\244\266>\211U/\276\202\255\010\276\016\277\013>\304=g=\031\375\262=\0109s\276\366\375&=\325\342\034\276\016\312y=\n\356\356=\336N\225\275jJ\210\275\217/\226>\365\202\226\272\322\236<\2767}\236=\006(\314=\005%B\274\362&)>\n\201T>\004*g>[\347\'>\277\022\250\275S\256\220=}\2752>)\326\030\275\327\200\370\273\341\235P=`+\227\276\246\177\227=m\271\024\276\277L\222=\300\254z<\014\332\203>\376\364J\276\325wf=\364\337\247\276\265Fz\275\234\371\341\2764\325\247>\275\020\r>\225&P>\232\307i>\312\354M:K\025\235>C\006\220\276&\026==\306 L\274\t\227\262\276X\353\270\276!\324d=\347I\254\275G\303[>F1\352\275\214eT=e\255|\276\271=\277\274\250\314)\275\354u\304<,\004\321\275j\246\005\275yM\377;llZ>\2336\276\275o\020\202=\001r\250=`\rb\276\177\r#\276\302\247\326\275TG0>E\301\022\276\037\210\026=\235P\006\275SB(\276\312\243\330=\241\351\213<\371\3578>\020\325\340\274\023\020\363\275\r\306\252=\027\271\351\274\2751\322\275v\354&\274T\200\004\2767\266f\276\323-r>\334\375\301=4\254\002=\036\027\003\277\035\200\360\275\232\211\246\275\2661\262=sp\\\275QX\240>\227\277\205\276\332Cf\276\221\325\322\276\235t\370>\304.\362=rm\214\276\302+D<\273\265\367<\323*h>\302: =N\272\312\275@\274\313=\033hZ\276\273\333C\275\304\206%>\177=\240\275\231UH\276\330j\361\2756\361\023>\274\307\273\275G\035\356\275ml\364=K\275!><B+<\255\346:>\364\226(\276\177\230\262\276\n\372\356\275\277\026\203\276\372S&>\316.M\276.R);&\024\306>\335Y\224=\356~\017>m\267 \276R\351]>\310\300\265=U\274d\276\006\223\241>\244c\'=u\340]>\225\271C\274\374\006\035\276\315\264\202>,\003\023=\346M\334\275r\350S=\213u\035\275$\'\237>v\201\006>\310m\307\276\350p\257\275X\261\346:\024\235\007>\274D\372\275\305\351\032\276U\237\331\275W4Z\276Q\313\227=G\231\334;\340\214\024\276\345,\226>\354\344\007\276\333\320\240\275\365\022\247<oO\303>\361r$>\220\362.\276\177\334\037\275|\006\327\2758\210\t\275f\014\225\276z\214\220>\222\377\236\275\244C\253\275E\371\273=\247X\343\275]\273\031\276\304\r\034>T\376\257\275Y3\207=\236R\221\274U\211\302=o\304\216\276\021+\004>\201\242^\274\360<o\275\240s\321=fE\003\2779\355\312\275\224\372\242\274\251\302Z\275\227\245\332<\311\235\214=Ei1>\236\022P>p\257,\276\261\327,\275\300\376\240\276R\221\267<\\\300\226>+\275\206>\303\031\361=X\336\215\276|s\372=4d\272\2751*L>\216\236i>\367\302?>\247f,=\247\177\005\274Y\277C>O\251\323=\254\030h=Q\232\222>\371xI>\362\2139>VD\251=\004>0>FVI>\370a\201>\316$/\276\022<\002=PfI\276\276<\312\275\222\356\316\275\335 K\275\343\021\016>\010\340\237\275\351\302\367\275r6\374\275Q\"\031\276\002C\337>\347 \332<.\212\024=E\246C>9J\275\275^a\343<^\372\016\276\251\215\000=\213d\321>\334\351\363\274\355\236g\276\363\301\021>\357\265\323=\210\017\213\276\353\370\006\276){\203=\0016\371\275K\267r\275\210W\242=\324$\275\274C\376\317\275;CU=d\362)<\223\241\276\276\235\374X>]\177\324<\262N\335\274\004\005\211=\311\336\320\276D\224Y>\357\005\346=\313u\222=\023\177\332>\230\010\210=\376[\035\276\210Y/\276R\373I\276\017\2721>\230y\341\276\341\264\367\2755\203\333<\275%s\275\266-\224\275\211\\\232=-\2124>\217W\374>\223\222\034>\270\272\372=\036\337\341=\233\277\271<;=\215\274\030\324\013\272\243R#\276\215\204\365=\236\340I>\327\227\215<\024\272\235=B\323\027\276RRX=\370\237{\275$\261\020=6\363\245=\216\235~\275t\257\347>\0314\035=>{\215<\312\355\216>RU5\276p\324\212\275 `\002\276\314\2167>\026\030\004>\275\222.\275\344\020\272=\327TI>\266\254\365=onn>\023\247^=\242\230\030>\275\276\237>\350C\033\275a_\361=A\032 >\263?c=+g\n\276\271\307_\2759\307p\276\210\032w>\017\202[\274\211b=>\265$b>\001\252\037<\\M\026\276O\304\243>b\340@>1_b>MY+\276\006\354I\276\346\362\000>R3h\276{\375\035\274\371(\022\276\021\262p\274uc\022\272\264\237\037\276\223\006e=H\357\256\275V\364\310=\r\266N>\034\216\353\275\005\376e>Q\331\005>%\030\226\276j\354\246=\323\210\311\273DX\331>\2755\244\276\345%9\276\"YO=6a\252=HG\277=W\356\204=\326}\016>\031\016P>\273+q=wc\304\274N\346V\276\010.\343\275\332J\316=\216\272\374=y\315~\276\317M\243\276$\013\226=\210\251\240>\2653\216>Q\342K=7\322P\276N\234\027\276\t)5\276\361\007Y\276x\232R\276*\371P\276\306\242\377\275f\035K\275}\205\r=\274\366@\276\37273>l?`>n\312R>\301\216J\274m\3112=\302\222\361\274\200Nm>\"\2051<\366+\362=`\271\325=\275\322\004\274i4\027\2768w\224>\037r\227>\n9\321\276\353\374W\276\220\237B>\3127c= t3>\365b\254>\3420\262\276p\206\231=*\204\351\274SR\260<x\r\210\276\307\346\375=\264\001\322\272\201jZ\275\377X\274=tj~=\0353\364>\320\357\233\276F\334\375=E\304.>\254\023\300=\331\325\213=\244i+\276\032\205\363\275\355\237t\276\207W\254\276\375\315\001\275\035\226i>\327p\221<\267\006\275\275\032J0\276\326%_\276\221%\244\275\274) \274\036\324\333\275\351\315\236<\241\326\245\275U\010\n\273rr\211=9\n\270=\242\332\310=\257E\345\274D@\014>"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 30
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/add"
      op: "Add"
      input: "oldpi/model/pi_fc0/MatMul"
      input: "oldpi/model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh"
      op: "Tanh"
      input: "oldpi/model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\262Y[\276[\274\007\276\227\3442>\212n_\275\210\377\010;\014m\232\274\223\336Z>f\361\031>\333e\000>1{\253>\305\034D\276\221\304:>\261\350\236\276\372\257\245=?\000\372\275\014p\376=\221\007\232\276\320L\000\276\357,\014\2742\334Q\276|\344\353\276X\000\253=\001\212\217\276F\271\334=n9\250=\343\276\034=\335%,=5\351\214\275zl\344\274\327K\231\275W\354\210>\227\023\030=J\003\004>\037\267\366\275<f#\275\016&\\>\263\325K\275\245yr>\272\320\267\273\340\357\230\276\306\341\215=*{!\276\342\'R>r\027\330=\023\004\236\276\274\326\350\274\251\202J\276\254\335\205\276[\251\211\276\025\021\265\275\264g\350;=\251\n=\372\307\022>p\025\246>\327K\201>P\231\017\276\376\013\360=\272\207\232;j\311\005\273f]\340\275\252\323H\274\355\024\216\276\371\177#\275\237XU\276/7}>^ZU\275E\306\033\276yJ\237\276\362\230A>x\225Y>\215\246b\274\220w#\276\321\257]\274\350\336\307<\266\306\031>[\034\223\274@U)\276\023R7\275*jS\275\375\206\024>\347\000C\275W\026\253\276\273\356\017<\216\203\315\273\214\340O>\241\311\245\274\225~\027=\345C6\276 \035\242>\377\304\220\276\001a\024>\200k\204\276\232\241J=]19\2758\202i<(\311\224>\3449\036\275\377\252\013\2761\365>>@\026\364\274\234\376\353=\335v\340\275\177\226\n>\034H\265=+\370\321=\037\353\222>\207\253\214\273N\307\252>\3200\252\276\372\377\237\276\343{\212>\220D\257\2765u\264\27569k>&\335\270\275K[\025\275\001\237\255\273\242\014\212\276u?\033>_\241i\274\352?\r>a\277\243>\342\303\304\274\t\326\\>\223Yg\273\337\206\'\276\351m\016\275\003\255\371=\000\262\'>\207B\246\276\226\367\213\275Zq\272>\220B\305>\376\376\243=4\230\024\275\213^\\>\3068\200>\211f(>\254\366\030\276\205\224\366>\277\016Z=\372\230\251=\263\330}\274\007\257)<\217\007\333=\277\201\242\275\255\302_\276\347\3464\276j\244\024=8\307\255\275:\341\261\273\261\004G\276\204H\262=;%\014\276\344\364b\276C4\246=x\263g\275f\317(=\205=\250>e\023\230\275\341\316\240\275\375\021%\275\0042C\276\345\220i\275\023\010I=\226\243\017>\370\225\010>\206\342\025\276>\341\307=\360\324\303=A\252\250\274\273|\236\275qQ\006\276\001#\221\274\025og\275h\350Y>\343a/>\003:T>Q\313\344=\200\210\222\275\031\350t\276\255\236p\276\376\213d\276\264\242\200>\'\3727\276B\272\335\275\271S\325>\354B\303=7{w>p\351\025\276\203o\221=\355\205\200=$\300p\276\331\354\252>4x\360\274\341\317\213\274SQ\252\275\001y\231\275\337P\215\276\034\360\373=0\311T\276\375%h=\274\226\025>\202\223->\364\233\030>\025\235\031>#+0>\272\354\342\275\233\002\272\273\235\236\327\2751\332\324=\016\034+>\203L>\275nt\017>\271T\250=7#\r\276=\'c>\257\325r\276\326\266\344=M\256\253=\217\262U\276iF\375\275\257\304\374>\325\343\226=\023^\314>~\204\332>\234\213,\276\006\r\226=\244\277b\275\356\231i<\214\000\266<LQ\004\276\201>(=\326D\312=)N\032>\3163\322=\265\034\243>O\263\301=\257\303\014\273^\275\233<\305\250.\276\000o\001\276\261\371\217;T&\003\275\013\273-\273\013*\220\276\321\304\340<r\340\232>c\242\305<<\375\010>\266\206o\275y\254\203=\232\264\304\276\035\3579\276j}?>l\'\211\275\377\036\220=\004\025\216=\337\332H<\005\275$\276\224\2714\275\2066K>\311\027\330=B\024\023>\374\325G\276\227\024{\275\301t\307=\213\026i\276%\001\301\273\230\022\374\275\340\320\334\273)\206\270>\320\231\227\276S\t\216>\245\005o>\324\336\367\275l{\023>\2308\243;\300\204L>\226\206-\276\235@\216\276\250e\213=\337\277\275=\341\033?>^\341y\276\364[G\276\005\037:>\340J\321=\324:\224\2768\223x\273\023\363\036\276J\324\236=*\314\t\276\tS,\276\013P\007=\031U\345=\303\367\313<\230\304\216<Y\032\222\276\317\3028<\274\302K\276\254W\240=\023A\301\274\336\354\344\274\345\253|>69\354<\'X8=0\203\204\275\256\243\037\276\303\0079>9\033%\275;\331 >\361d\237>\353\266.\276!\031\243>W\021\206\275\037\025\005\276\020\271\315\276s\306\264>0\217\201\276);k\275\213;\223\275b\204/\276;\226\261\275\361G\304<Yz\200=1f\233\276h\020\356>\330\272=\276\024>\024\276Xe\356\275\341\332\025>\340n>\2767\317\233\276\"\020\255=\274\343m<\230\3429>\204\225D\273\005o\334=\316PS<\361\266#=\231\312p\276J\345v\276\347\342\364=\017\211\353\275\027s\010>?\321\n\276\306\272\276\275\346\214E\276+\247\222>\013*:\276\315df>:Eh\274\362\365\347\275\\\333\232\276\357I\201=O\027\255\275\213a\343\275\220\267\214=*1\356\275\214v\361<aJ\211>f&W>\227\213\312\275O\354\013=*\203O>P\201\010>4\210\033\276\304\377\327=\251\t\313=L\320\256>\253,)>L\022s\275\246\344\266\275\031\231\265\275M\336\253=\230\004C>X\010}>\213\265\272\276\034\310\243\2766Y\004>Sw\255\275uA,\276}\360d\276\341wN>\241\275\373=\360\223\251<\266:\273\276\\\337\214\276V\001\317\275)\027\324\274O\n\272\274\316\273\033\2765X\376=0D\204\275z(q>\214D\264;\307p\200>\321\262\217\276+\177\010>T\224\373=\335\225\225=u\360\312\276\375\360\025\274\n\001L=Ad\005\274\236m\003>(\371Z\276r\032\367=\020\333r\275`\275\023\276\r\257G>s\216\026\276\307U\347\274}\310\212\276\364\302\032>\317\034\224>\316\014\003\2767\0132\276\265\375\344=D\347\250\275\3103\037=\360jW>\321_\202\276\022\346\225\276)\216\014\276\231@9\276RJ9=\203\255\266\276\n\243i>\374|\214>3\322\357=\240\2036>(z\r\276u\203\026\276\035\366\325\275\322\304\310<\022q?\275[\241V\275\360f\313<,y`\274\370\303j\2764\203\036\275\300\026J\276W\025p\276\316J1=^\373\250\276\206\314\325=\030!\301=\3740\203=\315\332\205=t\300.\276\217\341|\276\202\0259>\031\314\227\273\007\330\204>j\006\036\2763}A>iv*>H\300\010\276\000\000\253=M\275U\276\254\375\214\276g \013\276\311]\325\274\275\327\017\276\"V7\275\342 \314=\005\365\341\275\261\317\217\273\"\345)\276\316r\346\276#%:>\222\375\021:p\223\237\276!\233\321=k\350!>\212\365!>(\202N>6\237k\275\345l\205\276\252n\356\275D\303\247;\205\353z\273\017\375\322=\001`\n=^C\316\276\273c-\275\360W\004>-\233F=\247\251\255\275\315\241:\276\224\243:<\"\tG>\024\250\373=T\377\376=\312\231\226\275\337m\n=SU\277>\010U.\275\236\316\236;\205\244>\276\247\300\342>\177!\235\276\374q\366\275D\213q\2769\352\243\275\216\342:>\213\224\002\275\315\224\023>W?U>\037\225\021\274\263\225\031=\251\002\351\276\351\213\202\276\273\201\205\275ZC\222<\365!\004\276n^\323\275\210\316\035\276\001\323\202>\317\267\035\276\217\340\336>\237\001\207>\374zg\275w\206c\276\001\344\267\275\331q5={\371R\274\230\215%\274i\322D=\252\345\304\274\3403d\276\010~\300>1\230\363<\2227D\276\025TX\275S\236\251<Yu\303=\377\327\231>\340\350d\275\331\"\344\273\237\246X\276\007\232\351>\354\356K=L;\200>\330\200 >\273I\206=\260&\200\276\363\254@>\264N\261\276\305\036\000\274\242\022\340=\356\272\224\274\301\334\201\276l\221\362\274\375\232\202\274r\331\313\275\035\002F\276\356&;>\333\224\205\275\225<9\276*(8>t+U=\373\242 \276\201$\261=7\216+<\"\202\036>\033&\r>\020Z\311=\366\317\n\276\342\026\336;&\261\033=>\205]=\221\323\371\275\017\206\213=\312\312\\\276\342\207}\276\344\035\350=\277\302-\275Y\216Z\276H\215\212\275\3672\003\275\355\217\366=\326\\_\275x\306Z>\241\253\021>\244\035\275\275\n\014\303\273&?\244>&\253\277>*\371\265\275}\253\230\275\244\034\301\276}\207\301>\252&w=:\006\007\276\006\234\337\274\334\240\267\274DH\262=Fv?<\212\\\314=t\315\022\274\370\212\021>\347\006\024\274\0161\342=e\207N>[\274\370<zp^=T~\317\275\324\245\207>\310\331\350\275Z\237<=\001\035?\276<@\207>)\231A=V\243\317\275IkR>\265\334~\276L(A>o\230\005\276\235\241\256\273)(J\276(\254?\274g\217\321>p\340\216>\207\006\201>\'\205\375<T\014\017\276\210U\022>\355\255\374<\361\303\002>\204=+\275\027,\237\276n\276\342\275\354\262\260\2700\350\016\276vYg>\372T\226\276\013\2039>H@\240\274)\345\300\274PYP>\001s\313=\270E\034\276q\255\033>\325\375\231\276?\242\351<\225,\362\275\013AI>NP\303=\035\370g\275?\217N\276s\342\317\274\'`>=\235-^<\343u\341>3\333a>\271\304\351\274t\216\020\276\3016^\274:L\213\276\311?2\276\371\312\201=\270\353E<\006Ya>{\314\231\275zpp>\243\001~;=\025\226;\340\271\255<\303&\220>>h\303\274#N\223\275<\217,=\207\275B\274\r\312\037\276<M?\276[g\002>?\335\020\274czW>\263\320V\276\024Rz\275\003\345\036>Y\350\027>p0\200\275\354yh<\t\014\253>\365\037c\276a!a>\216E\201\276\231gZ=\345#T\276\372\263\225>\344$\001>\342PJ\276\316]L\276\343\030\240>\027\013\333=\342\233\200>\263\307K\276\314E\253\276\334\215\355\274o\367\232>\272\244\377=&+>\275\023\016\017\276\257\335\265=\030\352\022\276\303\334\t\275\367\342\246>\261\'\231>\377_2>\234P\000\276\267\355\003\276\311\017\204\275\260\325N\275j\254\021>G\031@\276\242bF\275P\034\276>7\314t>sh\247>X\261\214>\032\343\201>\022C\024\276T\332y=\263\334j\276\366\030\033\276\n\363%\276(\326\000\276\230u\266\275\354\344T=\233\2378=\316\373\026\276F6\221=\005\020\223>\244\323\254>\221\356\224=G{\335<\013\337\260\275\367_D=K\356S\275\023\033\206\275\021\366`>\357\350\007\276\315BM>\314\014\031>\360\277\306<\377\215W\276\253c\355\275\220\025G\276\244K\367<\361v+>\250\365B>8\000]>\204/\233>\227\354,=-\030\034>\035\340\273\273\354M\373=\n\377\261\276S\373i>\277\030\032>\343\271\217\275\026\017G\276\233\335s\276\321o\203=\357[\253\275\311\346\211\275\n\002+\275#*\240\275@IS>\237q\206\274\226D\016>e\313\316=\242w\227\276\3608\205<.\223\246=\003F?>\005x\000>c\302\203>\354\262\215\275]\007\263\276\026#\010=8\343\014\275Gd\216\276\025\2153:\201D\207\276\'\354\205\274\r\003_>\241\204|>\262\265#\276Y\371!\276\200\332\377\275\343R\365\275F\325\253\276U\020\254\275\366\371\037\276\376\264H\275\211\357\032\274+\330\317=\027\255!>f\025\236\276\314\250\270=\020J\211\275\366\325\274\275\317\316\277>\2163\277>\322&\332\276\200O\373\275sa\376=\006w\203\276\273\2166>\201\0044=rm\341\274\324\211\257<\271K)>\303*\244>\330?\301=\237\362@;\206]8\275D\374\016\276\2514b\276T\230Q={\271_>!\215\016\275W\001\002\273W\322Q\276\270\351\226\275\200\250\331=\316\346\023\276\322\323\351\275N\257;=\017\330\212>\003\237\007\276\t&\214\274X8\274>\327\302\347=\004:\204;\037\226\306\275\177!\202>\356l\356=\214J\211\275\343\333W>\234\027\022> \320p\276s?%\274\315\033\022=\223{\235:\260\217\035> :\307\275\\\263W\274lk3>\374\025#\276M+\260\274\250Hy\276\324_h\275\036\264\374\275\365P\000\276\323\010\204\276\375\221\004>\023.4=R\255\017>\340\022z>{f\016>r\005\036>\330h\317\275Iq\212=Rh\007\275\027\255U\276 \262X\273[\260\202\276X\257\307>\257w\355=d\315E\276 \274\010\276\000\007\270\275P\027\002<\037_\367=F\217[\274\226\274=\276k\333w\276&\010\033?P|\035\276$][\275\234\026\313\276\2137]\276X\031.\274\363\212l=3\272\010>\362s\224=\367[l>\024t\266\274I\371\017\275Aj\t=tKw=\324h\003\276\332&\221\276\230\315 \276d-v>\342\331\253<3\204\250=\034v.>\300&\320=\n\255\242=m1J=\214\005\305=M\017\016>Q\027\036=\252\354\267\276\336\350\272\275\276\226\201\276\2667I>\215\tD>\365+\220>\336\223}=\254\216\225\275\207\020\'\276~^\336>\377\330\n>\275Z\230\274!\000?\276{\007%>PD\334<3\023X=\326\320p=\202\301\243\276\367\272<<\240\226\345\276\316p\212<\351\001\251<A\017-\276\t\322@=lA\034\276P\346Z\275u\005\327<\372\331\026=\342\202|\276Wr\242=+\304\230>\311\271\026\276],\n>\335\270\223\275\377\351\023\276]\251=\2745\307q\276\203A\340=\002e`\276%\271\037\275\367fU\276\332i\000>-\022\031>\357`\"\276+\014c\276,6=>\273\215\303\276j\024\010\276~\023\243\275c\344H=\253\226\264\274\250\221y>\337\201\244\275N\326\250=\313\344I>X\240\216\275o\364\330\275\204+\220\276\222\3122>zzU>y\251\213=N6\352\274(wb>o\316\226\276\263\r]\275\326DO\276n\321\312<\313b\306\275%A\"\2740$\017>\366=c>\332\326\245\275\271\237\210=R\303\014\276\303\257\334\275:\221\r=\254\266B>\373\306\324\276yN\271\274\366#\372=@xI\275\365!t\276\250\351\263=\200#S=\226\273G\276~q\000\275\256\036\036\276\031\311z\274+5R=\357ds\276\360\r\242>\324\013\206>\353e\205\276W\037\'>\227\352\260\276\022\026\217>\017\213;\276\207s\264=\260\336\200\276;\367#=A`\222=\327\241Q>\216\203Q\276\203[\266>\027K\242=\r\355\321\274\223>\216\275,\177\"\276\352\307q\275\177\235\236\276\323%\024\276\216\266\201\275j\'(=\356Ne>^|l>/\361\024\276\037\323<=\230\021\366\275\222\315\026\276\277\204G\276w\373\331=\226=\034\273\210-\235=1%e>\\\216\037\276\014\004x>\202\325\026>\315\340\364\276\3102\031=t\264\344\275\246T\263=\21537>\300\202\365\275G\233\242>>\372_\274\210b\250\274-\370\207\276\'\227\235>\024uS=)D\002=\222\217%>\350;\206\275\231\303\224>\240H_\276\220\337\332>I^\270>\377\232\262\275%\204e>\304\266\035<Y*2\276\313\3574=\202^f\275\274\311)>\025\360\210>\0251\205\275{\004\004=p\231\352=\226^h=\303l\032\276^\300m>\373\251\246=\246\3561>}\372\004>\320\254\301\273\300c\000\276\247\030\264=\003A\">+\022Y\274+\013\007\276\324\177\373\275\2440\306>\024\025$\276\342\016j<Au7=\354\263J\275\275\220\017>\235c\250=\353\342l=n\244\364\275\253$\353\274.\367\020\276\37231>\035\365\010=\205\231\004> \246!\276\302>t\276\254\276\220\2762\244\344\275\240]\324=R\010<>y\360k>\377\267\005>\\0Y\276ja\307=c\223\350\275\365\273\351=\320\'\016\275#BQ\275\310`\022\276]9;\276\232\322\035\275\rb\206=\206\003\344\275ai%>E\006\211>\244\253\027\275\263\033\352;\225h\254\275\034\277\364\273\371\323\242>\276\352\034>\020\013d\276<A\222>\317\306n>\252\274\324=L4F=\350\301\026<\032\373\353\275\004\270\r>\206\270\220<EFn>4\216\r>_\340\371= <\302\275U\033\347>\247\322\354=\366\006\030\276\245\232\271>p\330\007>\205/4>V\240\355=\343\352\311=s,X=\377\253T>\\\202\311\275\200p\353\276aq\254=\260\3602\276\245\237\362=\331\370t>U\356\225>\257\253\273\275\t\362\">~R\215=\237\002\025\276\3734\227\276\323H\331\275\313\3713\274\353<\330<5\367e\276\353>\026\276~}\r<5\265?\2760\000\373<\222\354T\276GZ,\276\030\241\232=\253\274\316\275&B\005>3\274\307\276Y\006\302\276\337T\333\275\033fw=\250\246\331=\312s\314<\342\232\032=\333\353\220>\020\210/>\020\331\251\274\357\r\000<\271\033\347\275\332\254\313=VJ\362=J>\206\276Z\312U\275\270&P>\265\267j=\277st>+\226T>]V*\276U\351\024\276\377\212)\275=~\r>C;(\275\327\331\336\275\251d\377;\211\232\265>\303\373U\276\361t\367=\260\307[=\276\033h>i\343Y\275Oo\027>\001\343\264>\235:\300=\017\026\360>\021\322g\276\301\320/>\304\204\264=<\205(\276b\332\227=\221\216$>Dw\362=\274\356\201\276\265\017\276\275\036\315\002\276\034w\026\275\226\373\031\275\330\244\267=d\261:>N\006\">\210\262l\275\351im\276\376\250P=\226[\355=0\326\304=\333Dv\275T2B\274#\326\036\275\303R\017=\266n\315=\363\356g>\347\344\353\275\207{7\276m\305\213\276GW\004\276\236r\233>c\033\326=\014\341\206=\'W\r\276[\215T\276\321S\220\275\014\004\224\276\343r\003>\033f\253>\226\355\200<\240\005?>N\3757>\ti\037>}m\002\276\307rd>\356j\200\276\320O\303\275\026\354\330\276Y\020\327\275H#\346=\030\262L>\360\342U\276B\025\262<\237\371\354\276\027P\266\274\216K\320\275\322,V=s\036\220\276\266\262i\275\017\267\006\276\355\373\341\275\374\265\214>\0359R>\330\353\204<}\376\303<\017\\\021>=1A=\016\306\005\276B:S\276\326%\244\276\2144\214\276\244\301g\2752\271\243=\002\317\351=\035\017\372\275\365\263\332\275\323$a\275U&\220\276tI\007?1\246\001>\033\240^\276D\"l>\340\376o\275\250\254\260=\230\n\005\274vr\241\276_\022\204<\260\343u\275\217\305j=\324\177W\276\004lj=\255M\010>\205\034^=f\213\271>\032\262\030\275\232rE>_\357\021\275A\265\214=\343\233\261>O\362\007\276\201iw;`@\260\274\215\354\367=?\031\004\275\347\021Y\276\212\372\376=L\3765=\361\032\267:\375Dm>O\025\314>\212\030\030>\224j\207\276\207\257q>\231\372B\275Z\2543;\016:\311\275\201\004\212=l\216\231\276\\A.\276\202.\315\275\003\217F\276\035\235\241>b\377\372\274\'n\016\276dR\302<\231\202\363\275\003\370I=\023\323d=\247\".<\210+\266\272\273v\022\276x\336\210\275\272\336\253>\323\007T\276\230\272\201\2756\363\202;8f\004\275|\036a\276\301<+>\231\311\007\275$\304\335=.\221\267<\207N\221\275\2273:\27630\203=\343\332\033<\'\215\227\276\336\370\016\276h\216o\276\371N5>\257RR\276s\ta=r\217\250>I\210=\273\344?p=+i\017\275*\023c>\374b,>\302*\032\274\357d\032\276*\356\033\276\246JK\276\267\010\177=\006\264\247\274\350t<>Y\000\021>\177{\'=\324go<\372\311u\275x\270\033\276\316\3671\276\222p\377\275\3647l>\0169\273\276^\035\375\2748\254\252=?\307\335\276J3\226\276\2513\010>\210\004F>\314\2515\276\312\264\250;D\221i\276#T>\275\020.\216=\017\266\200>\357\331Z\276s\214\245<twv\276\023p\360=?\213z>\300\263D\275\273\'\031\276\240\203\010>\275\006\002\275[r:>~P\226>\027\004D\276\2433z\276\216E\r>pj\254\275\244\t\270\276\267\204\220\275\332)\204\275\027\300_>\024\274\355=\246\222\001<}N+\275\224\270\242\276-3\"\2759\003<;\013\261\020\275LE\r=\204\325\201\276\232\3420<\232\367\201;\361m\331\276\373\372\261=\031\004\205>\027\t\371\275]A\257=\220Z\007\276\222\242P\276\274\216g<\221\270q\275l\224\004>\304\211\223<\200,\205\275\267\341\252\275)s\223\275\030\220u>to\033\276\272\277\200\275\326\014 \276o)\301=\3554\201\275\245\356\365\275\270b\251\276j\223\006\276P\215\002\2747\313\t>\324Kr\275\275\201\236>\372\275\014>Aj1\275\226\230\332>#\202N\275\362&\227\276\2158\201=!\320\227>%\366\323>Q\357\000\277\334\373\177=\374\022\002\275\020K$>\027\236\006\276\364\224W=e~\252=3\323\340=[\260\227\275\375\237\321\2751\254V\275\346\250\243=G\013\256\275A\022\022>\371\232\211\276\225\006(\276W\343\200>\314|\277\275]d\207\2756\003-<X}^>}E\340\274T,\241\275\242\002\207\275E\3240>i\033|\276q\240(>\254\332\206\276\243\262\3028\333\312\201\276\217T\\\276Jkf\273-\207\241\276{\347`=\240\315\354=\370AG\275\223\304\020>qa\013=\355Q\243=\352\203\275\276\316\022a>\2259\221\274-G}\275yi\315\275\272\262\256\275\3440\"\276j\310(>\272H\326\276!\360\251=\261\321(>\322\342\377<\032\304\325\276\262\201\216=9+\221>%\242\206\276B\014\207>\031\256\276=\001\273\031=\3138\213\276d\352\245=\025#\025=J\n\016\275\231Z\020\276V\021\356=E\317\324\275\332\347\243\275\266\016/\276\273\367&>\326\r\034\276t\377\231\275OC\013>\340\231\004=O\235_\274\205\017D>\227\225\247>\375\2417\276\362\344\203>\212\034Z=\353\226<>\376\211#\276K\356\017\276\352\031p\276j\221\227=\034~d>E/\200<\3237\252\275\260/\221>BZ\265\276q\036\252\274\217S\t\275\366\311\325\275\353\177\226>\274\242}>\206\263\037\276\306d7>8\377\237>\340b\266\275o\360h\274\264\037\016=\323\242\324=f\206\237=u\377\220> \221\273\273\263\213\223\274\n\276\207>(\377]>\004%\335\275\005n\243>-l\013\276\031\272\210>\337\013;>^\330j<\t\314\371\275\332\251\222\276\221U\312;\265\026P>\343\016\013>\346\205\247\276\341\262\336\275:R\213\272\326\344\266=\017\233\010\276\230\262\241\275.Y\356\275!\246\356=\224\201`\275~\223%\276\251U\236<\276\252\322\275\262-\014\275\276\215S\276\027\rL>\325\335\321>\01718\2762\353\224\275\221\271T=\2433E>`\020)\275\340\333\226>\023V\003=\325?\002>\021\322<\276Jk\346=n\230\256\275\333~$\276a\261;\276\362\235\340\275\3752I\276\241L\002=R\233\241\276\225\230\263=\016s\231>\t\225\021\276\247y>\2754\245\217\274\253\344\227=\323\212\240=0V)\276fi\376\2750t\367\275\263b\033>\342\302\305\276\254\311\216;7\033\n>\373;\001>@-l\276\037\321\202\275U-\210\276\302\014(>\237d(=\377t\n>\000FW<\326\002\300\275\215\023\231;Z\326c\276\017\007l>\336H(\275\262_[>\022\243\236\275\360\222\020<\340)\006\276\001\365H>\210mH>\253\r\002\276\027\246\306>\343\2226\276O\352\370=&\022\033\275\272M\252>|@\341\275\365\t\013\276\034y\t\276\016\204\321=\251\021|<_\020\225=M\333\217>\233\255z=.\231c>Mj\000>f\232R\276n\207O>.\364U>e]\250>\001\301\313<\306\222P\275h\315d\275{\t\325\276t\323\372<\276p\214>\305\204}\276\246\262\356=\305\260Y>\337n\247\276\214L\363<\261yy>\245\341\374>\240\022\023\275\367\307\246=8\266\252\276\205\367#>\333\206\304=\212F\333=\347\274\264=\033\271\345<\005N\322\2750\267\344\274_\004\262=\332\351\211\275Y\304X<\303\0008\276\371\035D\275V\252\206=M\001\315>.\321Z\274\272\363A=\032\335\022\277\270\340g>p5>>\200Ag>\356\332Y\276\227yk=e<\030=\'\\\226\275\\e6=\332\006\244\275\323\322`\275\022\273\034\275\361!\206=?ZJ\276/\221\242=6.C>\345\023b\276u\003V\275\315p\313>\315`\205<g\206\212=\0355V\276\326\345[\276\027\305Z=9\002~=yW+;\370\013c=\345B\207\274K{\023\276\232`\032\275\267\244\216:`\327\274=\375\252\034<\2454\024>d?\326\274k\'\251\275\252\351\257\276n\2120\276H\322\205>F\003\366\275~\201\370<\331\260\020=\303\035\227\275\245`h>t\226c=\366\375:\275\003\205\003=\255\345m=\235\305\n>\357\212\267\276\240\306#<\014\024\257\276VU2=\204\344\214=\265\335$<\327\361\217\276\032\020\331=\'\002c=\3055h>\214<\215=\340\242\004>\243F\305\275\016x\233\275+\301s>m\240\"=\037(\023=\205X?\2762\\\217=\235\302\315\276\037\243C>\r\316\204\275\235\213\304\275\311[V=\227\233\346=\313d8\275\203\370\370\275|\004\255\276{,\201=\200\367\035=;\367\271>\007\237\005\276\300v\003\276\336\262\016>\225\216\236\276\355V\017\2769Ww<wV\350\274\027\345\216=\333h\262>\261\031\332=;\245W\276?8\010>\237u\276\276\024^D\276\325A;\275\306i^\275X\215)\276\267d\333\275\334\272K>5\210&>.\036\022=\310Xk\276\3132S>\240-\355\275\240\366$\273d\355\321\276(i\303\275\037WD\276\205z\350\275\216\332\261\2734\032\276\2751\366\227=\247<\274>9\305\216>\3119\244<\247%\032\276\373K\233=\373\274\323\275!\3676>\232\2509=gvT>\340?&>\346-I>a!\273\275\334\014\252\274\252R\021<-\272\270\276\0260\272\275\014\216?>H^\276>\237\303\270\273\177\224\357=\016:\230\276h\246\031\275\313\216\026>\221B\205>`\004\017\276^^\264>\321\255%>\376\200\216=\277\302l=8X3\274+\3537>9\\\n=\257\271s=\2229^>p\253\304=F\261\331\2744\242\276=Q\214\017=\247\264\232\276\355t\022>\236wG\276)\307\024>\343\307\212>\271\0343=h\312->\246. >\3408\217;|@/<\240\004\214=\332\277?\276\301\365\014>I\234\242\276\037\377Z=UK\010\276\213\026K\276W?~=P\005\357=\211\266\345=\366wI\276c\004F<\313F\005\276q\331C>\227^\226\276/\360Q\276\206\021\204\275I5\336\274\204q\257\275\036r\246=:\235\016>X\301\220<\251!(=\220t\360\275\300\326\227>$\003\230\275\271\215\353\275\224M\226=\347\001\033;\313\304~\2764Q\243\274\321%$>=g\217\276\222\320\316\276\313g\230>Y\003M\276\245\035\264\2752>\201>KW\242>\0317Q>\316\230\227\276\255\001\354>\326\252\266\275`\373z>\032\310\213\275||Q=\272:\262\275\201\314y=\266\3530=]\344\213\274M\213?>\272\'\233\275!\'\001>\202\235h\275\270|\226=+\216)=\004@N\275\006\211\317=\363\2427>\250\256I\276\223,+\276]3\376=\233~e\275\334\250\324\276\214\206\216\273\265\002}>>\233\033\276=g\274="
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 30
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/add"
      op: "Add"
      input: "oldpi/model/vf_fc0/MatMul"
      input: "oldpi/model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_1"
      op: "Tanh"
      input: "oldpi/model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\211\337\267\275=X4>\346\021\357=*\2555>\202mS=/\345\235\275s\255\007>|\272\312\276n5\200\276nV\240\276\344\355J\275\2720K\276\326\300U\275\351\376\231\276\020\010\213\276aUe=[\236,>#z\004=q\225,\275TZ}=3\230\261<\210\252\017>\316\241\005\276\357\307d\276\206H0\276X\370]<\205-9\276\342\004\234\276G\254K\275\317\232\211\276y\260i>F)\236\276h\n\221<\201^h>/\010\010\275)\005\205\274\375\361\024\276\200\206\220\276\252\356\303\274\313\254#\275\035\251^<Q\350\200\276\330Y\017=\220\276\201\275{HV\276\202\216\004>e,v=\217\312O\275M\356\234=@\252<>\235\032\252\275a\014\006\277E4\361\275\213R\343<NN\222>\325\323i\275pD\232\275\377\217\254>\366>\215>u\240H>\257+\330\275\362B\221=\211\262N>~\223\023>\222\265:>_\212(\275}\352Q=\224\202\204\275\033\002\334>}1{>gg\354\275\232,\316=}\371Q>\235\017c\276\270]\r<\025g\">\250\260\026\2732J\016>yw\306>d\004\276\275\250(\301>]\362M\274\030W\227=\r\325L=\234&>\276\235\311\275\275\335N\216=\3501\204=\260o\250=|I6>A{_\276\030\245\216=\351j\217\276\336\253\314\2755\201J=o\206\016\276\00751=\352\306\n\276P\213\340\275\344\2346\276tx%\276\246J7=\030k\277\276\366\243\251\274\364\227\261=/DT\275\221\356:\276\325\032<>\233/,=\r\263\200=\341\'\r\275\365<\271\276\304\300/\274\326\353\001>\234\374\010=P\236\265\275\306\271\334=\352\031h>\346\002\326\274=s\211\276#\370\260\275\230m&>{&\312\275Z\370\356\274\344\220\344<o\334>>\266\020,=\326\276\t\276\025Z\266=\007\2651\276\276\014\240\275p3>>\022\321\026=\035J\016\276>k\017>\2416\315\275\n\001\r>>\320\222>\002\340\017=!&3<\003\3466\276\244\327\302;%%{\275\'Up\274\372\177\032>Lk\246=P\235\250<\340#\244\275\235M{\276\343\362\321\276\010P\230>\235Z\351\276\2536\367=u\177\305=\200\2137\276H\004\353<\213*p\2754\331\275\275|%\010=\025R\352\274\0042\213=T@\264\273\267\366\203\274\205L\206\276\203\324\267\275\243\220\230>q\2746>`\221\t\275r\2649>\276\023\273\274\034\306\304\276o^\\>\003;#=wH\354\276\233\212\027>\302\237N=\377\027\031\276\033\374\250>S\031\374\272\n\224^\276\204EJ=\260\010\310\272\332e\235=\242\206\212<\272u\313=\014\273\013\276\177\016]\275\'\317\265>\215\004\273<\246\245(>\373\303\013\276\313\203\247\275\330\375\315=\010\335Y\276\275\201m>\262\264=>\250\203h\276\344\235\220=p\313\251\276\025\036\312<\253c\247\276e2\030\276\275%.\275\243?\023>\344;\341\275\330.(\2768\210\217>\242\353,>\332\357\322\275[\365\270\2754i)>\341=\361=)\271I\276\250\316|\276\t\260\017>\271\215X>Pr\316\275\243\260\261\273RN\004=\035\230\311\275\022\223_=\205\023\235=\222\222\306\27509\206>\316\304j\276\211\364\032>\353d\345<\tb\214\276\372\274\337=\246\003&\276\357\332\337\275\300\266\373\275\"\317\225\274\326\242f>K\210I\276\n\245m\276\337\340\275>&+X\2761uc>\362\247\216\275\333Pq>\222\307\020\276@\226|=\037\373\236\276w\022\003\276#\353W\276\363em\276\345\253\336\275>\004\224<\375\371\016>\233\007\257>\330h\204\275\010\003\244\275\210rJ>5\360?\274P\227m>\326N\002>Z\266\021<w\007y>\375g6\276\307\364\213:\206Ad\276\\\302\005\276y\2036>8l\266=\344w!>\332\007\016\275P\261q\276\262\257\023>\207\330=\276^.\250\276\220\311\200=\324N\223>\265h\251>\003=!?\306f[\276\201\271R>O\022\032><\035\315\275D\365\310=\305\021h>\246\233\220>\315\375\357=0\264%\274\030\323)\276\244\2009\276\3734\200\275>%e\276\020<\315\276a\327\240=\362\344\002\276,\355G> \351\221=\022\332\234<u\226\205\276\242\203p\276\036\321\305=\272\314\024\274\360\372B\276(:\303\272N\352\240\276|\344i\276`Ga\275\r\326s>+~F\272)Gi;\272\277v=\322\200F\275\376\3111\276?\223o>(\313\004>\256\354\010\275Y\326\304=f\322q==\273R<\001\226\325=W{\207\276\333v\014\276$\204\"\276\t\262l\276\033\035K\275`\336\346\275Sjk\275\260Bf\276\027\006=\275\0226\010\276\224\"\014\276\273\357H\275\217\332I>\005O\010>\353\372\231<\216\242\214=t\024\256:\367\300\215\275\222\300\303>(x\027>~#\251>\202\013Y=?\204\037\275\006\005\020>\206Ll\276\226\235\236;]\337\310\275\330\360\023<\351\226\370\272\216\004\022\276\232\2003>\344\233R>\036D\202=\230\3436\276\346Jq\275\031\014\001\275b\250\251=O(2\276YE\004>n\221\224=;%\277\276\031S1>\013C\302<g)C\276\310o\013>\372`\356\274\350>\007\276\367U%\275\232. \275\331\030h\275\205\205\203\276\"\0201\276!y\265>\030\006\205\274\010jO\276\302\273\316\273a\365|=5\320\232\276\345\336\020\276\020\333\232>\033\206o\275t\240\367\275\344\212\002\276Fg\004=QK)\276\267\355\210=\030\025\227>5\r\353\273\355\230?\276\010\357f>\313\243v\276r~\361<n\372\255\275\347s\205=u\315I>\007^<>\307(\010>xNd\274;\270\234=L\202\333>\027y\305\275\202\027\254\273\246\216\036>\204j`\275\236G\035\276kV\224=f\321\303;\267\320K\274+\343w>v\302\212\275\221\226n;\316cd>0\204\005\276o\322S>od\330=U\260\207\276\353\362\370\275\031\037\010\275\312\254M>I\372x\276\221-K=\362k{\276&8S\276\ta\177>;S\007\276\362\204\202=\266\3571\276\031\276\327\273\242\266\021\276\016\345\306=d|\005\277\304\036-\275/x%>bP\244>\203+R\273N\013=<%\264\"\276\262\2012>pdP>\371\332\213>\\\t\272<\375\357\241\275z\023E>\345/\325<+yC>\204\336\201>\203\330G\276\334\025U\276F\3226\276\007\\\026>\251\305[>5\223\321=\230]\205\276\305\206$>\335\371o>\206\231~=d \214=\364Fg\276\';\210\276\252\202\223=\021\"\n\275[\256\236\276\371\222\003=\tp\250\275S\032\005>8\t\254>EJ\340<\316\345[\276\354k-\276\013\257\035\276\371\264\262=tj\304=\346\344\025?\006\204|\276>*\n>w\\\363<t\243\270>J6\004\276\340N\231<\366f\233>\246\005<\276\324\271\026\275\216\323V\276`\351V\275\264X\231>\335%\200\275\203\320\333\275P{&\276*IO=\361\013V>\345\254\001>\365\327\025\276/v\020\275\247M\326=\0052\016>\2035)\275\014a\336\275\217\371\324>\257E\246\275\003\277\241=\346~\217\276\262\2642>\257\210\262<\014qU\276K\226\277=f\207+\276ml>\276\245\362\341=\003\255>=46\324\274nA\335\275\333\014\263>\360\001o\276\031Av\276\r\031K\275\243\201E\276\255\030\'\276!\3001\275\322\361\212>\031<\002\276>\331O\274\205\0375\275\267&2>\273\262|\276r\363\000\273\230\310 >\301\364F\276\032\256&>\351%\275\276\210)\372=z\031~\275I\010Y>\365Li>ew\r=\323;\215>\030^5=\314\244>>\n\3017=v\223\203\275\366C4>|U\372\275P\373\304\273\307\2415:\323\263\245\275\251\333\013\275\333\271w>\321\246\253\2763i\230=\311\256\241<m\300\325\276\255\345/\276\035[\341\275\037\372\201>\210\340\240:\241\232\237;\207+\034=_\024\324<\200a\014\276\337\220.\275B\252\022\276l\004\305=\342\202;\276\226+\235\275\313\242\036<\333`\210=\023\363\177\276\004\n\212\274\231\255B\275\223\234\372\275\346\004\031\276\242j\376=\301\026\276\275\177\224\201\276[\"W\276{V\032>|\\\330\275\341M\326=\300\301?>\304\031\225<\021\354\326\2765\033\016=a\347\207>h$\007>\233\253F>t\365T>0\330 \275\322Y\270>\304FO\276\217\027\266\276*\223\306\274c\263\376=\000\321\213\274\243\224\271\275\331R\262\275\202?C<2\361\334\276t\315y=\217\007\026>\270\212K=\246%\031\275\352\326\367;\366Z\360<\314\302\341\275p\326\241\275\010rJ\275)\265\253\276\354\310&\276\033\247@>q,\335\276\266GT>I\366\'\276\346\254\035>\236\304\021>\005E\346<\220)\221=,H\365=o\370\371\275\255\2225=Q\350*\275\207\211,=\346\200\223\2768\334\005>\346\nX\276\033|*>W\225\337>K\220\247>\311\2106=\035W>\276\347\237Y>\305\364\204\274\355\310\223>j\326\252\275E\023\366\275\\\312\033=\267E\266=4\275,\274\322\351\266\275\240+\234\276\273~N>q\376$<\253H<>+c\355\275\336\360\223\275\362#\241\276D\316^>3\310P=\216\254\341\275/\353\350\276u\272\364=\305\247\210\276G\344V\276\255\345\016\276\366\227\204\276I\240\024>{e8\276\003$\342=\334\034\356\275u\263(\276n\\\203\276\212D\017>fr@\276f\271\317=\2273g\2755\372\204>J\236/>\263O\\\275j\361U>\033\243?=\265\374\017=2\367\037\276\273\314(>\001q\317<\377\232j\276i\302G>\255wm>g\363d\276\250\007\344\275\364\354\366\275x\2346>f\2773>\351@V>\327\324\036=\014|\365=\256\017\206>R\326\003\276\266]L\276\266\343\244>Qnt>\207\361\352\275\207\367\243><\226i;\305r\252=\324\230\201>\364\316\226>v\013_=\271\031\032<U?\312\276$\010\'>\236\304w\276:\037\254\275\332yk>2-\347=rY\246=\330\242\217=\021*I=\252\257\222>\362\361\201\275\220\252\213\276\010@\324>\211@\010=\306\016\220\275\r\341|\275\232?\022=\000CQ\276\231&\305>\275n\327<\320\351}\276\001\207V\275\277\342==\225\236h=\354\273\227\276\215Nf\276Z$\223>2J\014\276\367\343\222=)\201\306\275$\355i=J\020l>\365)\270=\320Tb\276*6\t>\232t\036>\3379\213>^5T>\317o.>\225\003\303;q\020\r=\010L0\276Q\347\254=\205\200H=$x\213\276l\337c>$=(>\371|\031>\311$[>\353+\263\275\013\034\226\275\007\256G\276\217\336\331\274\324\032\307>\261l\362\275\030}\272\274\335I\337\275JO\247=\332\244\227>\347\214@>\211\346n\274 \261\316>m\026\222\276Lt\211=K\360\212=\327x\331\275\035\007I\274\030\273k>&\004\233\2754=\326=\232\211\367\275\203\024\362\275Em\201>\260ZS\276\326\025\212\275/\202\327\275\no\260>j\035\030\275::\220\275\016e,\2764b\002>Ta\257\276P\313X= pd\276\346d\004\275\262\222\256>\207\360=>&;\342\274\\A\271\275\034Z9>A\370\303=\3723q\275\243\345t\275X\0056\276\256\311\357=\023\277m=\363<\017\275\343rw>/\214\365\275\271\266\226\276\2771\355\275Ns*:\224\353\301<j\255\203\276\277G\260\274\362\322-\275\r\025\225\275\313t\235\275\006<h>\202\023\202>b\273\237>$\266t\276\311!z\276\244{\244=\354C \275Vh\t=\010\302 =\2761\346=xh\223\274\374Vw=>\224\203=q\207\177<_\220\035>+\210A=>\372\257\275\251\245\373=]\307\213\276\335\377\025\276\325\222\275\275?\376\201\275M*\021\276F\317\365\275\355i4\275\3632\364=n>\337\275/\013\240\275~\362S\276\351\001\010>\003c >7O\220\275\365\325\177\276\nx\372\275\213\322W>pnE<\036\313\302\275\357\0177>\337\017\221>\300\252Y\276\343D8\276\021+\302<\222\005\333=\252\026\270>\211\372\007>\365\245\001=2\324\326;n5\021=\342\350i\275\020\213\206\275\275\032\204=\277\334\204\276\237a\273>\016\"_>\341\3305\275\323\357\313\275\250U#\276\333\351>>\265\234\\<\202\013G\275\001\002\242>\232\2719\274b\237\207>/\201c>k\237\016\276\324\177\307\274X\2735\276\200\231\215=\"\337\217\276V\336\320\275\321\007\237\275\034\350\\<C\350\306\275\271k\305=~\346\316\274z\206\263=\320I\237\275\374+*\275\272!7\276]\312\230\276vY\033\276\307\376\237\276\\\266\207\275\214\246V>z\354\312\276\264-?\274$S\326\276@\222\372=\nu`=|\357\305>4$\200>\330JH>CW_\276<\025\273\275\273\346(<S\337W=i?\211=1\354\327=\2629\204\275\263\265r>\225\206\025>\033\025\006>\262\351g\275\277(\246\276t\301:>\206\326\225\275I\351\n>]C\307<\013\000Q><\n\331=T(F\276\tf\033>]\265\013>\205\243\\\275p\343\004\275\252\263\003\276n\202\014\276\276\2727\276\262\220\034>L\372\317>CM\353\275\371r\223\275\224\240s>r\365\216\276<\223\022\276\2507\212=\224\263\213\276D\311B=\215\207a=\270fK\276VL<\274y\376\250=~\237\327<\"\321\261=J\034\373=\212O\030\276\265\246\006\275\024\236\200=1\347B\276\034\3508\276Z\317\220\276\346\031;>8\360&>\357\211\034\276\2025\233=\312\301\233;\356\274\346<\036*\326\275\236\347D>\024n\315>Z^\021=\231\253g>\246\316\036=b\343\305=BT\225>N\317-\276\347\246N>\035^\260\275~\004\003>\322\317<\276pJ\340\275\215\232\367=eOE\275\267\327\270\276\275\263W=\322t\272>\027\0278>,M\315=\005\230\212\275\317\256\212<\206\377\031=\344\327\302\276u\235#=4\032\207>\221{\350\275\305\262\217>\324\031M>`\306\313==\301\324\275wj`>\214\316\263<\212\n`\276\245\032\253=\003\312.\276\373\344\206>\234\235\322\275\007\313\240\2736b\212\276\273Tc=\023\373\314\275\245\\\254=\276\341/>-~\303\275\033\347\230=>\333\242\275\326W\272\276\373\020s\275\200\344\375=\260\371;\276\345\323\t>\014\247Q\275S_\214<\267\253\273>\334\374\'>\275/Z>\224\356\032\275\230UX\274M0\325=\341\302\037\276r\010\310\274\3250\262<\031\030\020>\033\016\357\275o\331\323>\236\217*>\342\304T>:\021 \276M\327\025>\366\024\205\276\307L\274\275\niL\276x\357k\276!1\325\275\355\222\340\275\353#\033\274\336w\226=Q\257\025><8\247;\003{!\275\006\242P\276\013\310\024>\330_\237=)\272\016>q1D>d\343!\275\335\302\013>D\'\020\276\311\273c=\205\203\211\275\277n\345\275\t\306\201\276k\320\203=x8\222\276\031x\004>\021\2712\276\000f\321=e\207\300\275n\003\215\275\343\377\003?\260\3352\276\372\324\305=c\207\234\276\236\210\003>\241\363\220>A\257Q\274yK[\276\014\005\005>\373z\233=\227\347\265\275\300\213D>\340\307\024>\311\230h=-\005\372\276\031VZ=u\251\014\274h\251U<\363U\017<\310\330\307\275\374\277\303\276\353\255\205=\003\354~\274W\304\244\276Xt\027\276\317\033\243>:\252m=\232\270i\276\353\271l\274\034\000\207\275\336)\243=\034\2322<3q\220\276l(z\276\245\326y=\204\017\010\275\327\206C>\324\320\233\276z[!=\323\224\326\274\360T\353\275D\313\356<\265\244\221=\311\224@=7\250\371\275n\260\233\276\254[\302\275t^\327\275\254\265\222=\357\037\315;j3\006\276\t\037g>\241\210\206;\034EB>\033\231-\276\335]\361=\200\017B\275\230\244\331\275\020\235\331\275?/c\275\024\332\312\275rb?\276=\314&\276\323#\364\275ua\327=5\227\336\275\305F\352\274\376\224k\276CN)\276d\366\010\277[\217\023\276\377\361\275<L\235v\275\355\322\016>Dt\371=4/\327=\017\2673\2762\214\263>\275W\030>\022\017\302\275\271*\200>\320\312\020>\3767)\276\203\373\215=~\034\364=\022`E\275\0038\255=\332k\263\276kE\010\275}\374\375=\223tu\276K^1>;\365J\275*\002\032>W\023\331=\334XE\276(\005\225=AO2\275\033\031\364>i\205\\=R\020\220\276\356\236\301\276Z|\270\275\201|\376\274\030O\355=^U\235=\177\241\235>\277\360\231=\254\244\325=\233U\004>9h\224=\231G|\275]$\365=\251-/\274\367s\311\275W\224X<V\017V>\332kC\274\024\2328>\221\252\241\274\256DX\276\374{\200\276Q\270\032>JRj\276\251Ez\276\301\272N\275\231\306\301=\014{L=\337\224\253\275#\030\332=\377\267R\276\246\300\237\276\211\254r\276\0169\322\275`\240\365=\246\233\333\275\340X\246>\2053\315=]\374\242>fb\022\275-\023\031\27655\026>\317\247\311\273Q\022\345\274<mS>;\217j\276I\205\370=\227\370\303\275\220>\220<\341\224j>\316ou\276W\222\361=\347\021\242\275})\257=\346\227\006=9\000\252<(/1\275\330\304\237=\264\334U>\344\306\376\275\250\245t=o\0163>d\256\245>\026\244\207\276:\325\256\275h\347\215=\247N\016>\303\035M>A6\013\276n\275\267=C[\246>\326C\247\276\226/\242>\202L\020>\306\306\223=\000\327A=\323\200\332=\221\227\221<D\222\370\275\373\025\202>\224hF\276\314\203\301;\355\261\301\276\210~\214\276\3121\304<\222U\273\276\277\3624\274\311\315\014=\030\361\033\276Z\234\036;\376M\277>\025\237K>+j\020\275e\242\225\275\343\224\377\275\271[o=\177\010\035=\007\335-\275`\375\220=\257W\304\275\327\363 \276\301\251H=Y\273\260\276c\032\254\2754\363 >\202\241\311\274\345e\275;\026\315\024\275ms\037>\332}\307<\356\"\275=\274\027#\276\266\017M\276\017_!>\303\220=>mW\211;_h.\274\021}\003\2764\202\367=\346P\032>H\024L=/?\257<\n\342\222=;\025\217\275e\351\006\276\235\0243>\000 \232\275\343\033\300=f\223\313\275\253\255\201<\202\001\303>\335\242_=\231\225\303<\371\341{\274\211n\'>3,\262=c\313N\275\031\352\212>\323\277\327\275\357\003\252<\376\374\231\275;\203\360=\030\334\300\276q\304\374\275\215\222\002\276\263\273?>QF]>)7\010>\344&X>\"\301W\275\351\206-\276`fh>o\325\014=\343\224\217>!\t\000\275UY\'\276\023\024+={A\242\274\024\271l\275\034;\210=\203W\026\276\314|N>A,\313\274\030\271\030\276\205\211\017>\345\226m>@\230S\276\365\3629\276G4\205<\322>g>\203M\223=B\0215\276wE\264\276\\l[\275\272\247\223\276\205\247\005>S\361\\=\253\353\004\275\372\352\300\275\232\351\233\273Nk\221\273\200\2501\276\271\274\037>\235(\177=\360\3651\276\3636\224=\233K\215=\232:*=\243\213\235>3\331\334<\270\356\000=\245\004\270<\2104\240>\274\336\266\276A\t=\276 \242\001>\376]\337\275N\256v\276>Ek>\324m/>\\\002\223>\337\034\034\275\335\000W<Igg=\200\'\246\276]\355\317=\203X\t\276\266\243V\275AY\001>\036&\273;\t\316\331\275,\207\204>\316\343\312\275\376W?\276ZG\313\276\214/\211\276\371\343N=0\336&\276\265\236\335<\006\305(>\002r\026>\275\222\231>,\3124>e\"\214>k\214\321\274\226]^\275\367t\254>\311\360\261\276H\316\027\276\302Wc<\321v\024>\021\274F\276\204A!\276\221\314\271\275\363\263\322=\022\344\251=ww\270\275\220\270\034\275\260O\t\276y\273V\276\002\323\221\276\005r\351<\031\372V\276\000K\265\276\207{^>\232\335\323=\'\315\'\275\000\332\251=\217z\224\276\362\273\313<\254\341\276>\353\204K>\326F\007\276qM\207>\256\320$\276\302\314\342\274\233\220\243=i<\277=\262\310\004\276\214K\250=aQ\207\275\031\2631>\307\304]\275+\024\037=\356\257\211=\315\2774\275\320\264\230=o\260 ?\032\r\204\275\207\314\033\275\270[p\275\006G\007\276\223c\257=<(\226\276\006<\205\275Z\355\001=\270db=,\035\246>\013\312P\276\353\307\335=L0\350=\257&\025\276\025\214f\274\037\016\314=8\310\324\275\302,\032>\311W\267\274u\004\213\276\035\242?\274E\333\t\276l\201T\276\014\037o<\210bd=L\361\336>\314u\377=]\n\233=%\224\225\273\356\002\230>4\340\214\276\037k\211>d\220\265\276)\260#>\030\256\345\273K\304\000\275\353\330\223\276JZ\343\275(\211\355\274\314\004r>\377/\230=*\202:\2765\247P>^7$\276I\231\"\276\363G\323=\301D=\276\r\346\017\276\372Y\370=5\241,\276\300\353\341\275\017\030$>r\231u<Mt\241\275E\203\317>AeH>eU\221\2750F\316\274\027R\'>\346\023{=\000\004\270>CbX\276\210\215\330\275#\003\231\276\235\t\002=\233N\260\276T\021!\275m\\\255>m\'\254>\017J:\276>\034\303\274\205\000\241<\343\364*\274*\013\210>\203\236\362:\364\224\263><\323\207\275k\237\r>\320O\312=\373\365\220\276}\022\036> \032\037>\257q\227\275GH\350=\307z2=\004G\005\275\212rT>\034\254V>\243\315H=\276bl>\336 \311\275H\226\373=\273\355\'>\254\233L\275f\030\261=\037\307%>\014Y\334=\033\004\355>Ro\225\275Ub\342>%\307M<\254\017\341=^\3033\276\210| >F\004Z>K\305\220\2768^\371=\312\331\036\275G^\031>>\324\240\275O\036Q=\341\327\363<\030\315\301\275T\"]>\344\022\016\275\351j\253=cR\272\275\207\"\347=R*\326\275\2527\276=-\004+\276\360\310\223\276$L\323\276Ju\202=\325H+>uj\270;\272\223\220=\346\356\207\275\345M\221:\366\r\035>\300\273\217<J\004\226;\277F\n>\260\367\240<\245\311j\276\006K\343\275\3652z=Q\357\200>\300H\002\274\023\334\214\276r&*\276\265;\222>\267=p\275]\275\303>9\033\337>\376\3642\276\264\260<\276\260\306\260\275s\031\021\276\034\000\351;s\377;>\023D\323>\313\365\370\275\177=\254\276\216I\223\275\207\213\037\276\215\201\233=j\363y>8<\310<\336:$=+\0275\276\243\001\000<\206r\204=\363v\024<\353I(\276\0176,\276\362\316\026>*\245\244\273@W:\276M\316\367\275\200!\241\275\007\013\377\276\246b\320=\204\204\377\274\001Z+>k\253\234\276\201\352\227>\004IY\273gGW\275I\363\247\276\304\310\226\276\202\335\231\275\373\224\201\276\361%\200<\220b\t>\310\220\023\275\032S]\275p5\272=\250jM\276\366\204\200\276\010b\264>\224\nJ>\270\233\237=6*[\275\004Z\035\276A\313\016\276\340Zj>#9\210\2743\252\351=\367\352\316=\374\3733>\327\261\221\275\217Y\224\274\207\214`=\023\"\267<\311\322}>\020P\024\275\362\315?>G\331\003\276\324\'\203\276a?x\276O5\r>\'\232\202\276x\311t\276\277\262\221>KO\007\276\320\006\240\275\000\003T\276N\313\200>`\365.\274\375\035\346\273\232\3447\276rx5>0?F>\033\226\252<\000\371\003\274\322\334\234\276BK\237\276\345r6\275\375S\366=\374\312{;A\2360=\317\002\265\276>N\031\276\231\307\350;\276o\356\274D>\326\275\002\201#>;T\r\276\204f\313\275n\036\\\276\352W6>u\273\251\276)\334\277=%\265\260\275\320\362\346\274\315\356\262\276\220\312\010>\275\357A\276q\216\355=m\323\004=\266YH>\200|}>\353$->1T\326=\316_7<\255J\301>\300T7>E\367\344\2753\333\027\276*\255\212\275\301]\022\276\266u\274=\335\237\002\276_\261s\276\217(\320\274\260C\002?x\362G>t&\232=P\372(\276\310\004\304\275\212\004\235\275^\321k\275\302c\257\275\215\213\245==\320\005\276\312a\316\2758F\372=\262\213\217>\347\'\210=\235\016\260\274~UE\276-T->\222\036\005\276q\302\225=\361\366\231\275\303l\017\276\025\247\364=\273\301\026\2759\232\031>&\330c\273\013R\213>\314\362\325\275\333\376\256=gtq\2763\2343>\017\005\267\275\2556y>\237+\317\275\267\310M=\374\306\343\275\367ar\275\"\200\006\276\255=\307\274W\213\244\276[\355\253\276\316f*>\036\257\016\275@\224\213\276\302\377\341<\346\026Y>\334Wp>\270\016z>\315\346\216\276-\025\364=d\017\032=}xC>P;\237\275\027[\205>Up\030>\372y\234>\034\261;\276\321H\225\276\232\014\363=\003\360\016\276t4u;\275\316\001\276\216H\206>\327\177\032\276\254?\315=\027`\300=\3772u\274\361\200_\275\353j\007=\220\346\021\275\r\247\253\275)H\002\276\270V\325;W\271@>\037\372f>\251\002\030>\310\007\264\276v\025\267\274\t\332\230>\312\351\321\276\360\327+\276\006!\331\274\014B4\276\213\2035\276\010\026\347;w\304\320=\324\017\263=\345\233\252\275\362\350\221\276\r\267\302<\003\310J\274\314\252e\276\037\224\001>\037\262\024>\r\'a>\030\232\004>:\034\375\275\005\322\r>3\272\314=\274\323\225=\305h\340=\023\341r=\261\364,\275]\361\270\274\316\353s\276\032\344\314>@;\021\275\221\026\266\2762\263\303\275\336;x=t*V=\260\010l\275?g\224>\373@\201\276G\037~<\010k1\276\227\2624>\342\350_>\201\365\235\276\277\234\374<\031N\003\276+\212)=L\241F\276\022j\252=-4\310=\301\226$\276\221\320\264>,\364\245\276\243\026\003>_\302`>Iiw=\267\020\225\276\306\254\002\276j\314S<\260\257\376\273\037\223\276\275\243\277\007>\036\333S=\205\376\215>k\006\210=iYt>L\331\002\276f\332\220\276^\007\242\276\206Q$\274\276%\007\276X\225\304\276w\370*\276\'\006\217\275\200X\324=$\303\222\275\301\306\234\275\303E{\276\336NU\276a\336~>\326|G\275\030\272\211>K\232\010=\301\207\014\276_\362\016>io/>>\036 >*\020\353\27579k\275\370d\347\276x4\214\276-E\'\276\021\"\261\275\314\251\353<\017\031\202\276,\242\345\275\025~\026>\257\206\031\276X\226\352=\354\241\375\275\321\352\367\275\277\003Z>3\317+\276+\323,=\363ge>)\375\253=\037\213:=Ck\304>[\307\025>i\243\316\275\036\003\203\276 \003.\2750a\215<\031\234\361=)Z\233\276a\350\005\276\023\035\224\274$\270!\276\351\350\271\275C6\251\275\261S!\275\031\241P=\3260\007\276!\212N\276+6?\275\314\225\255\275]`\023>\032\260G=\325/u>_r==\223\266B= 3\001\275D.%\276\214$\257\275\313.\277=\245\274\310=\342\016\274\276\023\257\210;\342af\275\242[>\275\035/r>De\265>D\206\247>\254\341Y\275}\343\021=jA0\275\330C\016\276I\357~=X~_>\252\007\343\275,\036\211\275\r\237\t=\177\330\000>\264z\203<\021\324\337>P\221\201\276x\014\337=\343\265\034\275\335\201H\276\376U\231>\307\005;>K\341\370\275\017\275\200=\251\324\021;zc\035>\362d\315>&K^\276\321\232\346<\226\002L\2751\004\277\276\372a\001\275\030H\206\274\260\313\\>\027k\217\276\033Z\252\276/<\271=\357M4\275\356\2079>\2224\034>]\303|>\020\332\323=n%F\276\306mV\276\336\242\232\276\211\370d;*\317T>g\023?>gV\201=\265\270\340=\337\246i\276\023P(\276\302+\340\275\205Ym<\355G/>\005\221\301;1\360\336=\306yl>~{J\275\213|\332\275\273k\201>R\027d\276\354\232\346=\370+\010\276\250\315H=\257\337W>\245\306[\276\010\315\246<fyd>\301\256\213\276\007I\207\276b\232F\276\3133\010>=\3769>\355k)\276\305\013\237=E\334\t\274\260\262d>\223i\221\275\314\350\245\276\032\336\322\275\333\227\177>^\347\230=\240\243\370\275f\255\030\276\005\212\263:\315)}=\334Q\017\276\273\r7\276p\"\274\2759\t\235<\024\307:\276f\355\225>\310\363H\276\210,\336\275\311v~>T\342\231>u\033\254\276\230\373\370=\240\021E\2750P[>6\230\334=\300\323\r\275\266\261\274\274\300 \237=\313\206\027<\014\204\'>\\\326.>\312\361q\275\220\247\261\275\206\343\035\275\260\276\342>\026\032\202\276i\014%\276\313k\320\275\346\037\300=f\030F\275PV?\276\t9a=\254P2\275\373#\350\275\276WL>\331\3235\273\242\366\231\276\242\271(=7$o>drl>G\306\203\275\027~\213\275 xB\276.;6\274\304\356\370\275\"\242\001=B\0025=\327\033\263=\37300\276\274\321o<\375\307\233>o\315&<\020\205\266\276\227\204\317=\246/\237>\326\'Z=\370\324\230\2753\337w\276\n\237\252\276\222\344\227>\240\274\213=\203\353\213=\346\337]\276\355\371!<>\373\210\276\022\352L>"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh"
      input: "oldpi/model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/add"
      op: "Add"
      input: "oldpi/model/pi_fc1/MatMul"
      input: "oldpi/model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_2"
      op: "Tanh"
      input: "oldpi/model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
            tensor_content: "\366\320\357<?\252*>\337\020\335<I\262\016>\356\021f\276RB\361=CV\004\277\323\313]\275\262}\372\275\031\301S\276\324w<\275y\302\035>5\032;\276\363\373\356=\'\032-\276&\207\212\276\030\312s>\264\021\343\276VuU\275iP\361=\351\367\"\276\262Ra>\301.Z\276\325\336\353\275\374;\220\275+\212\271<u%`>\207\033\200=\351\346\214=\231\357\023>\005\027[<4\322\267=\333\223\220>X\326b<\273>\226;5h`\276\217\310\261\275/\317i\276\260\254\036>\026Y\'=-\253\266=\027\033\315=o\031\\<\241p\273\275&?\207\274\007\377.\276B\207\">w%\254\276`\177h>>F@=\225}\025>\037\236\205\276W\263\237\276\354\332\\>\006\001\250\276-\033\242\276\376-3=E\304e\275S]\240\276\213\270\233=\350\257\342\275\342\352*>Ez\237=^\373\256\275fOQ\275\217\\\326\273\271\245W\275\323u\235=\324\347t\276a+j<\031\rj=\315\005->\207\354\201\276\271?i=\372\260\356=\352\252\201\275\357\337r=;\014\216>T\351)>\274\275]=\276\200\250<(\247\222\276uvx>7G\323=\n&R\276\006\244\361\275\301\005\276=s\'\315;\360\231*\275\004\3112\273\'?\305>\2636F\276\260\343\253\274Z\'T\276\322\001\203>\252\325q=\221\325\000\276\\\025\233\275\224\310M\275\333q\204\275\306\346\241= A\254={\304 \276\335~b>&*\226>&\221\246\276\222Y\236>\204G\362=e\263\370=\232P\020\276x^\177\273\0335c;\202\202\000>;B\316=\031^\354=\223\016\\\276%\3141>O\007p\276\206\310\">\261\370\300\275\2126\010\276fF\256<\305\027\310\275\310Q\251=\247G\215=OM\220=\305J\321\271\207\363\004\276\302\362\257=zL\036=<\027\210=\032k\024?\271\315\033=\245]\332;5\244\207\275\250S\324\273\334\002\r>&\376\004\276\037\226&>E\230\024<\222T\006>r\333\243=\271\351\037\274D4;>K\013S\276\031o\316>i\005\223\274\017\242:\276\211\256n>\277\263:=E\2529=\\\\\035\276B$\032\276jG\020\276\275P\016=\225a\261>\235\242\216\275+\023\255=\007\004\362\274;\002\302:4\334\344\275\210\263\207\275K\272\333\275\272\221]=r\234\034>\331\022\340\275\217\235T>\275G\307=\356\340\352<\210\031g\276\r\362>\276\340\215\217>\263W,>\005\347\365\275F\310<>,q\217\274\000,x\275\251\"\017=^J\327=B\303\013\273\253\243\272\275nd\326\275\344\272\251\276P\313$\276o\027\n=\220\311\206\275\360\366`>\246p`>\260\241\205\276j}\003\276(\344x>\3601F\276\375\304\356>\334\235\315\275;iL\276\352?C\275\260\325}>\213\352\030\276\256\331@\275\2763\253\276\246\337\346\276\2768\267\275\035\317\331>H8\374\275\227\223\306;\206\345N>\315\314\303<\273:\316<W3\315\274\246\025\330\275~\243\346\275\035\326\220=?\362+\275\273\025\310\275\2245\321=w\300l>\236O\274\274\034\020\202>\344\211\022\276\205\350\264>-Z\245=\007\005\322\275u,\271=\204q\000>)\r\270\275\310\224 \273\213\013r>\220\201\236<\300\300\232\275\363\262\207\276\277\326f=8\347\001\276\261*V\276@G\371\276,\030d\275\362\350g\276Y\376g>{0I=I\202\203>O!\020\275\362\313\373\274\004E\276=\355\242j\275F\014\271\275\310\200d=\014\204\013>]F@\2768\315\265\275M\022\255=\231%\367=lY\001\276\032v\366\27503\305\275J\327\r\276\020\031\276= \207@\275\317\324\247\276\003\014s\2755Y7>\032\345\032\275\200\025\013\276b?\311\275\372-\343=v?\335<\217Q\305\275\214\230\322=h\203\365\275\242\304\302\275\375\353f>\362\311\026\276\204\311\250\275\336\234x\276 \204\267\272\232\231\325=\032\263\330=;c\022>Iz\223=S\'n=?-\n>~\201\274\276P\007\213\276M\227\014>\371\004\220\274\'S\362\273\3069~>c\'\267=N\347F\276%\236\214\275,\002D=b\250\230=hu\300\273*\321\277>\335#\370\275\333x.>\251\352p>-`\230\274\022(\263=\265\341)\275$\030\031\275\257\336T>\347\025r\276!\303\351\273\306\007f=\322>\002\276i\3425\276\302\342\267=;i\255=\317\334\230=>UI\276\376\020\214=M%?\274\356\000f>\370\\a\276\353T\003>\371$\267\276\025\355*\276\032K\014<\337\023\340=\215\372J>\332\234\303;\3762\374=V\210g=\237\235\240=\312\014\236\276\236\252\021\275X\001W>^\245\\>\225\3631=]\275*>\251S{>\351\005\374=\323\210\205\275w\333\271<\007o\316\274SM\331\274_\023\257\274P\320\306<\026\352\353\273W\252#\276B3><:x\243\276\313\275\302=j\220\031\275\212sj\275eW\"?d=\357\275e\256z>Vy\'=Rc*\2760\311\326=N\366\013=\337\216t\276\224\240\317<@I\347\275\035\355\246=T\277P\276\200\341i\276\024\231\304\276O\311\340\275P\245L>\310+ \275M\206\000\275\331Gq>\252s\030=\034>\206\276Z\312\257<\226\020q>IJ\t\276-\'\224=\346\322G>\222}g<\2102\035\276n\034\356=\225\220\220>F\212m>@\256O\275h\364%\276\206\277\346>\342I\364=\230D.\275\"&J>YF\014>v\371\253=)\242\022>KL\254;\004\255\006?\262\361\236>?Ql\276\256N=>\316GR>\361\305\312\275\025\233\273\276X\220\206\276\240\030\352={o\001>&KF>\264\276\204>\001\357J\275\374\252\207>\005\230%\276\365\253\264=\216\364\207=V\3711>\025\232*>W-]\273\250\206\207\275M\225\002>\327\323M>\323P\362\274\301\217\315\272\031\332\r\275+.\261\275WR\311\275\272k\263=\372Da\276\372w-\276\330\001\252\274-W\233=\360\005\327\275f\374\236=-i\264<\360\230\244\276\237\236A\275\337\232\021\275\356U\030>\215\010\024>\324\373\264=\030\356\026=@\377(\276M\265\000>4\222P<M\355\350=\357\257\213\275\034\342B=\013\224%>\3426\017>\253}\275=\003\014>\276\327\307\253\275\\\243\220=\3235\277>\275E\301\272\221\243O>\334]\364\275\370p\331\275\276N\275>&\017\277=\204\"\004>\211(\013\276\333\210Q>\255\001\021>\212\017o=^\321\240\274o5\026>x\305I>\275t\245=#_)\276\0166\252\276{\0107=\2661\221\275K\372(=\006dX>\273\361\247=\0050+\276_y\206\275\376\261\320\275\024\234\253\276\'\001J\274\224O\2769\034^\251\276^8\021>\340c3\276\377]0\276\320\361\342=\014!\360< ?\014\275\0373\210=\310k\002>v\007\021\276\327#\352\276\340\021{>+\265\300=\351\236\t\276\002A\016=\017\027y>\342;8\275L\036\345=\035,S>\347~\224\276\352u\267\276\336\016\231\276\305BB>\317\342\221\275\013p\003\276\360<\311\275jG\331<^\207\361=A\036\222>-\002\266<\244\235H>\333\3700\276\365\000b<\274V\300>\230(\277\275U\350\364<3\003+>6}T>sv\301\276\001\321\334\275n\334\230>\013\2046\275\341\004\266=\203\255D\276\253\223\327<c\2012=v+n\276\327*\232\275\350\000\256;\377X\021\275\252\332\360\275?\rS=h(\244= \3054>\027@\302>~\367\351\273\031\242\034>{l\232\276I\245s>\234b\003\275J\201\375>\271W]\276\373Y\n>&_5\276dT\030\276L\315\310\274\235\'\311=+\226\376\275\365m\326=\374\004\347\274l<\000\276\021i\315\2768{\r\275\237\323\256=!\201G>\263\037\003=\345>\373\275\2631\020\276\\D\014\2748\265\222=\"\370\216=\330\342\256=Z.\213\276\340\357p\276 9\221=\356\016\273\276LoK\274o\\\016\275l$\243>K,\260=%\377x>\024\371\360\275\302|\230\2749\250\022>\243\327s\276\227\321\324>\224\223s>\016C\200=\346\323y\276\241\373Y=l\221\252=LF}=\t\266*\276\2131\r\276\364@\372=\235lh>\373<A\276SW\030\274\253\317\216<\206pK>\261\036\213<\352n\020\275\335&\030\276O\250\257\273v\207\235\275\n\207i>L\303#=^\255\235\274\032\353>>U\227\370<\202\237x\275p\264\352=\031,\241\275\002\264\277\275=y\222\276\353\264\256\275\034<f=R9\251\276*Z\372<\304q\371>\236\020H>*\007v\275\264p\255\275\240\317\347\275\265\214\r\276\223\230\251\275\231\004\367\276\'d_\276|P$\276\273\230\252\274\323-\223\276\006>\205>\214\300\321=\222Ci\276\226\027\215\275\235f\200\275\221_\213\275:\3310=#\224P\274\343\326\005=\355p\261>\332\000y>\2025\033>\373\021\234\276\255\220\030<\354\237\242\276\205\037\361\275\205\273z>\237\037\224>\362!\232:\321Z\242\276\262(\267\275\310\252:\276\"u\341=h\2377\276\302\362@\276\004~=\276\032\220\205\275\374)O=~\334z\2748l\200\273#\266\253\276\2605\256\276\3654m=\272$\242>\204\341\254=W\305D\275Tz\003>O\256\210\276X\226:>T\365\207>\355\362\216<\3777\207\276o*\014\276\272j\201\273\344.\264=x\225\226\275\310\004l>`\r\221<y\300\240\275\0249\226>\240\240\010>\023\226 >\014\241k<\316\355\340=K\255\332=L\266\270<p+\326=\333P\272\275\347\277\341=\306\272\267=\372\302\237<\031\0004\276\3113\253>\365\325\036>\024\013\347=\334\2108>\355\244\361=\265X\007\2766v\250=_\r\260>:\340\027;L\317\037=\307?;>}Kp=\211\3774\275H\274\r\276u\217\200>\177V\235>\031\3276>D\231%\276\314\307\312:t?\217>?\007\264>\225\262%\276\2613#\275\371\223\030=\203\315Q>Vz2>\327\370t\276\247tq\275\200o\037\276\304\205\001\276\235\002K<R\357)\276\227J\271=\331,\200\275h\'\240=\305\362\315=}\236D>\333w\334\275\361\232\n\276B*\346=\315\023-\273Y|\204=\022O\211\276~\240\014?\331\350\273\275\237\327\245=\003\255R\275\250m\270\276:\224\205>2\303\014\276\315\201\334\276\347=\035>l#\237>\"\303\262<\212\371m\275;L\254=\\\375/\276j\356\327\275\254w\334\274\373{&>P\251\021=:\335S<\226U\216>\000A\352=\365V\235>\277\031\230\275\007%K=_\362K=WA\n\277@\204h=}.$\276\212\351X\274Y\000\223=\356Hb=\261\220\027= \362\254\275\361\'\201\274\017\262\016>#`\321<\331\033\345=\337\361\317=>\357\306\275\353\375\026\274\367\202\270\276\n\006\245\274\036\244y\2762\200 =7\tb\275\230Q9=o \224=O\256\260\275\254\320W\276\005K\252\275@\212\235=~%\274=\223\271c=\325p<\276\002\357\214\275\237\\\320\276\252\035\271=\261a\272>\350l\000\275\327\250#>\027>h\275\363M\360=a\023.\276\251\271\321=\363\334!\276\257\366\223>\014\213^>\037\304\203\275S\333\245\276\214\317K>\326\303\242\275\026\2007>Q\272\205>\237\253N<h\032\215<\r\024\301\274^\023\n\275*\302L\275\242\034\"\275\031\255\217=\335P\371\275\325\000\034\276\335\331\241\276\344\030\257>\315\372\236<\344\353\211\276:\320\305<\021f\367\275\263Yc=1\244R\275\000\223\206>`}\004>\210\323\233\273\262b]\276\205\"\200=xL\234>S0\223<F\3536>\035Ei=\214Q:\276\311\201\216=J\240\341>\332\247\010=\017\346B>;\317\211\276,\007\205<TnL\276\204nl>\036~\330\274\'\372\202=i7\201\275H\214\t=\312&\201>Y\036\330=\272\244,>\005\016\231>\206\334v=\235\020#\276^\375\375\275\315\3746\276a\220\010\276\346__\274\217\267\326\275\036$\362\275\264!\202>p\004\232\273\351\231%=\262\205F\275Y\231!=\305[\202>\270A\'\276\026\270\366\27443\201>\213\367y=\002\242\"=\032 \271\274\370\3339>1n\347\275l\264\017>\375\003\235<\003\177\004>\344t`<\376W\240>\2700K\275F4\035>\004n!>&`\257\276`\352\361=+p\202\2743\242[<\373H\035\276\201\260\344\275\013\017\253>\343\260H=\2019D>!\363\030>%\200\t>\217<(\275]\231c\276\211\373\223>\273\232\252=*+\"\276\316\251\206\276H\326,>p\3174\276\252\243\233=\225t\216\276\211a7=)M%=\301\350\247=I\250\205\275\3374P\276\231\343\204>\374\355\t>Ov\260=\275\236\367=m\367\366\275\256Fw\276\033\361\235>ua\201\276\364B\215>\202\033\021\275\2140\214;\367\213\257\275Ca\236\275\216\263\243>\224\214\327<\210LW\275\177\224\031\276\034m\335=Y{r\274-\220\220>t\264&>\355a\220\275|\3248\276\005\230i\275Q/t\275\305\215\204>\030\254e\275\207\373\206>\311\261\223\275:EL\276\366ei>$+Y>8\215\374\276xP8\276/\250\322\271\310\345\215=\367\034<\276\375\204s\276\227\364\304\273\202I\222\274\211\215;=0x(\276\211Mw=p\307\027>\221~\374\273\256\210<\275\276\372l\276\"\267\201\275\355\220\321=\305\303t=\3043h\276\364\3760>\006\251G>a\314\252\276=\300\311=8\267\356\274\264\301\004\275O\201w\276\316\345\026\276RM\364\273\333~\263\275\252{\314=\302\271\000\275\274\261\312=\032]\244\276V\360\302>\000\\\261<\364Np>\215\014)\274{\344\211\275J\363\312\276m\302\002\276H\324\005>\374\252r<\211\034}=\307\236\006>6\034=\275\177.\024\276\245\222z>\351\034\027\276\335\205\025\276\227\274\236>\226\311\r\276j\365\003>\376\362\271\273\022#S\276\316\033\317\274\266`~>MF\275>\032\315E>\033,\353\274\204\200\305=\220M\200>\023Z<\273\366\240\035\274\260}\335\275\005d);{\314\214\276\212\351\026\276a:n>\227\203\257\275j\302\247>\024\243\267=P\331Q>y\261\017\276&W\356\275\223\227 >VAc\2760\014*<\201`>\276\254\320\265=\277tG>w\267>\276\2640{>\375b\034\276j\357m\276\375\375Z\276(\310\t\276\371f^<w\250\360=\365\326\006\276\315J\304=\013 L\275h\370\226\276\251Q\007<&\024)>\275#\032\276))v>-\020\r>H\270\311\274\374\240Q\276c\310\336\2751\262\216<ts5\275\364c^\276bU\001\275\264\323\201>\305\3053\275<B#>\250^\260\275\305\025\222\276L\361\201\275\261\274x>\2554\223\274\277\214\206\2753\016\024>}\207\214<\025\232\234\276\031\034@>\034\025\254>#\206\250>U\370{>\272-\334\275\362\0074\275\307\363\t\276\002\363+\276tN\026\275\207n\010>\335z\017\275\221\364\024\276\346\262\022\276!I\021>%\270\242>i(\r\276/\002\264=0\316\212=\347\r1>\271\247j\275V\317\307>\014\360\256\276\226\320\305\276\342\250\031=\035\246\367\275\264\275\273\275_\255\233<J1z=\024\221\233\276\344_\240\276\232\311\253\275c\354\323\275a\3536=\016s\000\276\202$\302\276`\034\372=\333\364\230>\204\225\317\275l\327\303\276\247b\037=I\237\"\276\337\027?=F\217i<\034\337\215>\034s\030>!\354\300\275\225+\305=\035>\024\276\364\202\230\274\177a\221\276d\276P>g\337\245\274\333S:<\246[\215=\025\261\037>Nu\304\276\025\277\302=O\310>\276\200\261}\276\300-D\274\264\322R>\341\000Z=\022&\321\275\023\r\316\272\367a\005\275){#>\033\214b\274\301\273G=\361\206z>\034\033\244\276\241\355\231=\356\315X\276{\302p>@:\237\276\262>2>\242\270\312\274W\034^=<\n\201\276\331\205\351\275\336\327k>~ \317=\335\343\373=\237\232\223>\316g\201\275\025\000K\276\004\370\220\276\002\266\351\275\013\004\265=\016\360\006\276\345\373\213>S\256\375=\311\316\257\276\233%\205>\026\237^\2762\3369>6\357\020\276K\'i\276Y\260\354\276\365\217:<\006\361W>\307\225\002>\201\240\275=\350\366\032>\244h\365<\311\250<>\200\032\235\275H\177\333\276`\030\235\276\305\356\313\275\347\327\317\274,\323\340=;\205-\276\313=\210=\355\245\250\275\231J\315\274l\202!<4*\215\276j)\323=\027j\234\274\343\027}\274\021\300t\2744<7\276\251\300Q<\021\272@\276\206\200$\273\n\325\272\273rDk\27530\033\276\316\365!\276w\221\325>\322b\232\276\365\024{\275\265=t\274a5,;\201$\263=\223\347E>g\244\210>\ro\205\275P*\322\275*\200\375=\361\315\337=\004\264\217>\265\231\312=\352\030\252\275\336\023L\275\211\213\321= \277\316=\276\375\207>\033\344\250>dc/\275\363\036\274=R\251\233>\311\025\200>8!\263=\025\276\251>\212\301i;3\236\236>\250mx<\235<\375=\264\223\361=\210N\033\276*\026H==P\271>K\220\235\275H:\017=\026\033\377\274\240O$\273\365IP>\217\020\324\275\201hj\276\030p`>\360\033\010>\033\312F=BR$\276l]1\276\034\222^\276\316\3763=\316]\326\275\267!\251=\2739)=kD/>\335\336X=\374\226^>\205`\267=J\251\200<\211(\376\274\374\353X\275\304\330\023>\007\344\026=\234\351)=\254\371\200>\312\274\265\276\306\212\211=\246\314\265=\035\356\016\276A\246\273\275,\317\014=KZ@>Y\024\016>_E\265>4}F\276\374\203\010>\013H\023\276^\333c\276\223\247\300>\313\374l\276(\266\205>3\010\263>\334\360*\276\302\006(>\324\236N\276\324\276\376\275\"\306]<8\334\243\276\010\372w>\250\306\271<\366\335G=\307\266&<\032P\021=O\010\024\277b\237\315<\305\271H>n\035}\275I\020%=\t\310\254=\037\002\003>\364\226\r\276\320\361\320=\272l&\276\277\317\n\276\262(a<\'Q\221\275\027\367\261\276R?\010=\214\3054=8\336\331=\372\370\256>]\263\036>1\371Q>\014X\256=6>\344\275z/X\276.\334Z=\345\300\013?\217\032\226\276g\177\337\275#\210A>!#\025>F\r\250\275P\373{\274\325\271\314\276R\273?>\005\320\020=Hs\370\275@\354!>\272\332\005\276y\250\365=\276\356\261\275%\025\"\276O^\265\276\026\213:>\336~t>\225o\264\276g\353\331\275\243\177\\\275\024P\276\275\324\2422=\226\330\276\274\'H\344=\354\226=\276gFu\276+b\333\275\253(\264>\036p\'\276\310f\200>\275\221y>\\\035\267\275W\0101>d#\343\2756\311U>.@P\276\215\366@=&\325Y\275\034B\006=\014\020m:&I1\275N\253\274\276\371z\000\276=\230\363=\250oO\276\343\027J>\033\231\322=\036\034\024\2756\354\233\275\364bP<|n\300>z\251\240\274\336\277*\276\363t9\275\257\272l\2764\302\375=\367\226 \276\2522\033\276\244\371G\276\251>$\276\037\365$>\312\256\334\275\341*\225>\330a\270\275\004\3655<\274\311\377\274\262\036/\276r0\254\276\230\367t\276\360\217\236=\233[\270=\264\305\244\274v\315\327=\230,\235\274\231\360d>\321\007\306\275\0269\366\275\003\211\233>1\334\365\274\204\204\263=\033\027D=\264\251y=]\007_\276\273<\361=\3537E=3\275\014>f\226r\275\307\3335=\031\232@\276\221\374\307=L\355\376\275\262\265\035=\034F}\276\351\375-\276\010\0078>\376\304\362\275\013\353?\2767\211)>\362A\215>\260I1>:\233H\275+=\335\274\235\001I\273t;z>\265y\221\276N_\016\276\265\202\024\276\252\343m\276\262\361m\276\367\210\313\275\205[\270\274s{\006\276\t\340I>Ba\300>\264\017\341\275\256*\272\275\253\177\251\275\026\tx=m\276\364=N\270\220=\305\311\254><N\212\276\363\371D\276bto<\2727n=\345\251Y\276\240\326\035>\245\025\231>\24181\276\274v\034>u\022\202\276\032\3714\275\"\356\265\275\305\311Z\274\027tP\276\273\003\216>\261\216\345\276\263@\212>\221\303L>\232\204\336\273\016\317\032>X\304\225=\354\212%>y\370`=w\037 =\300b\330;\340\017{\276\225Mh>\221\250\010>iY >\255\n\215\275\330\255\026\276[\235\302\275\203\321\265\276\333\334_\276\231\244\013\277\203\267E\274\330\2609=U\201\213\273\0140\226=\236\312^;\023v\315=D\370\010\277\"\227\214<\3162\223>\316e\034>\000\301\232\274\326\014p> eZ>\034\304\037>\270\337`\276\033\202B;F\262;\276)\300\207=xSF>E\nd\275\273\267E\276\274\241(\276M\"\237=\036\244\216\276 <\217\276\306\205X\276\262\353&>\342%\335:\002\\\t\2755\276\254=6\226\213\276;f\252\275\314\324\311=2)\225=E\372g\275\r\256*<\213\346\244\275\203\225\272=\272\301%\275z\351\207\2754\272\310\275\224\324B\276\030\300^=\275iO\276W{\304=\304i\221\276NA\270=\241\335L\276LJ\020>\301_\235\274\302y\365;\356\344\252\275\220\250\221=\266\2359\275\323\006\001>\026\024\272=\227\002/=\341\206w\276]\230r\276\026-\005>\357\246\017\275\374\0069\276\322\364\222\276\375L\233\275\313\344u<\262\323Z>\2073\320:\t\354v:\316\025\305<\266\370\257\275A)\345\275\203v\023>\251\260D>\027\365\325;c\361E\276\336-\226\276\303$\213\276\321~\314=\211\177\005>\373{\262>\346\035\272<\262C\'\275\207\002Y>\020d\376\274.V\203\276\227=U>\014\345k=\t\316\037\276Ic\374\275{B\227>\014\357\317\275O\205F>\200wl>\024\331\204\2764\310\315\275\306[\220=\022\206\251>\025\333\212\275\004\243\320\274r\242\030\276\025J\224=\r!A>A\360\013\276y\223\363\273\221;\316=\252>\021<5\020\200\275\030\321\216\276\311r\335=j\376\251=,\031/\275\271e\373\275\362\263\257\276\0045u;C\213\000\277K$\034\276\344PP\276\200\t\013>\377\017\223=\236\234v=vX\222>0\233\322=\260\006%\273\373\271\220\275\300\377\220\273k\235\247=I\305!\276\"\371\232\276+ \271\275O\260\276;\235R\352=\r\373\325\275b\273\345<\'9\031>\335\210\010=\002\033\024\275\250\261 =7\345\231=\307\000\033>\002\"2\270\362\276f>\253\202?=7}\232>?\306\362=\317\211]\272\211 \252\276\303\253\243\275\277m8=\337:c\275\241\300=\276My\227\275\250\214\013>\317vX> \321\020>^.\334\273?\370Q\276n\211\032>\343\253\014>Y3\224\276\220\210N\276\205\037\r?+\221\333\274\246\245~>\357\263\212\275\332\251Y\2756c\\\276\016\247\274\276\317jf>\366\001\231\276\237\327[>\211\307\236\276\302\362_\276\256\246\326\275N\376%\276\215\352\213\276^\363#>\2530l\275\335\241\344\275\210\035\211\275\312\274->\302x\233>\231%x=\205s\267;7\373\212=e\276c\276\312X\205<\222\240\313\274{\264o\276hqk>\335\211\364\274h\217/\276{\257\201=] \021>\204\3145\2767\225\032\276\277G1\276>\005t=\263\212\311\275\201\002\035\276+\361*\276\030\321;\276V}\035>\360/\243\276\323Os>\022\232\327\274:\022\030=\017_%=\332\245a\276\364_/=\215\322\304\276\017\200B\2741\246\232\276k\223\271\276\232\330\260\274\255\033h>\034a*>\373\263\220>\244\333\036>\320\371\203\275Z:U=\013\232a\276U\027\366\275\002\246\202\275N([>\007\216\350\2762\262h\275\256\202\322\275aL\332<d\001\337\275\301r\260=\265\314\340\275\230~\217=*\372\206\276K\314\214\276b\267\230=\342\263\260\275y\350\354=Y\237I\275\237 \211\275\207z_\275@\324Z\276\'\2467>F\230\305=Gi\365\275*|\207=C+\313=\220\240\240>\252\020\233>\261 \032\276u\373\016>\312\200\224>KnC>%\257\264=\030d\274=\354\335\022\276u_\005>\336\243\256\275\020\025\022>\016Z\213=\205T\337\275\257\322n\276\214P\342=\264\362G=--\247<\n\023>\274x2O>\252\252\307=\214\203X\276F\023l\275\215\0324\276d\315\034>\030#E\276a\203\352\275\271\205\355\275F\273\267\275\232<3\276\'\2272\276\233\215\255=X\304\203\276\036\332R=<~}\276\007\225\325=\302\232\272\276\031\310\310=\313\376^<\010\365\204>\354Ts>\177\302\014\275*=\243<\002\242\241=\320\r\362\274\'\217\333<\343S\231\276\'\310V>\224\252\204\276\027r\251\275\364\264\305\273w\335\370\276E#\210\274\031\203\205\273\036\337\272\275\326I\207=\330\221\331=\004T\232\274\034\306F\273\224\341\017=\355\367\350<\224e\304\275\320L4\276\264\236\004\276\241]\t=\246\340\227\276\200s\235=\334\214f\276\367\024\324\274\263r\210=\305\372\323<\'\234\273\2769\351\256=\265\231%\276\334\262}>\267\352\326=\263\273;\275\374\354><\201\177\374\275\320!y\2752z\002>w\247\212=Y>|>\346$r<o\326A=\233\3503>d\303\337\275\346\252\273\275\003\025\232\274\326\2641\276\237\227\244=\307\207$\275_\030\000\277\320?\002>L.\226\276l\213\216\276_\202\036\276\001\n\276\275\352cs\276\370\254c\274\336\273\306\275\"]\026<T\006q=\005\355\265>\256\317@\276\314\\\355\275\234\377+>\306A\234=\250e1>\232\033@;\262\325#=T\367\200>\005L\213<9R\226=7`\014\276P\212\225=&\356\243= s\033\276\304\367%\276p\236q>\242Aw\275\227\345~<\304\016H\276y\2140\276k\224H>\260~d\276\022}\272\276\247\306\035=u\301\231=\213g\234>0\2530\275\234;\274\276h\351\214>\254\365\315\276\330+G<A~\305=\353Q\202=\321\302\335>t\362v=\371Y5=\221p\314>?\247\373<lL\341=\270\256:\2766&\222\275~X\216\276\332\240\027\276\350\352d>\024\312\365=G\005\253>\304\274\345\275?\000n\276:\310\205\275:\321\262=V\273\223\272L\004;>b5\211\276s\213\203\2769&\220<p\021\037=K\212\305=\211J\250=e\217\223>\365\240\016>\355%\207>\270\207\233>\220;\230>\237E\n\276\032\332\327<\003\221\270=\235:\372=\322\242A>\002@\204\275\344q\r\277G\243\203>%\237\235\276\343m\204\275\344<\231>\341\n\226\276\033l|\273\256\334\020>\256U\325\273y\207V\276\214\304\272>\003\036\t>;\234j=\324\310\331=\352\303#\276\23737\275\267\234\324\276\003\331\013=\374\r\363=h*a\276 \371Z\276#i\233\275\366p\212\276\022\353\236\275\225\206\006<\262\006\024\276\204l\341=+*\374=\372\207\212\276j\356\177\275\202\276<\276\272\2531>\302\317\216\276:\032_\276\276\"\355=\032w\001\276\361M\002>\310\330\242\275~\2177\276Z\202\005\276\330\2448=\025\202\256\275\346\320\021>_t\n>\325|\245=\211\375\220\275$5\252>\n\260n\276`m;\276;f\316=\311\214\004\275|b\264>\360\330\036=R\000\307\273\300\207j\275D\277\024\276\256\006\212=\305w\246=%X\275>W\251\021\276\343\265j>|\232|=\014v\265\275\273\247\330\276\262\242\274\275H\t\031\276:\n\255\2760\374==\305]\247\276\2167\245<\274\375\205>\341\262k>\200\340\027>\250\315\276\275\234{+=\241\214\323=[\341\037>t\231H\276--h<\264t\234=\013\310\004\276\024\320\217\276x\"\243<]W\027>a\201\363<0\301<=\236\002\356<\262\374K\275\255\336\017>\035\022\277\275\321-<\276\031\233?>\236\324[=,\305\212>\361\3671\275\321\323\007>X\323\253>U\256H>\266\333\356\276V\311/>\026\273\"\276\372\311\250>\256\037U\276\377H\326\276\265\341\333\275\264\227P>\2138\006<m\030P\275\243`\203\276\025\036\203=\3105\326=]p\336\274\200\031Z\276\257\215\206=\020T\331=Cv9\276D\353y=\351\2140\276e#\253\276\230\370e>\211\356\305<\265\272u\275W)\006\276\251\236\337=\232<\231\275\220\345\375=u\207q>ol\360\2749J&=\233X\301\275\023Y\023<<{\212\276x\264W\276\016M$\276(=W<\020D#>|:\250\275\307\027C\275S\3377\276\374\022$>\252\003\224>MF3\276\324\005R\276.j\310\275\305\311\241\274\212\260\003>n\215\230>\036&\260\275\010]\217\275\342,\217\274|\224\227\276\331\375\260\2756\341\022=\222\226.;\253\326\022\275\322C\014\276\317\367\220\274\370V\212=R\204\004\275iK\365\275\256\207\033=\ri\236\2765\305\237\276}\262\321=\n\346\326=\2724R\274I\276\306\275\274\025\024>p\216\322=\271X$>\244\005\035>i\255\375<\271\247\212>5\376\032>\346gZ>\375\021\270>:\374\254\275\234S\000=\300\334\321=\223\304\005\276(\225d=\200}\306\275\223\340\356=\236a\001\274\275%1<l\226\321=\263,;>\314tl\276\222\317\036<1L\264\275I\346\215>jr\024\275x\365\224<"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_1"
      input: "oldpi/model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/add"
      op: "Add"
      input: "oldpi/model/vf_fc1/MatMul"
      input: "oldpi/model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_3"
      op: "Tanh"
      input: "oldpi/model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc2/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\253\215\033>Df\372>!N\334>\225]\022\276\274O3\276j\270\366\274\326\005.\275\335Z\213=\2207\251=\226\375\224:\231\022\226>\315\367P=.\227\367=\335\312j=\244\346\216>\377\225\266\276\344\357\270\276\323\262~>\031\323o>\327z\222\275d\376\213\275,j\002\276s\234X\276;\333\303\275\026\032Y>_\235\013\276Q\t^>\245r\320=\001\347|\2745m\302;\340\034}\275\211f\254\275G\"\272\275\221Di\276\241uf\276\200Q\177>\357\355\275\275\031}\204\275(L]\276`\020\276\275)\300r\276uM\352<#pn\275\240\017_<\307\234\241>\362\263\316=\374\306\357\274\376=s\275\263T\r>\023\215\206\274\005<N\276\356M\217\275\246\271\207;%E\003>3W\204=\301P8\276\233l\261=\rXg\276\016\240j=\333^(\274:\226\017=\004\372\225\276a);\276\350J\314\274\274M\007\276Z\273\333\2755\204\247\275\202\321F\274\316\r\020\2761\n\247>\316\013z;\272\365d>\375:\245\272\341\324+>0\270\222=9\325|=\250&;>x\002\265\275\373\266\030\276d^P>\253\357\177\274+\220\001\275\275b\232>\330\266q\275\020\215a>\305\035\207=>\312\323<\014F\025\276[\256H>\326D\310<sD]=\210\306?=\330q\216\276\3658\271>{\240\266\276j\222\t\276Y\377\\=\350\303\261\275\262\357\360\274\366\021\201>\272\274\000>`-n\276 \n>\275\265}f\275%m\177=\014\003\020>/\'H=\001t\327=\256\315\030>\200\002G\276\341\305\363\276\247\373\304:\353\310\273\276\252\260\332\275\024{x>\255g\232=\246\003\344\275!\024\017:\223\033$>t\272\356=8\014H>\221\320:>\314\n`\276v\205\303=\022\301\263\276\326\t\205=\224M\215\276{\333\311=\037\373\200\275\200\367\200\276\'\005\010\276\300\230\216>V\301\200\276\340&\371=\231\005\021\276\350\316\211>kqO\276\241-\320\276\211ee<\320\260\353<,\0001>Io\224=\252\034\304<F\r\005>A\037\254\274\311\032\004> \350\215>\014\332x\276\275\213\021> *&\276\2703\241=\037\246\373=\t\354S>\2444+<\"\341\344>h\303\325=\261\271\344\274\367\233\254\275\237\301w\275`E\235>\374\320\024>\321\230\n\275=\267y>\310K\205>\314~\204>M\241\366=8\324\026>#\326q\275\177\016&\276\354\203\037\276\221B7\274ei\277\276\240\366.\275%\223\243>JA\014>*\331\313=D\017&>\231X\251=S\343[\275V\367\214\274\246\361&\276\310\037{\275\312Nw\275\262)%\275;\241\306\275\020\322\232\275\253a\177>\304\033J>\342&\004<\343\236?>\206\363\276=\332\303\375=\307\263\031>\236)3>\036\210#\275\331\362\362\275T\236\230\276Q0\317:\004\277q<< \016>\240\224_=\3435\023>\343\014\255\275\020\010\024\276\002\207\361\275nv\354=X\3772\275uu0<\301\206\333\275\t\340s\276Va\372\275z?>>\270\262\211>W\204\271\276\276<\034>0\277\024\276-\3760\276\316\252\203\273#\215(>z\217?\275\374\265\352\275\267\273;<\323tv\276.\327\005>\236k\221\276h\377p\275\353\226\376<\336;6\275\322\177>=\032;\262>@\376\274\276\003&\243=\213\316\272=~\233\216\274r$^>#\373t=\372D\257\275\205\260~<\\\355\337\275o\244\270\275\256\372\004>0\035\033\276\274\314\031>-\347d>\226\r\266=\201\344Y>~s\360\276\232\350\366=\342\261\000\276\273\250\320\275\244\227.\276P\314[>W\375\">E\324\350\274\361:<>:\360\363>d\267\035\276m\257\316\275\3745\277<1X\020>\204M7\276D\241\353\276\337\rw>\311\250\305\273\270\330\264>\373/\366=,\317.<\334\027\206>#Y\372\273\003\340\225>\013 \311\275\270\207z>g\030*\276yU}>k\3217\276jD\226\276\367\374\241=\207hi\276\363\224\332\275\177\376\306>\250Z\002=yvg>\004D\202\273$\"\200\274\363\013\306<\004\001<\276\365\231\005\276 \"\216\275\250\354\372\275\300\350C=W\325\226>\370\r~\275\177:\202\276\333M\010\274\315\250\275<\034\365\235\276k\346\272\273^\333\035\276\265q\252>\321\204|\274\2020\021>B\2109=\303\356 \276\342\203V\276\215\367\024= \257\274\275j\034\250\275\225\337\025\274\365\272\332\275\240\253\013\274;q\016>\226\247\304>d\300V=\177\246\005<;\t\003\276\036e\314\275\365\200S\275 \341\304\275\266\365<\2753\255\337\275%1u>\332\004d=\210\375_\274\n\362D\276\036\262-\276(\323W\273m\325\'=s\355I=\236h\306\275\254\025H</\214\352\274\2722\233>z\000\272=\367\356!\276A\311S>\251DI\272\027\255\274=\003V\000>Y\221\243\275\237\025\251<\036l\206\275\031\313i\275k\352==\177\250O\276\265D\251>\306\212\323>\200\023\r\276N\260J=\027\010\303\276\375\242\307\276\2437\350=\010\333\370=\277kF\276\252\004b>\310\364\243=\245\230\233\276\362.\224>@\363a=A`\251\275\206\256\275\275\257\205\227=\255\351\326\275\036\007\353\273N$K\273\033?\302>\254\223\026\276\016q\311=\256<@=\206v\234=T\305\237>\201\347j=\310\267\253=K\\V>\304\225\206\276\257))\275\271.\"\276\217\027\332<\341\261.=e\034\313\275\365{\202\276\314Us\276\027\321\206>\321n\350\275n<9>1AV>\344\227%>9\245\201\275\"\033}>\307\t\233\275-y\235>#\277\210=]\234m=|\037#\276\356\363\305\274K\2149\276J\247p\275\333fw>\367_|>\324.\217<\230\247\345\276{R\240\276Y[\237<\356k\360\275\230=\250\275\324\261i>\255w\216<\230N\007\276-.U>X8\373\276\227YL\276\2229Q\276/\177+>\357%8\276\226:\245\275\027\t\033>\023=\262>\332<\006\275\207\304\222<\274\303t>e\352N\276YM\030=J?>\276S/f\275 2K\276\227s\242\275%\025\207=\324\361\330<q\377\360\274v\005\217\2766\221\324\275\323\301\270;\317l\000\276fy5\276Q)\325\275:x9\276\r\214 =\037\362\177\275\035\214r\275/>\177\275\030>\030\276pI~>\372\215\234=\237t\304\275}\260o\275kw\243\276\264\233\316=!\324\234\275\361R\234\275\226\2306=:W\341=%3\'\276N\007<>\371P\366=\256\210\325=\244\323;<\337y\220>tNL=\2606\243>\240\030]\276\237\266\246>\245:\204<s\316\273\2752\202\003> \327,\276\344v\256\275}z\266=\024\202_\276\240\026\022\276DDt=9\217\206\275.gy<\032\377\240\276\014=\236>fUE\274\271\355F>\235P\224\276\t!\227>~\233m>\'\271d>\220/\210>Es\352=\010\272\016\2767\267\220>\376\267\267\276#\020k\276\253h\353\275\214\262\202;\242L\222>\331 \016>H\246\254\275\335\342\250=\016\247\224\275\235x\307\274\241C\246\273m\221%\276\212\n\303\275\377\256\312\273\334\304@>G%\030>\321\034\353=$\017\321\275V\252\317\275\215\270\016>\003\202:\276\217\244\024\276~\215\315\274\177\357\272\273\255\274\251>\367\000\344=\272\316\200\276\023\355\341\275u\255\365\275IOl=\334f)>\250\364\352=\234\276\222>\"?$\276\223t,>\020Hi\276\021\374?>\3511\345=e\370\023\273\203\3460>L\341W>d\346\"\276RAw\276!\026\033>\207\236t>\270\032\265<\020T\033>\253\315\212\275\265\250\205>\325\021\255=)KJ>\016%O\275\357\3237>\310\316\250\275\311q\232\274E\004\201\274\224\213\252\274w\334\224=\306\271\266\275\'m\261>\216U\253\276y\263j=\271\227F\276\336e\223<\020\357\301\275y\211\240>2k\007;^\251/\275\314\002\014\276\325a\344>l#m=\357C\013>\0231\023\276#\215\377\273\025N\"\275\202(5>P\332\335=\r>\240\275\267V1\276\2430X\275\257\335\034=\221\253K\2751C:\276\016?e\276\262\211\205>Q\355\341>\333\234n=Z{z>\366$%>\246c\234=l\203\236\276\330v\323\274\321\260\003>\373%\270\275\342\246\226>\323\345\013\275\310+\213=c\217\206=\224\'\006\276G\370\203\275\t\275]=\224\364\021\276\227o\313>\236\310\272\274\207\330\020>\243\020(>\2222\002?\273\364\350\275>\242/>\3507\305\275\037\373\355=\014\327\375=\201\003%>\022\376\236\276\n{M>*bI>C\310z>\002\246O\276\317>\216=(W\267=\253\255\255\276\004\330\037\276\t\177\035>F\371\310\275\021X\267:\353\017v=\271\r\276;0\3079\276\336\311\211\275\260\010\256=\261\312\343<\025\334p\274W\343\013\276y\003\362=\377\360n\276\277-;\275\236-e=T\t\031>K_\026\274\016\301\305=_\244\325\275/\220\020\2753&c\276\301\247\214> \240\362\275\"\027\002\276\324\375\345\275\274\363{\275\005\341\317\276\0236j\276\275\354o<A\014\344>A\260a;\276A\270\275C\005 >w\331!<\"M\352=\217\030\234\275{\211\016\275\016\013@>\323H\027\276\260(~<\037`\254\275\347\346U\275\005\311\n\276\336\\\320\275\034\0100>\304\246\275>?\243\004\276\223b\r?P\3209\276,dr\274\247l~<\254:\225<\236\340&>\005\314\017<\033V\317:]\250O\275\252\372\363=\027J\246>\tJ\320<\032D\254\275m\210\213\275\003\033\005\276\354\372\r\276\245\022l\275\250\034\r\276\363j\010\276\314\217\361\274\366s\020>\235\263\353=JY\367>\355G\014\275\024\214x\276\002%/=\333\275%>t\310L>\306h\337=6C\205>\363\024%>\323u\207\275\262>y\275\231\357\236>>\033N\276\352\022}\275\240\251\301=<\203\214>\216fi=8z\331=\375\352\033>6\032\234>\310\312\220\276\205l\000\276\017\334\217>\021}\003>\341\302h>E\304\245\275;\201.\275\366(\376\275\023l\'\274\207\213\236=\034\373\310\276\302xc\274\356Y\361=\273\330\026\275\341\230\372\275\354\356\007\276\030\264V\273 \243\323<\311\377\252>\376K\\\275\302\243\202\275-\201i\275\276\0330<\314k\221\276\030\033\215>>\305\260\275\253\017(\274LYc\276!t\215\274x\031\202\275\335\023C\276N\344\235<\020R\241>3;\370=\2172\244=\024\034\202<\232<\357\275\222Uh\275y\332\'\276\265MG>uX\\=\210\210\254>|\364\226:@\254\320\276P k\276\032\014\026\276N\026\006\276\267^\241\275\273xc\276=\353\320\276\034\310\271=\210\r\254=\004\264\213\275\244.\371:\220H\210\276Z\307\250=t\254\226\276F\266\272;~hw>\0019\313=\322 \022\276-a4\276\365\233\t>!\271L\276\014\204\241\275^\342I=\223B\257=\343;\332=#\371\034>D\035\035>\276\017{=\r\\\326>\377I\240\275\300d\020\275\276n\270=\331\244W\276W\000\223>\240\220\366=\352\375\275=[\270i\274\\>\222\275\346\275U>\030\225~>\367\256\035\275\177\351c\276c\'\005=J\264\320=\222tI\275\326\0027\276\\H\315\275\\\274\027\276\334Y\276\274\343\3327\275n\227B>\265\237\210\276\006}u\274&\207(>f\260b=\330\034/\276\376/y=.\303\007\276o\346\244=8\3456=\335\341\311=\205\030\234=\320\302\212\276j\221\271>\027\037\036>D\020\n\276\365\315T>\214\316\354<\326e\177\276\230\177\026=,\3565<=R\030\275\016\034\260;L\335\247=\026\352s\276\372HF>\221\376\232>H\332\312=\020\275\300\276\257^\221=\300\226\237=\324\260]\273\261\371\306>\211\370\016>\370|\206\276\026\253n\276 Z\223\275\345^\027\276u\233\206\276$\253\345\276R6H>\300|^\275\356P\035>\253\220\t\276\257DM=\360\244x>\347\271.<\241\235\266>t\336\314\275\314\243\235=\000\276\313=\0276\000>\005\036\220\276\3240\335\275\355\253\206=d\n\327\275\343\362O>%H\005\276Z\347\031\276\013\032\327\274G\034Y\275u\341\014>\'\024\205\273\221\2175\276H\262\233<A\330\207\274H\326\004=\301\336\314<\235\'\325>\331\374\"\275\234\361%=\352P\326>\235\256j\276\013|f\276\337\371\221>\244ZG\275#\022\331=ZQ\222\275\330Qi\276|R0>\227\361\'>}\2004=\360\240\177>\366\364\270>O@`\276\\\026\017>\3523I\275^\3519\276y\300\262\276\225\200\251\275\310\004#\276+6\375\273)\215\265<\033\203\024\2767\334\255=$\362\347=\256@\236\275\"\237\r>8\3753>\272@_=\214\305\"\276\213l\004>r5\325\2754\217\325\276\031\370\362\275\n|z>\263\013\227<A\247\341\275c\355-<\016\\\215\276\226M\205>\307\"`\276\357\213_=\322\227\253>\330\344*>\rT\254\274\027\336S=tE\245\276$9M\275\030\214\233\276\333AP>\311b\234\276\312\363O<\345\355\324=A1\266=3\022\243<\233\266#>\352\360\322=-\200\361\275k\342H\276\210f\314\275wf:=\305\337a=\322\202\"\275\242{]\276y9\321\273\361\364\246\274\334\347\333\273\206Z\022\276C@\354\274\345\260\005\276Q\360\331\2758;\250>\023T\323\275\0109{=\r\361\236\276GxZ>2\267%\275x\030\244\275\336q\t\276:m\251\275\016!\377=\307\242j\274\025~\210={\342D>W]^\276\377^W=\036\340\210\276S\272\254=\303\374S\276\204\323\250=O\363\327>\350eg=m\231\311=\306z\256<I\372\325>\377\262\033\276\276\211Y=\313\221\203>V\260\207=\274m->u \311\275(\377\212>\314\322K\275{a\270\276\021\242\306=\223\372\232=\256\333\271>\234\372\303=\'\203\003>\213\3755=\331EB<\205\353\330=F\371\307\273\250\225\317\276{r\036>\272>k>\371@\200=j\303\'\273\215\235\261>\365\007\235>\316\230\355\275\364\242s\275/\"\327=\277\217\312;-\227X\2751\032k\274\032\274^\276\314i\r>U\223\214>\200\375\214=Z\345\317<\334^\357=e\236\351=S\237\037>\310d\013>\"\353\254\275oB\345\275\236_\335\274wz\335\275\242\003\250=\342\343\020\277\024\376D\276d\231`>\245@\252\275\341\330\033\276\375j\376<\275\030\033>S;\272<i\351\t>\307\2513>BH\033=Q1\226>\014\347g=]\037\275\273\334\357\025>mk\002=x\226\233=\370\345B>\367\272\014=$\242c\276\350\370/=\376\"\214\275\236\032\215\276A`\207\276c\245:\276\223lA>\213\222\t\277\317\211\363\275\314\276\031\276F\363\016\276\374\220\237\276\224wh>z\335C\276\331\037U\276\354(\226\276\223Y\311=f\242\220;EO\272<\005\333\375=\301\376|\276\323\342x=<\376O=\t\304_\276\361 p\276\224\224]\2757\235\312=\227F\252<b\216i\276^\343<\276\237:Z>9\341\277\275\007a\325\275\260;\255>\0270&\276>t\342\275\374PU=8U\035=8}\302<z\204\235=\227xg>\372w\227\275\033;7\276\037\256,\276)\357\025\276\030Ji\2764\321\304<\217M\035>\031\270\277\274r\335\"<\203\273\226=\310\263\311>\330\n?=\234\206\336>~\026\205\275\305\221\202\272\010Cx<B\371\256\275\273i?=\'\301\365\274\232\253\346=Zu\336\275\220S7=\366\003\220\274\306A\017>\353J+\276j\366\022\275\233\252\337=Q\201\005<\031\277\316\275[\300\275\276n\3414=\207wa\276a\217j\276\364\351\200\2768\"\312\276\251i\221=\3370\242\275\316\205\001\2756\373\017;\006\315\265=z=>\276k\276Y\275\346\234J=d\314\205=$\316\310\275\245\213\233\274\0368#\276\225\222/\276p\243L<\252\265\251\276\304\244\247\276\321\215\013?[\225Z=B6&=w\263\024\276\264\337\205<\225\214\245=\033\366\357\275\216!#>\226#\005\276\344\022\354<f\t\265<\240\350-\276/\275\223\275\301\375N\276S\252\266\275\247q\216<\007\355\246>T\367\264=T\257\250=\243m\214\275\312\213\200>\221\237\215\275\005\001.\276\311FD>\321\324\212\276\353\246\022\276\224V\007\276\014\330\270=\272ue>\177\026\330\2757W\303=b\323\203\276\246\343\020\275\215\314%<@i\024>58_>\256\006\344\276R\021&=\212\220\003><c\'\276\233\316)\276#7\230=\240\032\003;\314\035d<\036\325\264\275;*\007\275\222-\354\275\253\025\365\275\271Z\304\276\303\\\364\2742\275\234>$|\212>N\364\003>%N\316\274vT\370\274\212~\216\276\244\014\245=\331-v=Ss\034>0\367\263\275\225k\211>|\347\240=\232e\250\274\250\016\272>5|\230>\006\024$>\010\334\227\276\014\007Y\276\330\037\324\2767\327\226=\262\236\201\274\355\364E\276\325{\266<\re\007>\251\311\200>l?\225=\226\235\270>\222\352\265=9\016d<\247\222\256=\031\220\230<\362#\303=\\\377\332<\264G\255=\030\272\234=\314\020\310\276\031\305\003=\261\261V>\265@\317=\360\370n=\251\247\035=\360\007.>r\031E\276\222\000\353=\373M?\276\263\2175>\222\006\314=\305\204\337<\337\rK\275\265\000\204>.\272[\275\200t:\276\031\372\033=\017\332\r>\307\232\021>\365\216\226\275\272T\201\276[h\357\275\261i\275\274Z\312\024>\325\006?\276j\242\351\275S\375\324\276\242\315N\276H`>\276\223\002v<L\266\317\276\332\263o\276\324\204\214>\2657\002><\232\375<\255k\004>&\352+\276\037\356\300\274\304.m<\252\224H\274\362\356\034>Z\257&<OC\"\276\301\217w=w\321\266\274\023\304Z\276H^P>r\310\301=%\361\226\276l\036<\275\002\313\203>\2132\302=\2369\323\275\350\364\031\2749\327\213\274b\214\312==|\224\275w5L\275p\207\247\275\257\313\220\275(/\312>\221G\n\276e\353~\275\002\010\177\276\033\177\307\275\005\370\251\275\331\336\257\273\315w\270;E_\247>A\026\274<6x\237\276p\026\026<\341\331i>\246\373\366<\233A\235<=+\211>\006Y\003>\203\351K>\032\360`=\272V?=~G\347=\025\251\376\276P^\205\275\001\262\312=\004\023A>e\230d\275\232\232T\276YmF\276\307\246\201\276\351D\255=-\242\232\276eI\036>T\234\006>\201EA\276\325\235\300>\200\247`=^\376\353=\206/\207<A\305\274\276Jp\177>\270$\213=/ev=\270\270\215=n`\274=\260T\r>\004\320u\276r.\037>\345\004\317\275\014\376v=Q*%\276\027\014\265\276\325<\301\274/\360.>\231\361i>\335Mx\275\235\271\034=\267\0063\275\037\310\236\2748^\210\2767\213d>\253\353\233=\345(~>\352B\035>Gq`\276\230m6\276\330\376\240\276\017\335\237\276Dt\002>\353\241\336\275\314T\026\275\251\001$=\204\253\220<\240\303\207=\206\361\214;\272\303\277\275\220\333\014\276S\304\007\275&g\270\275\020h\212=\315\331\375\274 \342:\276\343>\"\276\253\231\215>\304\375\251\276\337g\022>\2245\232\276\021\315\311\275\212\016\225=\302\207\250=w\277\363\275\216\327E>\340\253\010\275\305\274h\276:,\221<\257I\251\274w\371\236\276\332\016\007>\027w\210\275\236W\367\274\324>0=\202tZ\276-\362\224\275W\314\001\276[F-\276\033m\276\276\007;\237>\"\364{\275\020\3377>\236\314L>\207\204\205=\300v.>+0\006\276R\2740>\304\245\023\276\366|u=\247\364i=\372j\215<\014\351\377\275\247\247\373\275\342\307C\276\004\367\277=\014\005\243\276\374\242\324=\231\253\364=x\245\204\276\322\266\263=\313\3206\275\311\371D>\214 /\276\341xC\275\215\232\263\274\365\034X>\376\222\312\275b\033?\274*\313\315>\033\035\026\276Bu?=P\214\240=\374O\246\275\352\254\245>]2@\275\034\221\005>\315z\266\276b\333\202>\017\024Y>\023\316y\276`&!\276\350g\177\274\225\261\030>5T\023\274\220\210\242\276\213\030t\2767\2329\276\274\275\267\275\220qi>\211\226\323>@\375\\\276{\207\264=?\r\'>\262o\225\275^\361X\274\026\356\036>\340t\246=3\367\262\276\255\301G\275\204EC\275\265\023T=\037r\026\275\237\333Z>TCW>\346 \033\275\007z\220>pQ4\276\004)\327=\317\261\321=j\251\"\276|\264;>\352\342M>\303\201\023=\333A\030=q\235\032>\275\377=>3\020A>a\214\253>[\253\253=\023\033\366\275\2743\225=\253%\033>8l\210\276\270q+>\277[\330=)\025@\275\274@v>\331n\364\273\324fb>\226gq\275F]\237\275\224?\363=(=\205>\3176\253\273\341\335\326\276\277\3214\276\262\272\311\275\266\335]\276\353\211}\276C\010\003<;\214v>\353\217\033\276\211\r\026>\026\312g\276\263:)>\212zB=\322[\237\275\373_\216\276\257k\030>\356!Y=F\355\355=A\026\017<V\333\256>\204\317\254=g\177\242\275\027\264Q=\357\022\344\275\374\344Q=\021q\214>Zu0\276\325?\\\275\276\',=\371\360\\\274\306\372\005\276\242\002\037=WH\245\276\207fL<\360\361C>7\344\270\276\217\006\320\275*\251%\276r\210\243\276[\207\037=[\302\252=P\202\333=\311\350\377=\255\370\275\273\001\031\345=\345\336\224=?\2265>A}\203\276\315\2713>/\375L>\301\332#=\336\226\377=\023s\203>\204%a>\000\353(\276|\257\247\276>z\013\276\364\375a\276\272Y\262>\352\377z>\374$:\276\231{\243=\177U\016>D\225\"=\303\316\236\2753G\340>\310\t\014>M\321R\276\242=\221\275\315\036v>\317\337\251\276\340\350\016>i\201\250\273Er\252\275\220\362;\274\331\304H<\343P:\276\217\021*\275\000B\216\275\361Y\351<\311\304\310\274-B\010>\2765\231\275\261#\010\276APv=< &>b\271\204\2768\022$\276\321d\231>\031@\024\276j\264\206>b\337f=\301\002\244\276\020\263\"\276\376\353\232>>h\024>zP\023\276\307S\035>\346\227\342=p7\016\276\306\314\344=<\371\270>\324\215R\276i\321R\275\313\205v\276\313\236W<\320\246\215>\307D\216\276\317\331\235>\266\337.>#e\225<u\254\025>\\\342\353=k*b=\341%m\276\034\027U>\035\231?=\222r\233\275\276\277/>\357\212\n\276\024\000S>\274\2754\275/\227\371\273\327\237\247=\313D\\>b\273\234>:\271\001\276\024\247\222\275D\361\252;3\376T>P\013i<h\256\274=\001\265\022\276\330+\205=\224m\211>N\215\025\276\264\314S<\276\276\263\276\007\221m>6\212\277\275]\241\232=\2612\274=\367\330\000=.\330b\276\030\260\030<\316E\255=\272\021p=%l4=\266\006\203\276\311P\177\276\250\331\220\275\335\215k>w\335\223>\246\022\230>\245fO>\275\003\215=[\337\235=_\272\347\275\347\232\033\276\037\204(\275\365QC=+=0<\004\334~>\340\001\327<xy\320\276\261O\204=F\205\267=\245\037{\276\006b\241>f\261>>|\347]=a\004;\276\375\351\030>pL\307\276\266)D\276\311Yc\275\313\364\337=\335\361\371\275\312^\277\274\007h\271\275\235\0258\276\357\220l=W\263.=\240[\274\276f+\010>\023\020c=\220\177\250\276w\330\021>\336\336\253=\"\336\201\275\017\326\261=}\225\223>\000\303:=\260\332\0278FSC\276W\332\025=z\340\370\275\037z4\276\212YS\275\2167\"\275[rc9\010\373d\275\340\251S=}\330#\276n<\307=\200*i\2767\345\222\276\217i\335\275\335\340\264>\323?w\274a\222\255:\315\224\322=\013\243\262=+x\204<\325x\013<\256\\\206\275sT\377\274mLK\275u\344\037>`\227\002\276\2061\206=\257\346\355\275\254+\"\276\026Gp=\324;\001\270\304\377\354\275\206f\342;\365n\363=\037\261M\276\302\365\341=;\2579\276t\356E>\210@\363\276\207r2\274\010$\202>\025^\320\275h\357\226>\271\327a\276#\264a>\374\324\215\276\276/\223\276{\275\201>\251\342\333>\243\353==]\243r\2760DG\276\213\335\006\275EI\"=f\230C=\324an\274 \373\202\276\215J\312<\347\023\217=\276R\251<\321b\345\275\254\271\035=\0059#=\271\021\016\275\253/\327\275\020N\325<\222@\354>\343\236\207<\235\365\255\275\254\254\233<T\346\240\276\216r\024>\204\364\235>\227\224\213>\257\212\004\276\340X\226:\322\t^\276\232\354n>`y\210\274\261A\360=oj{>%\311g\276X\320\205\275\340\002w\274\350\215|>\241\033\344\275\265\315\023\2751\004G=49\277\275\357\0239>\337\030\216\276\371\345y\275\001\257\024\276\217\337\002\2765\336(\276\254\233\313=\275\004$\276\230\024L\275\371\223z=\360\014_=\354{J>\372\366\302\275s|C\275\364\360\211\275s\252\031<\256\264\201>\245\301\204>NL\353\274\3745C\276\324\334a\276\326{\211>\010\237\361\275\264\243\273<\304\244}\276^\224J\276\317\246\372\273S\222\352\275\255p\027>\221t\300=\372\004g\276\363:\212\276r\345\355>H7Q>\375\3177\275QU+\274\336\377\006=-KV<\215\353^<\250\376i>\371Su\276i\017g<\367\214\257>fq\271=E\"v>,\013\330<\340\323&\276KW\014\274\370\212\207>\3311\262>b&\214;\225D\322\275\0012\360<\357$\247\276\225\247u\276\337.1>\233\374\'>\r\355\304\276\212Zq>@A\377\275\026\252o=\212y><`\326\324\275\313.\204>k\312\005\276\r\035e\276+\322v\276\300\002\264>r\030\242<\014\317\031>\364\370\032>sd\217=w*~\276=G0>\260,t\275!a\005={I\204<\027P\275\274R\245\240<\355h\016\274[m;>LI\215\276\237\211\246\276\312<\254>\033wo\276\365G\201\275w\010\023=\202\031~=\331\247\201\276\007\001\237\275\370\364\316<@\'\214=\222\215\246<\303\304\241\275W\332k<\236\204\331=r\223\373\275\204B\2728`W\204\276qm\216>]w\203>\250\336\233\274\213\314\026>\264\025\222\275Bu\211\276\3065\263=K\347A\276\232\337\254>=\355\212>(\276\376=5\325\\\276\032\365\337=\274\352\274<\'\260\210\276g\005\367\275\273\371\265=\344\014z\275\260Y/\276\252<t\275\324\272l\276a\377&>\341m\253\274\242\276\202=\322\346{>\001\\\200\276ga\263\276\020 \275=Ho\241<y\241\251=\tk \276\220\215g>\305\345\030>\210\021Z\275\274pg\276{\216\261=l\010.\276\216@P\276\351Jp\276\036\366\222\275Q\341i>\334\262\207\275\236R(>\316?\337=\3116\371\275\235v\210\275\360]\207<\036\356\300>E\025\270;5H\026\276Z\016\023\276\014lR>H\225\372=X\000H\276\201\327\255\276\210:\024\276\364\366\205>\226$\210\276\357`\250>\220lM=\263\310 \276\204\220\260\2754\275\366\275,\252\233;;\260$>\253\324\030\276\322oD;\252\253\242=\'\257\276<f\036\264>\020\364\n\275\232\333\r\276\373\352\373=/\261\205>\t\272\245\2741\\\263=\355JA\274K\206\264=h\036.\274~c\252\275\237G,=\336\256\255\276\347\333C\275\341I\253>~\200k>,\n\037>\304\2073\275\364\277\214:\211\274x=\000(\242:I\317\234=\224\372Y\276)\021\200=\305\243\317\276\372\"\024>t\017g>@G\226\275\202>\233\275\003\025\336\275Y\276\273>\n\021\230\276\007\2515\276]\250\032>\335\222K;\\\245\345=Cg>>\222\332\260\273\306{\004>C\313\222\275\326\256\212\276\323\320\023>U\203\233\274\020\324\207\276\3677r\275\375\254 >1\343\203<\362\336\347>\264\020+:\257\317>=\034\317\022\276YIJ\276\362\277\'>\324\256z\276\376/\006=\201\327==9\277\323=\233Nt>Q\233\247=\315\223\232;\334\376 \275V\210\215\276\261uP>\013\211\237\274\322\005\030>w<-=6\227N\276s4k>\263\271J\276F\021\350\274\211!\215\275\240\232\336\276\335w6\276\211i\310\275\005\357\246\274\215\304\206\276\365\323:\276\366*\340=\232*\227\275U\206\200>\200\374\256\276/\212\212>K@\233>O\252\217\276\251\302\356\275[\377i\2764\354K\276\325S!\276\276\371u>a\n\211=\340\026\355\275u)\254\276\246\230\241\275\2709\340\275lD\360\275V\223\204=\272s\274=\207DM>\363~:\276R\322{\276q\026\257\276\203\216m>\017\001\213=\010?\312\275\2171#\276?E =\003\217\252=\3358a\275\261u\213\276\242\356\'>\367\323\210=\353\224|\275\277\224\030\276t\005a\276C2\026\276\337;\025\275\256\206\023\276\310\360O<j\336\314>I\233R>\001\315\366\275\276X\205><9\030>kn\334;\322\'\377=\345/\333\275\301@\271=\r  \276\231\224\302\274\312\353\n>\323\252\250\276\032\321\371\275D\316\253=x\373\014>S\370\272\275\370\336\225=\305$a\275_\300\332\275\277\023\207=\307\356\027\276%\034\014>\007\217\026\276\024\304t="
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc2/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc2/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc2/w"
      input: "oldpi/model/pi_fc2/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc2/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc2/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc2/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc2/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc2/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc2/b"
      input: "oldpi/model/pi_fc2/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc2/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc2/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc2/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_2"
      input: "oldpi/model/pi_fc2/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc2/add"
      op: "Add"
      input: "oldpi/model/pi_fc2/MatMul"
      input: "oldpi/model/pi_fc2/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_4"
      op: "Tanh"
      input: "oldpi/model/pi_fc2/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc2/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\032\025\306<\331ro=ID\235\275e\336f>l\017\262\275\212:\027>\347`7\274\354\346\220=\303\201e\275z#`\276\t\203\017>\363\253\236>\366\270\242=\'\314\201\276\nZ\225;\2269\267>\0310\362\274\213\327\246=\271\242\206>~%\232\276B\n\240\276^\307[\274\330\035u\275>\177Z>W\310\377<O\211_\275\340\321\312\275R_->\243\2505>h\361\314>\270D6>%\033\035>XkE\275Te\330;1B%\274\225\231\"\275\367$u\276*\202\014>\234\342y>N\323\225\273\340&\033\2764^,\276\355\031\005>v\233\243>D\366_>hO\275<1\'\220>\207{\240\276\264\240\232=\014v\307\275\312k@>\204\306\352<F\0252>\323a\\>\364\314\332\275Q\313\251\275O\201\020\276h\324\010>o\266h\276\025I)>\360,\036<\027\3523=\352D\255\275\312\366\266\276\205\326\030>}\252\037>K\352\231>\320}\246\276\333\242\244>M\003h>\274<:>\335\315\033:\302\350\210\274T\271O\2765\237a=\035Vw>\2300\234\275\022`I<\227\205\334=\332:c\276\311\035U>\312w\267\275\227\257\372=\006\211j\274\366\035\262=f\300\224>{\311\322=\226fL\276\346!\365=\313\200\'\276B~\266>\346\016\332=ky`>\2173U\276\031q\345\275\366\026\253>\322\'&=/\033c\276\013\267\370=\210:\205=\177\324\305=\314J\000>\300\333\200>\237Z\311;u\363B\2766@\355\273\205\307\025>\200\001N\276\225+v;T-\262\275\265\007\234>\217\375\n\2767\n\223\275\264\r\232\275\2564_\276~~\220\276\226{a\276Q\316!>z\325\026\273\267\036\007>\363\351\031>\366\200\303=\225U\225>@\274w\274j\031\261\275\373N\206<W#\312\274\352\355\203\276E\031;\276O\263g=\316\226\036\275\210nf=W\373\033<Q\362{\274i\263g;)\366\335\276n\263\022\275\266\367f\276\r9\235=\236\334\234\273\251\320P\276\306\253\215> \016\346=o\346\307\276z$\254\275\276\320\002>\010>v=\33051>\370\264\305\276l\010\023\276\375\220\025=1\210\010\276\375\336o>\241\021\211=\251!\270\276\301p\001>B^3=\241\3464>\236/[\276\205\000\331\274n\305\331\275`\270\312\276\261\031\333=?Vz=\217\202\177>\316\257\251=X\305]=_\031\203\276*d\'>\330\305\210\276\356E\257=\307i\027>\334m\r\276}:`\275\363_5=Wy\004\276\375\353\016\276[o]\276\372\236\013;~\275o\275\302\334F>\367\350\347<\310o\356=*3\201=\315\236\263\276:\202\037>\370\031~=\354\317\344\275\266\'\341\275\204}\205=\227\333\357=y;\232>\314\326\202\276\355\324\206=\251\304\307=\356\n1\276\256\275\301<-\206\027\276\016\225\225>\0322]=Y\255z\276(v/=\0319I=\367\201\263\275\241\266\226\275\375\277\223>F\330\220\276`\033\231\274\270\211x\275c9Z\275\263-i\275\355\215\373\276\234\010+\276\347\032\240\276\365\030\231>~O\254<\354\314g>\250\021\260\276\240\310\306=\270\215\321=T\313\017\275\345\270\221<\\\275\227\275\355\307\031\274X\330\232\275\023\226\222=\346\324g\275\273)\023\276\363)\031\276\322\347\311\276\357\224\025\276\010J\000\276\367\036=\276\327K\321<EvZ>,c\360\274\317\262\225>gd\'>\266YL\274^\364\020\2766DZ\2769\006n=`\375m>\0175\023\276\001\220w\274Y \215\275\324\241_\276\363\355\005>2\336\037>]\255\200\276C\234\027:\310K,\276\316D)\276\220\322\231=\370\2113\276\014\031M>\201\242:\276\336\214z\275i\310\264\276\334\336\226>d\006\232\276\027\367~\275\322\3471\275\232J\274\275th\332\275\306G\235\275g1\334\275(\354V\276\014\360E\275^\\\'>\306\305%\276\177\275];\376\027:=\340.K\276\337 \245>\235\376\266=\263\212b;I\274\000<\262\221\014>\004\301\217\275\000L\230=\317\314\021>\365Z\310\273\254w\276>\266\016z\275\232\333\361\275\025>\257\275\305\"\302=\346\304\230\273E\304\305<\364\014\035>)\261\351=\300\303\346\276\367\035\377=Q\203\235=\016I2>\"\315\363\272\003\354\273<\177@\205\276\r\332(\276\274\226\036=\270\350_=\247\356\207\276k\223D\276\203\315L\276O_\235\275\2345\254\2767\255\235<\344\342\265\275\025\017\372\274\223=\000=S\257\272=\000z\312>3d\251>!\247\241=EU\n>\377\357\214\276\263k\223>\023\271\025\275\345\226\001\276\'N\376=H\302s\275\222\204C\276qg+\2767Hw\276n\276\237>ktr=>\262\256=Lg\035\276N\347\016\276]\361\312\275-\023Q=\023\317\340\276\373o!=*\337\226\2748\265\006>AP\200=1\033\316=\224\240`\274m\205H\276_\n-\275 \343R=\336x*>\371L\300=b\233\347<F\033\334\275\030Sj>?\010^\276\001\375I>M6\377=\271{\027=\311\330?\276\264\241\004=gr\200\275IB\007\273}\027\245=C02=\235B\033\276\336\300h>\252\"c<\217\033\232=\2302E>\r\3059>\246f1=%$\365=\216+\214>\t\306\272\275\002\"z>\333\014\366\275v\250v\276x \261\275s\016\215>\316\376S\276\244-\206\2759\361\253>r\'\211\276\036 \357=@G\002?\'A\253\275u$\033\276\004S\020>\241B]\276)CN>\265\270\203>\257\330->p\350\372=H>\336\274\204\271\231>\226\253\336=\300\242\341=\017\313\246>\336+\216\273\276\036\206<\340\321\354\275|_\253\276\201\020\367\275#\244\272\274\334\263\273>\340\305\003>~\255B\273\3413\230=\n\347\267=\356\260\007=\327,\327=\354\346\214=\223\235#>\307\344\244=\364bV\276U\320|<\360\320\264<T\006)\276LO\000\274\276\223\337\275\250\256o\276\252$\254>\217 I\276H\253t>f\314\017=\274,\013\2751\351\211\275b\250\306=\024\006\267\276\316\234%>\326\373\214\274\003\223V\275R\330z\276u\273,\275\334\353@>\265\216{\276.\366\264>b\373O>?\255\214\276\306/\330\275\327\220L>9\373\020>dt@>\324\370\247\275FX\206>T\253s=H\231\242\276\'\215\375=y\274\'\276$/\243=\212V\230>\3656\367=\277\245\275=\247=\366\275\016w\027<-\232\240>M\360n;\234\'\037\275\360I\351\274\'\353\257>\343\251\356\275\241\267\010\272\307/\217=B\235\032>\326`\243>\271;\247\275\356C\024\273\216\264F\275\023\'\213;\247ZR\276=\203m;\324\343\265\275\3055\342\275?\3266=\235\273\020>\347\303!>v\372\023\275\025f!=\326\006\213>5=1\276(L\007\277\2451\275\275!\277\270<\365o\261\273{\224\354<\033l\224=\032\007\247\274\344\001\241>_n\302\276\004\n\266\275\221\001=>\276%{=\332\365\007\275M\316F\276\261\234y\275\360,\331\275\346Vv\275\205\306\276\275\374\334\251>\274\302\237=\347\222\212=\302.6\2762\316\211\276\013\200\n\275\256\347\355\275\371\024\207\276+\374\267>\351\264*>\257\337\340<v\317\035\276F\033\020>Q\204n\275J\312O>\310\006\217=\334\262\255\275\371\361\302\276\350\363Q\276\322/|=H\002\234\275\30039\276\037\333\363\275Q\345)\276\256&\251=\247L7\276\260\271\016\276B0\316\276\004\303V>\\\0234\276a\031\201\276g}\376>>\306l=\256s\013>\332\256#=\363 [\276\377b\220\276x(\'\274\027\303\270=\025\014\004\277\267\003\370<y\310S>D\033I>\275I\037<I\2521>3\205\007>e\035\301=+\371e>\314\202\037=sW3>\327?\230\276\373\202\211>> l>\363\003\332=\355\005\r\276W@\032\276A*\354\273\2357\276<\2619/\273\022\356\225\274\231\326\323\275\004\035p\275\366KU\276toz\275\3501\245>\336\327b:\363\3516=\333\n\344\274\356\210\324\275\200\231\352\275\276\022w=\300\3205>D\250Q\275\264\364;>\332\270\352<Ci\362=^\333\262\275:\000N>\317 \272=\215\235^>\213T\341<\222\311\361<4<\002\276\030\267\006\273\221\020\262=P^\217=\255\340\311\276\337\337\336\274@F\025\276n\343\303=\305\201\014\275}\255u\276O\375\210\276h\347\\>\306\262 \275go\272=G;\314=\250Iz>\262\267i\275\272\023\315\275\307\205\376\274\310\374\352>\225\305\223=\355\241(>\010\2538\276\352\242m\275\261\264x\274\3765\022\275x\243\212\276k\323r>F\210\212=P \025>%vu\276\0251\335;\212\362N>\351K\255\275\325\331z=\333\"\220>LI\226=\272\316G=\337\350\322\275O\033\206\276\251<\300\274d\360)\276\002\350\270\276\232\241\246\276\260P\224=L\260\006\275\206W\200=S\247\236\276\247\n\331\274k\3020\2762\023V\276j\377B>\341\016\217\2754\021\256=\276\033\226>F\006\256\276\r\340\236\275\220\333Y=$\251:\276\317\315\260\275\311\276\217\274\253\n4=\202\261_<D5\357\275w\203\004>W\337\365\275\263\006@>-p\217\276\177?\344=\361\0233\276\237iT=\372\355\001\276S)}>\337kQ\276\240\n\270<\223\3104=\014\t\035=\316?S\276\310Hl=!uY=3\356\231=w\342)\275\227\037\016\276p\266-\276\331/5>\212N\337<\240\215\223\275l\020\334\275\222\347a\274\003\240\255\276\243\241\\\276.\351<\276\024\304c\276c\022\255=\327\202\024\276\200\306I\275F\237\177\276\353]\245>\256Z\256=\245\215\271>\301\360\346\275J\300\263>\310p\231\276P\267\203\276Q\"\006\275b\307H;/\363\177>\340\345\365\275!\250\305=\316\301\263=\276N\270\275\337\347\352\275\226aO\2760\352B>P\277\374<\3762r\274\351\010z\276}\315\t\276\032\010\317\274\006\231\035>9\301\207>\335U\256=\032\205D>\300\036\322\274\226\034)\276KN\243\276\177x\235\276\255\000\322\275\3071\005\276\220\343\245\275\331\362u>h\232\006>\354B(>\360\251\262=j\023\215>c\316\203>\214\357\030>\361\350\030\275\273\200\257=\320e\276</\242\361=\024\213N=\215@\325\275_>\014>\215\234x=\235\014\244=\257Vm\276`O\314>\217\216w>\224\264\006\276o\0351\275\334:\017=-\216I\276\023\3622=t\262\310=]\025\005\277\357p\213=N\016\030>\0047\201\275\006\210\005=8\237*>\215\367\355\274.\027\021\275@\3436\275Q\371\024>d\005\312=\227\355\303>\332\\\220\276p\206\022=\202e\253=\317s`;\000a\215=\266\311\353={\314g\275\004\'\"<\021<O>\356DF\272\366\3230\275n\225\304\276\262i\206\276dk\244=\320\010\002\275\001\215\343\276nJS=\233\034\323\275\034\207}>\257y\224\276\342\277\034\276\014\374t\275)\035\243\275\242%\024\276I\355\261\275\033\270N=L\342\371=\301fm>\333\261G\276\211\302\300=\336\"\230=\225!F\273\231\334\234\274zaZ\273\000BN>?\'\213>w0\237\275n\\\244\276\006\\T\2765\356\022=>)\236\275\272/$\276\274\276\273>\035\244j\275\316\037\247\275\267\307\006\276\374\035\016\276\351\373\244\276\245\207\223>\276\322\245\276[\270(\274J:\201\275\234\"\364\275\335{H>4\337l<\236O.\276j\020B>-I\201<<\370\304\275T\024(>\277\254l>\037\345D\276\322\342\320\275\202\006\n\276\2034\021\276\363\255\210>\223\300\314=\240\016\347\275M\306N>G>\265=\315\322\016\276A\332_\276\351f\364=.\3433\275\2034!\276_n\205\275\031v\270\275\0041\031>\246\323\352\274\331e\000?\314\203r>\340\276\005>\323\251\025\276\'|\261\275?kz\276\346y\224\275\256g\244>\372&\361<ls\377\275\264\010\'>1Z\265\275\2059\014>W\374\014\275\014\367\326=\214\247\342<\030\360\242\274*\333\234<\353hF>\247s_>%\300q\275N\214\267\276`D0\276[b\335=\240}\212=?}v>\257\004\336=-\300\n>GT\023\276G\260\325=\022\005\223=.\271\206\275\267\001`\276\350\200\227=;\325\020>yH\017\275\305\326d\276\326L#\276\"\373\233>\264\311)\276\264\341\207\276\013\312\t<\212Gi=\031.6\275\3777\\\276\335\r\014>\364\346\311\274Y\255z\276\020\343\337\275\257\2019\276~2\311;\342\217\231\276a\321\362=\322\372\021>\'Z}=\202\312O<\244E\007?\354\235\337\274\001xr>\234\376\362\273r\177->O!\014\274\237\312;\2768\221S\276,\202\314\275rN,\276\031\317U\276T\363\372\275~\364\336>\335@#=\032$\326\274\254\231\250\275\017\021\372<K^i\276\243\021\362\273\002a\202>\310\316\235\276\212\2751=#s\025\276\275\210H>\000>\374<\263\233.>\373cB>NT\263\2754\337\202>\323\307\203\275\003\203\354=\316DS>\022\213\207=\\\344\177>\006\242\214>\236\274R>\357\341\207>\356e\353\273\307\200\215>4\374\360\273K\354\032\275\253cD\276\245\2031>\266\331\261>\032\307\350\275\252\311\021\276\352\031==\206?\263\276\267\356\260>\204\230\372\275\026\325\006\276\021\307\234\275\001\r_=\036\277M>\265\351\n>\013\363R=\253G\237=\360^\321\274h{\205>=G\341=\224#\227\275\277\330Q\275\0375\002\276{f\214\2757W\203\275\214i\274<.;\025\276~\277\310=3=\372>^S0\276\030\262L=\360@?>\214bh>\203\255f\275\032\335\243\2756\030\010\276\205l\373\275\000m\355=\344:$>\305&\222<\233\203u\276XH\253\276\320T\032\276\362d)\2763\320.>\023*\240>-\r\342\275\201\3601>K\373\377\275\254I\227\273; >\276K\023\365\275G8\352<+\301\216\276\251+m\274\317\330\200\275\305\tf>\360aO>\273\'\020<\023li>\221\010\231>\260\006n<\324~\023\276\212\335^\275\3751\336=\305\325\360<8\n>=\372@a\276k\362\025\273\237\267 >\'\2203>`\207c\275\312Z\013>\231?\311=8Tx=\005\025\346=\342d\366=2\360\235\2769\r*>\005\324\232\276OH\306<\200\"U=n,\233\276[\024\206\276\333L\206=q8D=gd<>r\340\010\276]\031\034\276\340\223s\2754\332\245=\325\252g>\366TP\276\033J\264\276\016#%\276\013\264*\276\336\374\343=\342\026\300=\211\036\245>8\376\277>?\262n>!\207>\275`\344\202=\373(\336\275o\210\356\275\201\355k\276\202!\221=]\370\t\276\322\274\247>\270\351\021\274\277\020\314\276a\221\034=\027\247\355;H\325W=7\363(>\220\234\350=\032\271\242\276\217\243o=\211\201C\276\215\322F>\206\3057>K\026\031>\177~\252\275(*/=\227S\235\274\344\234\001\276\334/2>\200G\200\275\304\274\311\276\364\273\346<\205\3245>48\343<\315\317o>\024\365\000\276|\n\232\276\3545\001\276e9\257=\230[\034\2769k\004\276\034\310K>\013\037\307\275\341\360\t\276\000:\252\276\357j\374\274\201\205\201>\320\3234\275\202J2\276\336\237\363=@\024\342\275\031\202\231=\252\000\342<\277\022y\276x\320\201\2761\207\224\274\343\223S>\032v\232\276\3307\240>\375\261\345=\316\366\223\2750\244\227\276\300w\021\276\266i\362=\3020\005>\364\326A>\020j{\275\203;\203\275\222?\233\276\326Wb\275\031\300\030>[AK9\026\363\222>\2750 \276\252\031}\275\312\245\214\275\017\312#>PTk>\337\337\305\276F<+;\003=\252\274d\211\210\275\306[\004\276H\003y<^\373)>!\313@=!N.\276\035\021->\332c\231\274\225\237t\275[\207\375=\335x\307<\217nT>\034\273\022\2759\\M=\331=|>\317\331\\\276\305\201\337\275\346-\370>uhN=&5\313=\304\006\334\276\r$\372\275\352;\n>\340\346\212\274\243\315b=\301\016l>\371\361\264>\3120\351\275\001\022\200=.4Z\276\000X\321;1\001\033\276\372\206e>S\350y=KN\031>Vv\372\275\336\0164=\003m\230\275\250Ry=\371Po\275 \205R>\342\026\030\275\367\310\212\275\323\315V\276\342\277\253\275li\300\275\3103[\276\201\337l\276\032\336.\275\271D\252\275\t\334h>i\0231>\216\323\005\276b\234\221>\231L\\=\202\016\344>a\374\225=%\2348>\321\317@=\242\276i>P\0169\275\017s\274\273N\207\230>\023k\377\275\253\200\272\275Fd2=N\370J>\232\214\376\275\tc\217>\354\311\372<;}\250\275\306\313\013\275\030>\n= \024S\276\024\342\300\274\275=\'=M\002\r\276\3021#\276r\247\342\275\372?\227\276BQ\320\276P\205\342=\225\206I\275\017\007\001>\216U?\276\325\375(>m\371w\276\253\nE\276\0070\240\275\254\000+\2760n~\276@`\271\275au?\276)6\336:\342\323G\275/+V>\237\331z>\330\201\324=\362Y{\276\020\301\256>\225\024w>7\363\224\2752\355\304\276:\245\302>\271\240\353;\334i\337\275~\256\352\2754\375\237<rU\235\275x\305x>e;\333\275F\027\274\275#\203\033\276\327b\214\274_\302\211>D\031\n>\224\203\022\276]p@\276C\213\023>^\3428\275u*\\\276\315g\235\275\265W\313=Zz\215>\210C\210\276c\030\037\276\313\246\013\276\000\256\014\276\021\372i\274\033\226\206=G\361\312=\227z\244\276D\035\232\275\204O>\276W\351|>\345J\341=\000#\036\276\356\314\275\275\366\345Q\275\341y\336>e\263\001\276\211\272\004>\337>\337<Y\023\240=\255z\\\276\364S\302\275\315\236\200>\006H^\2768\273r>\007\344\372<\377\320t\276(\341\376=\335$\032\276\214\232\013\276\241\274\231=\032@\215<\301\317\210\276\355\301\242>\267\025\345=^\"\"\2725\355H>N\212\331=\004\371\235\275\re\t>\277\364\246\276^\367Y\275\250>\263>\256\343\n\276\236\265X>~\t\366=qf~\275\321\275\017\275g\003\034>)]W>-\333w\276\212\273\236=\335\350\330\275bD\004=>\374\201\276\344Lc\275\t\023\314\275\211e\223\275M\260\022\276r[\236>\316\206\337=Ue\002\276k@z=\004!X=R\326\352\275\251\240L\276\rx%\2769I\260\276X\013@>\213,\207\276z\347\'>\020\307_>\007) \274\335\017\316=\342\271\222<$&\233\274\371\2774>:!i>\030\327\247=*\262@>\312@(\276\023\010\034\275dm\260\275\222V\245>\373\201\013\276\020\231d\276&\310\353\275\315\216*=\232|\367=\362\317C>\020\006\203>\006\265L\275Y\236\321\274\223~\305\274N\177\235>\347\225\031>{\204#=\3546\253\274^s\220=\013\347{>\302\r\363\274\237\216o\276\300S,=\221\035\"\276\025\3306:\217\317\020\276B\220\032>/\204\350>8\2251\276I\033\037\27648q\275\331\350\215\275ou\220\2749E\227\275\275\264\257>\345b3=RCx\276y\203\366<D#F>\357\265.\273}4\000\276(\211\301\276\362J\210>\356EZ>\332:{>\276\331\367;bK\222\275`_6\276.h\303<l6>;\3061\332\275\243\247\375\275\207\225\010=u5\023>\032,\231>\271P8\276\0204x\276\340oS=\317\247\207\275\000\273\225\276\250\214\343=\244f\216\2763&\026>\242\227\233\276{\254\347\275Y\365\254\275A5l>\274\313r>\016~\243\274\246\324s\275\024\226z>\312\225\235;\370Kr\276\002o\236>\236Z\203\273\337H\204>\001\262\305<\257\025\375\275^`7>2\365\333<\354C7=\333\311*>\212\2062\276\306\256\221\276\230&\n=\207\206s>3F%\276\001=\230\275\315c\230<\010\314\215=g\246\236<\213\242\274=0\036\327>\347g\">M\221+<\200\360\225\273\354_5\276\260+\373\275H\266\211>\'\351\n\277\320\344\237\275\212@1\276(~\264\275N\275Q\274\267\000\331\273\207\205W\276c\313Q\275\365Wk\275\245\276\276\275\005\225\367=yUE>\344n8\276\357\361\343=\3549\315=\332?\275\273\313\252\336>\264Y\275=\351\205C>T)\374=x\303\220<\343\370f>\251\214\276\275R\271\201\276\006\263|\276\302\261\022\276\225\016\241\275\203\032\356=\206\343\032\276[\337<\275 \324\210=\226j\233=t\375\345\275\003RN\276\2114Y\276\320\333\003>\252\237\036\275\362^P\276\225\223\202=\275\324%\276\301\313B\276\241\356\313=\204\322\356=\322\037w\276\203\263\220>U\335\322\274T\265\307\276\250v\035>X\304\242\275\351\260\243>\034\005\365\2758\035\021>\266:1\276G \232\276,\257]>@\271\220>*1\007<\037-9\276\010]\027\276NB\033>@\230+\2762Qn\275\323\005\343<)z\357\275\340\262\350<X\265\200\275\271\312\213<-\007\312<.Z\345\275?\306\002\274\005*\337\276F\221\035\276\224\003j>\024\371;>\226\326\207=\225\031@>\207M\274\276\343\366\215\275\255=\337\276\3179 \276\001s\035\274\365\024\324=f\304\313>\217\232\211=\332jZ\276Q<\317\275\3213\215\275\000L\037>\231\014d>\227\"\027=G\347\326\275z\3568<\242\276\226\274C\227\372\275\253]\221=Y\2758\276\240\001\334\276x\244\002<SO\273\274\3303\234\275\005\335\230=\024@\353=^\356\200><B7>_\371\361=\016-\003=\336\371\025\276\351Ky<HT~=\345\222(>\017\2473\275\037\215 >/\302;=S>F>\343\242/\276{\214\025\276\206\034\340<\262:\237\275\351e\035>\360\355I\276\006\336\230\275;\257T\275\370\344\372<\205Z\331=E\334~>)J\263\276\364\266D\276\"(\010>O\3006>qz&\276x\013;=\343\236\372=\"?6\275r8\271\276\376\237\257>\r\261\003\276\036\372\351\275\351\265v>\237 \213=P8\353\276\255a;\274r\203\275>$\036A>\273U\346=W{ >\206\310`>F\252\366;\217ys\276\345kp>\337\216\021;.r\310=\361A$\276/\013\024\276,#\301\274\310\350\031>\255|M>\345\034d>\226\336\203\276\221\341>>pE\t\2763\035?\276QyP\276\331\261\314<B\242.>%\367j=\231p}>t0\267>\276\271%\276\313\362\323\274\335\3129>yTY\276\325\257\223>EL\021>\316F*\276\316\333v=\261\025\035\275\255\333:\276\301\336\345<8^\277\275\2166\235\276\344{\021=\261\372\216\275~\2253\275L\222\317\275\177\021\031\276\023d\025\276\356&\212=Yf\240\273Q\253\201\275\312\366Q\276c\353\305<\301\310\203=\346\245$\274\323\362~\274m%)>\336\266\231\276(R\246>\260\0210>\216a\035>\306\345S>\032\205+=\355\026\316=/r\233\275<\021\020\276\200\247\272=zp\334=\246\362\265\275\217u\234>\025\370K\275\312\032@\275Aoe=\332\305\347>\212\242\255\276\266@-\275iu\003\276\316\301\212\276=\316w\276\256\"s\276%:\221>\312\016\000\276\\(@=\037\326\374\274\250\370U>\024U\307\276\344\340\005=\261\305\211\274\220W\262=\326IR\275\346 J<\273\301/>\221(~\276\177\206\202>M_\001\276\275*\211\2750\214\037=\334\303\246<\247\224\177>\030\211\255=\234]\220=\376\260\200\276\224S\202\275\256\316\234\275\n7O\275u\331g>)L\276\275\027T1\276`Z\231>q\033<\276\242u\211>\321\272T=\004\013\243>\376\343\216\276\224\375\366=\224\266\227\275^\031!\276\330\267\372\273\t\023\251=\331\251\036\275\004\236\024>V\235\215\275\003s\000=\245\010\364=\"1\033=\313\3748\276\213n3>\0230o\276\245\004\302=\302i\226;\306\236\257\276l\036\024\273R\324\204\274\247E\220=LV\272=\313\265\003\273\034u\253\275\355\323\234=\356\327\016\276a\317\207=F\240\215\276\203\370\231\276\225%D>?,\353:\205\376\231=F7\367=\351\212\\>\241xd>\351\203\017\276\356j\213\276\230\311\205=\203\355\215\275\264\326\202>\203D\365=\236\017\237>|+\010\275&m\034\276Ff\341\274\035\274u\276\211\320\231<\236V\262=\345^\026>3\362z=\035b\222\2766\314<>\273\026\357=\026u\'>~\202\201\2769\303N>Bm\344\2755\010\333\275)i!>T(\2459\230\242\323>\364\355p\276\213\333G>$\256K\276m\315\225<\003\354j>B\305\367\276$1P>\177\355\251=\215\000\210\275\r\204\243<\273\335!=q\326\221=\225%\235\276\033cQ<\020_\271\275\320NP>\346\023\323\275\342\353\003\274,2;=\233<\004\276\205\242\273\275\366\0321>x\315\267=Ix\264;#\312\003\275fe9\276;\nj\276Y3\n>\r\272\276<n\241\003>\2131\223\276\304\001\201>W\3311=n5]>\2346\"=\'\005i\275\257\364\005\276\257\262i=\265\371\273=\360\222\212=\316c\034\276\325\336\213\275\311\366\230\276\341\337\365\274\326\223\003\276E\013J=\3608\034>c\333P>\212j\016\275\010\216\036<sxM\274\260\203\006>\034Od=K\241\002>\321\323S\275\034V\243>\351@t\275\020k\343=\365~->l\226Z\275\342\001\342>\315\345\356>\007\213\316>\331\007\340>\032\251\016>t\245\016\276\266\026(>\346\365\254=e\350R>Lq\006\275\304\332m=<\304\000>\013 z=\035\303\247> \343\025\275\252\270\320\274\301<\363=\327R\273=<\0325=P\016\331\275\022W\212>O\300j\276m\245\363\275\001F\035\276\246\3458\275@\271h\276\331\311z\276\370\254\010<I\337+>\034\317.>#\0052\276@\203\245>\000\273\200=\026\372\213=\3736\022>\335\332v>\265J=\276\367\317\026\276\001GW\276c\360,=\177e.=\237\276\262=\362\243u\275\000\351\'\276h\200\003=\342\n\037>ZG\235=\263!\351\276~f\205>\013\353C>\354\273l><\\\220\276\371;\226=d\202\211=l\267\356=\336\253T\275\t\242\031=\201A\006\275y%\343\275\264\305\345=r\264\224\276E\331\244=\210!+>%\235J>\220\206\264\275\276\330\325<-\252\004\276\n\300\337=\312V,>c\203[>\224\366\n\276\312\3125>\265j\207>\327\267C>\026c\231>I\n\r=\206\016\350\274\223&\355=\034\023\330>\304\217\330;\256{k>\311\234o>kP\343=WJ\243\275\031\314\267\275\030\205\t>\030\016g>\352\031\253\274\331\265\217>\356B\244=\023\223H\276\206\232N\276sp9\276\3432+\276]\232\250<\030\315\274\274\240NS>\252\031\002>\010\217\355=&^\r\276\267\334\033\276\273P?>8=\233\276j\354\230\275~\252|>X\026\335>\202\014\242<\317\n\333\275\343\272]\276\003W\270\276\360C]\276\302\266f\275\363\375O=\226\375\265\275\024\3223>\207\217\003>h\230%<5\347\201=?$s=FL7=\247\261\375;\2601#\276\241\213\373={JK\276^\357\265\276q\363\306\275g;n\276\365\326\016>\262\312 \276N\236\033\276\313h\031:!Y\213>\3651\326=\3558h\275\017NZ>j\235\233=Sk\202=\271W\021\276\247u\025\275\314(B\276\261\344\024>G\223\207;\317G\244\276\362m:>ms\344\275\303ZV>\336\377\332=n\010\317\275$\347\332\276\346g\231\275`l\342\275\312\230\362\275\214\316\207>\332\004\322\276I\316\273\275\241Kl>\374\343\211\274t\213E>\271\277\356=\377\304\226\275g=B>\001\274[>\251>\317=\020\252\">\234sl=\010D\335=\335\036Q>\252\203j>|K\232\275$\213\017>\255\204>>q\243\266\275\r\246\037\276\022\203\t>\350f\350\275}\371+>\020_&=p\317g>\324G@\276\350\223{\276\367\r}=;A\214>\220t\226=\207\177r\276\3454\277\276\313\r\225<F;\221\276\323\315z=\035\324\010>p{D\276\224\025-\275h\n\223\275W\200\026=\024\035\222\276M\217\337=Y\342\003>\373\232\341=\343gz>GFq>\027\325\322=kK\337=\006\301\251\2761^\302\275\303\220f>\251\267)\276\333\177>\271\016X\260\276\341\352\213<^\276\327=\206S<;\223\370\220\275\265\361\216=\361\254J>J\313\023\276\'D\013>h?\026\276Z\227\250=\225\323\334>\367f\327<-\256\036\276\310\252\272\276\337\264x=(\237\337=k\322{>3r\252\276\301\271\344=.U\210>\313}.>\265M\014\275\343\365\342;F\313\237>\017\201\023\274NC\272=\256\306o=z\r\220\275\263>+<\253\226\265=\200\242\345\274;?\215\275\'R\325\274U\307\220\275\305\022\'>\303\237\027=9%\265\276\263h\013\276W_\247\275\023\200\305\276\227\346\343\275{j\350\275\211?\261>\030HO\276)4\016>s\212\321=DV\202\275\342\262f>!h,>\032W\351\275{\335];\tJ\007>Di4>\263(\324\275\363\331\033\276\311a\242\276\336.\016\276k\035\177\276&s9\276\037\240E=\250\000\'\276\220k\026\276c\032-=\364\226@\276=\311_=\017R\204\275+\363\243=\354\013F>\220 E\275*\333\202\276\301?\317=\255RP>"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc2/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc2/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc2/w"
      input: "oldpi/model/vf_fc2/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc2/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc2/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc2/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc2/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc2/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc2/b"
      input: "oldpi/model/vf_fc2/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc2/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc2/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc2/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/vf_fc2/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc2/add"
      op: "Add"
      input: "oldpi/model/vf_fc2/MatMul"
      input: "oldpi/model/vf_fc2/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_5"
      op: "Tanh"
      input: "oldpi/model/vf_fc2/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\252d\332\275\002M\241<\240{\366\275\3649\233=\212\300\264;Wq1\276\375\204\332\275\243\274!\275\325Qi\275h\312\360;f7J>z\216\336<u?\326<\266\256\334\274\271Wq>\22132\276!3\203\276\354k%\276\177\220\301=+\357Q>O\273O<\270|\203\2743I0>\351/\302=\350\335\025\276w\206`\276w\357\326=\340\2173\274w\244\252\272n\277`\276\373g\n\275\333T\202\271\177\370:>q\272\363=5\301\007\275cY*=M\353\245\275\247\353\253<\324\275O\276\317\373C>\206\037m\274\035\216F>\327\355\356\274\226n\022>\265\301(=\271\3768=\232\275\244=\037\361\227\275\365\324\341=\025\262w\273\224\006\216=\341\370z=6w8\276\370\351\240>\035q\030=S\240V\276<K\322\275\327=4\275\216\3073\276\247W\361=\270\320\216\274A\323}=\030\277\261\274wD\362\275"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/read"
      op: "Identity"
      input: "oldpi/model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/read"
      op: "Identity"
      input: "oldpi/model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_5"
      input: "oldpi/model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf/add"
      op: "Add"
      input: "oldpi/model/vf/MatMul"
      input: "oldpi/model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\220d\3219\361\222\370:\374\227\203\272\371C\350:\014\207@\273yO\2509,\232\026;Gp\251\272\366\376\2659\366\312\300:V`\203\272e%\013:\270\244&\270\001\261\000:v\324\216\272q\177\306\272\211\376\003\272d\304\333\271\357h\366\272!\256\323:\214\216\221\272F\222\255\272\207\364\233:Ci\276\272 /\2468\371+\245\272|~\005:\017X\027:\014Z\306\272\336T\023\272 \205\031\272+m\243:\026\357\2479\022&\236:5\252{9\227\\\033\273\334\303\354\272\201\234\014\272\325\003\361:>\006H:K\223Q\272\374\036\310:*T\027:2\027\214:_.\007\272\323?\004\272i\250P:\353<(\272\365\025\216\272\343\016\3169a\007\256:c\344\026\272,\177\354\272\021\317\312\272?\373r9\207\351\317\272\030qS9n\245\032;\313\264=9\037\373\2538OQ\031;\253\237\325\272MBj:X[\311\272"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/read"
      op: "Identity"
      input: "oldpi/model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/read"
      op: "Identity"
      input: "oldpi/model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_4"
      input: "oldpi/model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi/add"
      op: "Add"
      input: "oldpi/model/pi/MatMul"
      input: "oldpi/model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Assign"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/read"
      op: "Identity"
      input: "oldpi/model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul"
      op: "Mul"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/add"
      op: "Add"
      input: "oldpi/model/mul"
      input: "oldpi/model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat"
      op: "ConcatV2"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/add"
      input: "oldpi/model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
            tensor_content: "|\275P:z\341\307\271]fv:\242\206d\272\372b\035:\360G\352\271\034\260\2119\"\021\255\272\322\000e\2720\256\227:R\216\245;T\037$\273\227\274\202\271P@=\272Z[\242\272R\014n:\313\365\3459/\345\2016\221\262\376:\'\354\264:\215\023\211:\\`\250\272\303\370\000\27328\203:\345\027\220\272\216\230t:\376{\222:\354\365\033\272\n\323\223\272\371%\244\272#L\0229|\t\2069\335\023\317\272\313\037\232:\221j\211\271>\220\205:\303\323X\271\315\332B:\r\023\204:t\311\324:\277\316\310\272rrv\271U\t\3239O\203\257\271{.2\272\276\362\001\273\355&\210:\204\353*\272z\341\330\270\255wX\272\220\026\264\272\257\204+\272\230;\353\272#Zo\272A8t:W[\310\271\224\375T:m\017\307\271\222\241\302\272a7\256\272\376q\310:\030\000\240\272\177t\3759\343\236\366:"
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Assign"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "oldpi/model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/w/read"
      op: "Identity"
      input: "oldpi/model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Assign"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/b/read"
      op: "Identity"
      input: "oldpi/model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_5"
      input: "oldpi/model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/q/add"
      op: "Add"
      input: "oldpi/model/q/MatMul"
      input: "oldpi/model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "oldpi/model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/split"
      op: "Split"
      input: "oldpi/model/split/split_dim"
      input: "oldpi/model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/model/Exp"
      op: "Exp"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape"
      op: "Shape"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "oldpi/output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mul"
      op: "Mul"
      input: "oldpi/output/random_normal/RandomStandardNormal"
      input: "oldpi/output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal"
      op: "Add"
      input: "oldpi/output/random_normal/mul"
      input: "oldpi/output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul"
      op: "Mul"
      input: "oldpi/model/Exp"
      input: "oldpi/output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add"
      op: "Add"
      input: "oldpi/model/split"
      input: "oldpi/output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/sub"
      op: "Sub"
      input: "oldpi/output/add"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/truediv"
      op: "RealDiv"
      input: "oldpi/output/sub"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Square"
      op: "Square"
      input: "oldpi/output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum"
      op: "Sum"
      input: "oldpi/output/Square"
      input: "oldpi/output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_1"
      op: "Mul"
      input: "oldpi/output/mul_1/x"
      input: "oldpi/output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape_1"
      op: "Shape"
      input: "oldpi/output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice"
      op: "StridedSlice"
      input: "oldpi/output/Shape_1"
      input: "oldpi/output/strided_slice/stack"
      input: "oldpi/output/strided_slice/stack_1"
      input: "oldpi/output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/output/Cast"
      op: "Cast"
      input: "oldpi/output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385175704956
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2"
      op: "Mul"
      input: "oldpi/output/mul_2/x"
      input: "oldpi/output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add_1"
      op: "Add"
      input: "oldpi/output/mul_1"
      input: "oldpi/output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "oldpi/output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/add_2"
      op: "Add"
      input: "oldpi/output/add_1"
      input: "oldpi/output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1"
      op: "StridedSlice"
      input: "oldpi/model/vf/add"
      input: "oldpi/output/strided_slice_1/stack"
      input: "oldpi/output/strided_slice_1/stack_1"
      input: "oldpi/output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "loss/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/lrmult"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "loss/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "loss/mul"
      op: "Mul"
      input: "loss/mul/x"
      input: "loss/lrmult"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_2"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "loss/sub"
      op: "Sub"
      input: "model/split:1"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square"
      op: "Square"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_1"
      op: "Sub"
      input: "oldpi/model/split"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_1"
      op: "Square"
      input: "loss/sub_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add"
      op: "Add"
      input: "loss/Square"
      input: "loss/Square_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_2"
      op: "Square"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "loss/mul_1"
      op: "Mul"
      input: "loss/mul_1/x"
      input: "loss/Square_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv"
      op: "RealDiv"
      input: "loss/add"
      input: "loss/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add_1"
      op: "Add"
      input: "loss/sub"
      input: "loss/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/sub_2"
      op: "Sub"
      input: "loss/add_1"
      input: "loss/sub_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum"
      op: "Sum"
      input: "loss/sub_2"
      input: "loss/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.4189385175704956
          }
        }
      }
    }
    node {
      name: "loss/add_2"
      op: "Add"
      input: "model/split:1"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_1"
      op: "Sum"
      input: "loss/add_2"
      input: "loss/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean"
      op: "Mean"
      input: "loss/Sum"
      input: "loss/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_1"
      op: "Mean"
      input: "loss/Sum_1"
      input: "loss/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.009999999776482582
          }
        }
      }
    }
    node {
      name: "loss/mul_2"
      op: "Mul"
      input: "loss/mul_2/x"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_3"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_1"
      op: "RealDiv"
      input: "loss/sub_3"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_3"
      op: "Square"
      input: "loss/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_2/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_2"
      op: "Sum"
      input: "loss/Square_3"
      input: "loss/Sum_2/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_3/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_3"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice"
      op: "StridedSlice"
      input: "loss/Shape"
      input: "loss/strided_slice/stack"
      input: "loss/strided_slice/stack_1"
      input: "loss/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast"
      op: "Cast"
      input: "loss/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_4/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385175704956
          }
        }
      }
    }
    node {
      name: "loss/mul_4"
      op: "Mul"
      input: "loss/mul_4/x"
      input: "loss/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_3"
      op: "Add"
      input: "loss/mul_3"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_3/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_3"
      op: "Sum"
      input: "model/split:1"
      input: "loss/Sum_3/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_4"
      op: "Add"
      input: "loss/add_3"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg"
      op: "Neg"
      input: "loss/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_4"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_2"
      op: "RealDiv"
      input: "loss/sub_4"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_4"
      op: "Square"
      input: "loss/truediv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_4/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_4"
      op: "Sum"
      input: "loss/Square_4"
      input: "loss/Sum_4/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_5/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_5"
      op: "Mul"
      input: "loss/mul_5/x"
      input: "loss/Sum_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1"
      op: "StridedSlice"
      input: "loss/Shape_1"
      input: "loss/strided_slice_1/stack"
      input: "loss/strided_slice_1/stack_1"
      input: "loss/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast_1"
      op: "Cast"
      input: "loss/strided_slice_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385175704956
          }
        }
      }
    }
    node {
      name: "loss/mul_6"
      op: "Mul"
      input: "loss/mul_6/x"
      input: "loss/Cast_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_5"
      op: "Add"
      input: "loss/mul_5"
      input: "loss/mul_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_5/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_5"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "loss/Sum_5/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_6"
      op: "Add"
      input: "loss/add_5"
      input: "loss/Sum_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg_1"
      op: "Neg"
      input: "loss/add_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_5"
      op: "Sub"
      input: "loss/Neg"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Exp"
      op: "Exp"
      input: "loss/sub_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_7"
      op: "Mul"
      input: "loss/Exp"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/sub_6"
      op: "Sub"
      input: "loss/sub_6/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_7/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/add_7"
      op: "Add"
      input: "loss/add_7/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value/Minimum"
      op: "Minimum"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value"
      op: "Maximum"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_8"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Minimum"
      op: "Minimum"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_2"
      op: "Mean"
      input: "loss/Minimum"
      input: "loss/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Neg_2"
      op: "Neg"
      input: "loss/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_7"
      op: "Sub"
      input: "output/strided_slice_1"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_5"
      op: "Square"
      input: "loss/sub_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_3"
      op: "Mean"
      input: "loss/Square_5"
      input: "loss/Const_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_8"
      op: "Add"
      input: "loss/Neg_2"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_9"
      op: "Add"
      input: "loss/add_8"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/entropy_loss"
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss"
      op: "ScalarSummary"
      input: "loss/entropy_loss/tags"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/policy_gradient_loss"
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss"
      op: "ScalarSummary"
      input: "loss/policy_gradient_loss/tags"
      input: "loss/Neg_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/value_function_loss"
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss"
      op: "ScalarSummary"
      input: "loss/value_function_loss/tags"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/approximate_kullback-leibler"
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler"
      op: "ScalarSummary"
      input: "loss/approximate_kullback-leibler/tags"
      input: "loss/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_factor/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/clip_factor"
          }
        }
      }
    }
    node {
      name: "loss/clip_factor"
      op: "ScalarSummary"
      input: "loss/clip_factor/tags"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/loss"
          }
        }
      }
    }
    node {
      name: "loss/loss"
      op: "ScalarSummary"
      input: "loss/loss/tags"
      input: "loss/add_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_1"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_2"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_3"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_4"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_5"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_6"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_7"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_8"
      op: "Assign"
      input: "oldpi/model/pi_fc2/w"
      input: "model/pi_fc2/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_9"
      op: "Assign"
      input: "oldpi/model/pi_fc2/b"
      input: "model/pi_fc2/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_10"
      op: "Assign"
      input: "oldpi/model/vf_fc2/w"
      input: "model/vf_fc2/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_11"
      op: "Assign"
      input: "oldpi/model/vf_fc2/b"
      input: "model/vf_fc2/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_12"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_13"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_14"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_17"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_18"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/group_deps"
      op: "NoOp"
      input: "^loss/Assign"
      input: "^loss/Assign_1"
      input: "^loss/Assign_10"
      input: "^loss/Assign_11"
      input: "^loss/Assign_12"
      input: "^loss/Assign_13"
      input: "^loss/Assign_14"
      input: "^loss/Assign_15"
      input: "^loss/Assign_16"
      input: "^loss/Assign_17"
      input: "^loss/Assign_18"
      input: "^loss/Assign_2"
      input: "^loss/Assign_3"
      input: "^loss/Assign_4"
      input: "^loss/Assign_5"
      input: "^loss/Assign_6"
      input: "^loss/Assign_7"
      input: "^loss/Assign_8"
      input: "^loss/Assign_9"
    }
    node {
      name: "Adam_mpi/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12548
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 12548
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1920
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice/stack"
      input: "Adam_mpi/strided_slice/stack_1"
      input: "Adam_mpi/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1920
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\036\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape"
      op: "Reshape"
      input: "Adam_mpi/strided_slice"
      input: "Adam_mpi/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "Adam_mpi/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1920
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1984
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_1/stack"
      input: "Adam_mpi/strided_slice_1/stack_1"
      input: "Adam_mpi/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_1"
      input: "Adam_mpi/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_1"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "Adam_mpi/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1984
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3904
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_2/stack"
      input: "Adam_mpi/strided_slice_2/stack_1"
      input: "Adam_mpi/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1920
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\036\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_2"
      input: "Adam_mpi/Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_2"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "Adam_mpi/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3904
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3968
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_3/stack"
      input: "Adam_mpi/strided_slice_3/stack_1"
      input: "Adam_mpi/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_3"
      input: "Adam_mpi/Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_3"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "Adam_mpi/Reshape_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3968
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6016
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_4/stack"
      input: "Adam_mpi/strided_slice_4/stack_1"
      input: "Adam_mpi/strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_4"
      input: "Adam_mpi/Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_4"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "Adam_mpi/Reshape_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6016
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_5/stack"
      input: "Adam_mpi/strided_slice_5/stack_1"
      input: "Adam_mpi/strided_slice_5/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_5"
      input: "Adam_mpi/Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "Adam_mpi/Reshape_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 6048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8096
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_6/stack"
      input: "Adam_mpi/strided_slice_6/stack_1"
      input: "Adam_mpi/strided_slice_6/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_6"
      input: "Adam_mpi/Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_6"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "Adam_mpi/Reshape_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8096
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8128
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_7/stack"
      input: "Adam_mpi/strided_slice_7/stack_1"
      input: "Adam_mpi/strided_slice_7/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_7"
      input: "Adam_mpi/Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_7"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "Adam_mpi/Reshape_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8128
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_8/stack"
      input: "Adam_mpi/strided_slice_8/stack_1"
      input: "Adam_mpi/strided_slice_8/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_8"
      input: "Adam_mpi/Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_8"
      op: "Assign"
      input: "model/pi_fc2/w"
      input: "Adam_mpi/Reshape_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10176
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10240
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_9/stack"
      input: "Adam_mpi/strided_slice_9/stack_1"
      input: "Adam_mpi/strided_slice_9/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_9"
      input: "Adam_mpi/Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_9"
      op: "Assign"
      input: "model/pi_fc2/b"
      input: "Adam_mpi/Reshape_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10240
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_10/stack"
      input: "Adam_mpi/strided_slice_10/stack_1"
      input: "Adam_mpi/strided_slice_10/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_10"
      input: "Adam_mpi/Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_10"
      op: "Assign"
      input: "model/vf_fc2/w"
      input: "Adam_mpi/Reshape_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12288
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_11/stack"
      input: "Adam_mpi/strided_slice_11/stack_1"
      input: "Adam_mpi/strided_slice_11/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_11"
      input: "Adam_mpi/Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_11"
      op: "Assign"
      input: "model/vf_fc2/b"
      input: "Adam_mpi/Reshape_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12352
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12416
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_12/stack"
      input: "Adam_mpi/strided_slice_12/stack_1"
      input: "Adam_mpi/strided_slice_12/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_12"
      input: "Adam_mpi/Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_12"
      op: "Assign"
      input: "model/vf/w"
      input: "Adam_mpi/Reshape_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12416
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12417
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_13/stack"
      input: "Adam_mpi/strided_slice_13/stack_1"
      input: "Adam_mpi/strided_slice_13/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_13"
      input: "Adam_mpi/Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_13"
      op: "Assign"
      input: "model/vf/b"
      input: "Adam_mpi/Reshape_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12417
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12481
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_14/stack"
      input: "Adam_mpi/strided_slice_14/stack_1"
      input: "Adam_mpi/strided_slice_14/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_14"
      input: "Adam_mpi/Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_14"
      op: "Assign"
      input: "model/pi/w"
      input: "Adam_mpi/Reshape_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_15/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12481
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_15/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12482
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_15/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_15"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_15/stack"
      input: "Adam_mpi/strided_slice_15/stack_1"
      input: "Adam_mpi/strided_slice_15/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_15/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_15"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_15"
      input: "Adam_mpi/Reshape_15/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_15"
      op: "Assign"
      input: "model/pi/b"
      input: "Adam_mpi/Reshape_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_16/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12482
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_16/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12483
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_16/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_16"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_16/stack"
      input: "Adam_mpi/strided_slice_16/stack_1"
      input: "Adam_mpi/strided_slice_16/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_16"
      input: "Adam_mpi/Reshape_16/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_16"
      op: "Assign"
      input: "model/pi/logstd"
      input: "Adam_mpi/Reshape_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_17/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12483
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_17/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12547
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_17/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_17"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_17/stack"
      input: "Adam_mpi/strided_slice_17/stack_1"
      input: "Adam_mpi/strided_slice_17/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "@\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_17"
      input: "Adam_mpi/Reshape_17/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_17"
      op: "Assign"
      input: "model/q/w"
      input: "Adam_mpi/Reshape_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_18/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12547
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_18/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 12548
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_18/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_18"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_18/stack"
      input: "Adam_mpi/strided_slice_18/stack_1"
      input: "Adam_mpi/strided_slice_18/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_18"
      input: "Adam_mpi/Reshape_18/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_18"
      op: "Assign"
      input: "model/q/b"
      input: "Adam_mpi/Reshape_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/group_deps"
      op: "NoOp"
      input: "^Adam_mpi/Assign"
      input: "^Adam_mpi/Assign_1"
      input: "^Adam_mpi/Assign_10"
      input: "^Adam_mpi/Assign_11"
      input: "^Adam_mpi/Assign_12"
      input: "^Adam_mpi/Assign_13"
      input: "^Adam_mpi/Assign_14"
      input: "^Adam_mpi/Assign_15"
      input: "^Adam_mpi/Assign_16"
      input: "^Adam_mpi/Assign_17"
      input: "^Adam_mpi/Assign_18"
      input: "^Adam_mpi/Assign_2"
      input: "^Adam_mpi/Assign_3"
      input: "^Adam_mpi/Assign_4"
      input: "^Adam_mpi/Assign_5"
      input: "^Adam_mpi/Assign_6"
      input: "^Adam_mpi/Assign_7"
      input: "^Adam_mpi/Assign_8"
      input: "^Adam_mpi/Assign_9"
    }
    node {
      name: "Adam_mpi/Reshape_19/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1920
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19"
      op: "Reshape"
      input: "model/pi_fc0/w/read"
      input: "Adam_mpi/Reshape_19/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1920
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20"
      op: "Reshape"
      input: "model/pi_fc0/b/read"
      input: "Adam_mpi/Reshape_20/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1920
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21"
      op: "Reshape"
      input: "model/vf_fc0/w/read"
      input: "Adam_mpi/Reshape_21/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1920
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22"
      op: "Reshape"
      input: "model/vf_fc0/b/read"
      input: "Adam_mpi/Reshape_22/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23"
      op: "Reshape"
      input: "model/pi_fc1/w/read"
      input: "Adam_mpi/Reshape_23/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24"
      op: "Reshape"
      input: "model/pi_fc1/b/read"
      input: "Adam_mpi/Reshape_24/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25"
      op: "Reshape"
      input: "model/vf_fc1/w/read"
      input: "Adam_mpi/Reshape_25/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26"
      op: "Reshape"
      input: "model/vf_fc1/b/read"
      input: "Adam_mpi/Reshape_26/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27"
      op: "Reshape"
      input: "model/pi_fc2/w/read"
      input: "Adam_mpi/Reshape_27/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28"
      op: "Reshape"
      input: "model/pi_fc2/b/read"
      input: "Adam_mpi/Reshape_28/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29"
      op: "Reshape"
      input: "model/vf_fc2/w/read"
      input: "Adam_mpi/Reshape_29/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_30/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_30"
      op: "Reshape"
      input: "model/vf_fc2/b/read"
      input: "Adam_mpi/Reshape_30/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_31/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_31"
      op: "Reshape"
      input: "model/vf/w/read"
      input: "Adam_mpi/Reshape_31/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_32/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_32"
      op: "Reshape"
      input: "model/vf/b/read"
      input: "Adam_mpi/Reshape_32/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_33/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_33"
      op: "Reshape"
      input: "model/pi/w/read"
      input: "Adam_mpi/Reshape_33/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_34/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_34"
      op: "Reshape"
      input: "model/pi/b/read"
      input: "Adam_mpi/Reshape_34/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_35/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_35"
      op: "Reshape"
      input: "model/pi/logstd/read"
      input: "Adam_mpi/Reshape_35/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_36/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_36"
      op: "Reshape"
      input: "model/q/w/read"
      input: "Adam_mpi/Reshape_36/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_37/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_37"
      op: "Reshape"
      input: "model/q/b/read"
      input: "Adam_mpi/Reshape_37/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat"
      op: "ConcatV2"
      input: "Adam_mpi/Reshape_19"
      input: "Adam_mpi/Reshape_20"
      input: "Adam_mpi/Reshape_21"
      input: "Adam_mpi/Reshape_22"
      input: "Adam_mpi/Reshape_23"
      input: "Adam_mpi/Reshape_24"
      input: "Adam_mpi/Reshape_25"
      input: "Adam_mpi/Reshape_26"
      input: "Adam_mpi/Reshape_27"
      input: "Adam_mpi/Reshape_28"
      input: "Adam_mpi/Reshape_29"
      input: "Adam_mpi/Reshape_30"
      input: "Adam_mpi/Reshape_31"
      input: "Adam_mpi/Reshape_32"
      input: "Adam_mpi/Reshape_33"
      input: "Adam_mpi/Reshape_34"
      input: "Adam_mpi/Reshape_35"
      input: "Adam_mpi/Reshape_36"
      input: "Adam_mpi/Reshape_37"
      input: "Adam_mpi/concat/axis"
      attr {
        key: "N"
        value {
          i: 19
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12548
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean"
      op: "Mean"
      input: "loss/Placeholder_1"
      input: "input_info/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/discounted_rewards/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/discounted_rewards"
          }
        }
      }
    }
    node {
      name: "input_info/discounted_rewards"
      op: "ScalarSummary"
      input: "input_info/discounted_rewards/tags"
      input: "input_info/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0010000000474974513
          }
        }
      }
    }
    node {
      name: "input_info/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range"
      op: "Range"
      input: "input_info/range/start"
      input: "input_info/Rank"
      input: "input_info/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0010000000474974513
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1"
      op: "Mean"
      input: "input_info/Mean_1/input"
      input: "input_info/range"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/learning_rate/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/learning_rate"
          }
        }
      }
    }
    node {
      name: "input_info/learning_rate"
      op: "ScalarSummary"
      input: "input_info/learning_rate/tags"
      input: "input_info/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean_2"
      op: "Mean"
      input: "loss/Placeholder"
      input: "input_info/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/advantage/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/advantage"
          }
        }
      }
    }
    node {
      name: "input_info/advantage"
      op: "ScalarSummary"
      input: "input_info/advantage/tags"
      input: "input_info/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range_1"
      op: "Range"
      input: "input_info/range_1/start"
      input: "input_info/Rank_1"
      input: "input_info/range_1/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3"
      op: "Mean"
      input: "input_info/Mean_3/input"
      input: "input_info/range_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/clip_range/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/clip_range"
          }
        }
      }
    }
    node {
      name: "input_info/clip_range"
      op: "ScalarSummary"
      input: "input_info/clip_range/tags"
      input: "input_info/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^model/pi/b/Assign"
      input: "^model/pi/logstd/Assign"
      input: "^model/pi/w/Assign"
      input: "^model/pi_fc0/b/Assign"
      input: "^model/pi_fc0/w/Assign"
      input: "^model/pi_fc1/b/Assign"
      input: "^model/pi_fc1/w/Assign"
      input: "^model/pi_fc2/b/Assign"
      input: "^model/pi_fc2/w/Assign"
      input: "^model/q/b/Assign"
      input: "^model/q/w/Assign"
      input: "^model/vf/b/Assign"
      input: "^model/vf/w/Assign"
      input: "^model/vf_fc0/b/Assign"
      input: "^model/vf_fc0/w/Assign"
      input: "^model/vf_fc1/b/Assign"
      input: "^model/vf_fc1/w/Assign"
      input: "^model/vf_fc2/b/Assign"
      input: "^model/vf_fc2/w/Assign"
      input: "^oldpi/model/pi/b/Assign"
      input: "^oldpi/model/pi/logstd/Assign"
      input: "^oldpi/model/pi/w/Assign"
      input: "^oldpi/model/pi_fc0/b/Assign"
      input: "^oldpi/model/pi_fc0/w/Assign"
      input: "^oldpi/model/pi_fc1/b/Assign"
      input: "^oldpi/model/pi_fc1/w/Assign"
      input: "^oldpi/model/pi_fc2/b/Assign"
      input: "^oldpi/model/pi_fc2/w/Assign"
      input: "^oldpi/model/q/b/Assign"
      input: "^oldpi/model/q/w/Assign"
      input: "^oldpi/model/vf/b/Assign"
      input: "^oldpi/model/vf/w/Assign"
      input: "^oldpi/model/vf_fc0/b/Assign"
      input: "^oldpi/model/vf_fc0/w/Assign"
      input: "^oldpi/model/vf_fc1/b/Assign"
      input: "^oldpi/model/vf_fc1/w/Assign"
      input: "^oldpi/model/vf_fc2/b/Assign"
      input: "^oldpi/model/vf_fc2/w/Assign"
    }
    node {
      name: "Merge/MergeSummary"
      op: "MergeSummary"
      input: "loss/entropy_loss"
      input: "loss/policy_gradient_loss"
      input: "loss/value_function_loss"
      input: "loss/approximate_kullback-leibler"
      input: "loss/clip_factor"
      input: "loss/loss"
      input: "input_info/discounted_rewards"
      input: "input_info/learning_rate"
      input: "input_info/advantage"
      input: "input_info/clip_range"
      attr {
        key: "N"
        value {
          i: 10
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/grad_ys_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "gradients/Fill"
      op: "Fill"
      input: "gradients/Shape"
      input: "gradients/grad_ys_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/Fill"
      input: "gradients/loss/Mean_3_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_3_grad/Reshape"
      input: "gradients/loss/Mean_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_1"
      input: "gradients/loss/Mean_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_2"
      input: "gradients/loss/Mean_3_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_3_grad/Prod_1"
      input: "gradients/loss/Mean_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_3_grad/Prod"
      input: "gradients/loss/Mean_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_3_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_3_grad/Tile"
      input: "gradients/loss/Mean_3_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Neg_2_grad/Neg"
      op: "Neg"
      input: "gradients/Fill"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/mul_2/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Const"
      op: "Const"
      input: "^gradients/loss/Mean_3_grad/truediv"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul"
      op: "Mul"
      input: "loss/sub_7"
      input: "gradients/loss/Square_5_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Mean_3_grad/truediv"
      input: "gradients/loss/Square_5_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Neg_2_grad/Neg"
      input: "gradients/loss/Mean_2_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_2_grad/Reshape"
      input: "gradients/loss/Mean_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_1"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_1"
      input: "gradients/loss/Mean_2_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_2"
      input: "gradients/loss/Mean_2_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_2_grad/Prod_1"
      input: "gradients/loss/Mean_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_2_grad/Prod"
      input: "gradients/loss/Mean_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_2_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_2_grad/Tile"
      input: "gradients/loss/Mean_2_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_2_grad/Mul_1"
      input: "gradients/loss/Mean_1_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_1_grad/Reshape"
      input: "gradients/loss/Mean_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_1"
      input: "gradients/loss/Mean_1_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_2"
      input: "gradients/loss/Mean_1_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_1_grad/Prod_1"
      input: "gradients/loss/Mean_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_1_grad/Prod"
      input: "gradients/loss/Mean_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_1_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_1_grad/Tile"
      input: "gradients/loss/Mean_1_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape"
      op: "Shape"
      input: "output/strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_7_grad/Shape"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Square_5_grad/Mul_1"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum"
      input: "gradients/loss/sub_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Square_5_grad/Mul_1"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_7_grad/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Neg"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/mul_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/Minimum_grad/Shape_2"
      input: "gradients/loss/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/Minimum_grad/Shape"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Mean_2_grad/truediv"
      input: "gradients/loss/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum"
      input: "gradients/loss/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Minimum_grad/zeros"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select_1"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum_1"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape"
      op: "Shape"
      input: "loss/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/add"
      op: "Add"
      input: "loss/Sum_1/reduction_indices"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_1_grad/add"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_1_grad/range/start"
      input: "gradients/loss/Sum_1_grad/Size"
      input: "gradients/loss/Sum_1_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_1_grad/Shape_1"
      input: "gradients/loss/Sum_1_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_1_grad/range"
      input: "gradients/loss/Sum_1_grad/mod"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      input: "gradients/loss/Sum_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Mean_1_grad/truediv"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_1_grad/Reshape"
      input: "gradients/loss/Sum_1_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/Shape"
      op: "Shape"
      input: "model/vf/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/output/strided_slice_1_grad/Shape"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      input: "gradients/loss/sub_7_grad/Reshape"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_7_grad/Shape"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum"
      input: "gradients/loss/mul_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul_1"
      op: "Mul"
      input: "loss/Exp"
      input: "gradients/loss/Minimum_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul_1"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum_1"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_8_grad/Shape"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum"
      input: "gradients/loss/mul_8_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul_1"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul_1"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum_1"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_2_grad/Shape"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum"
      input: "gradients/loss/add_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum_1"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape"
      op: "Shape"
      input: "model/vf/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf/add_grad/Shape"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum"
      input: "gradients/model/vf/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum_1"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value_grad/Shape_2"
      input: "gradients/loss/clip_by_value_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value_grad/Shape"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/mul_8_grad/Reshape"
      input: "gradients/loss/clip_by_value_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum"
      input: "gradients/loss/clip_by_value_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/clip_by_value_grad/zeros"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select_1"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum_1"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf/add_grad/Reshape"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_5"
      input: "gradients/model/vf/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_5_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_5"
      input: "gradients/model/vf/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/loss/mul_7_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/mul_7_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Exp_grad/mul"
      op: "Mul"
      input: "gradients/AddN"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc2/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc2/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc2/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc2/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc2/add_grad/Shape"
      input: "gradients/model/vf_fc2/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc2/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_5_grad/TanhGrad"
      input: "gradients/model/vf_fc2/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc2/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc2/add_grad/Sum"
      input: "gradients/model/vf_fc2/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc2/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_5_grad/TanhGrad"
      input: "gradients/model/vf_fc2/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc2/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc2/add_grad/Sum_1"
      input: "gradients/model/vf_fc2/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape"
      op: "Shape"
      input: "loss/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape_1"
      op: "Shape"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_5_grad/Shape"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Exp_grad/mul"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum"
      input: "gradients/loss/sub_5_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Exp_grad/mul"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_5_grad/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Neg"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc2/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc2/add_grad/Reshape"
      input: "model/vf_fc2/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc2/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "gradients/model/vf_fc2/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Neg_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_5_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_3_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_3"
      input: "gradients/model/vf_fc2/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape"
      op: "Shape"
      input: "loss/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_4_grad/Shape"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum"
      input: "gradients/loss/add_4_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum_1"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum_1"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_3_grad/Shape"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum"
      input: "gradients/loss/add_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum_1"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/add"
      op: "Add"
      input: "loss/Sum_3/reduction_indices"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_3_grad/add"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_3_grad/range/start"
      input: "gradients/loss/Sum_3_grad/Size"
      input: "gradients/loss/Sum_3_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_3_grad/Shape_1"
      input: "gradients/loss/Sum_3_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_3_grad/range"
      input: "gradients/loss/Sum_3_grad/mod"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      input: "gradients/loss/Sum_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Reshape_1"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_3_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_3_grad/Shape"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul"
      op: "Mul"
      input: "gradients/loss/add_3_grad/Reshape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum"
      input: "gradients/loss/mul_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul_1"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "gradients/loss/add_3_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul_1"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum_1"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape"
      op: "Shape"
      input: "loss/Square_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/add"
      op: "Add"
      input: "loss/Sum_2/reduction_indices"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_2_grad/add"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_2_grad/range/start"
      input: "gradients/loss/Sum_2_grad/Size"
      input: "gradients/loss/Sum_2_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_2_grad/Shape_1"
      input: "gradients/loss/Sum_2_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_2_grad/range"
      input: "gradients/loss/Sum_2_grad/mod"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      input: "gradients/loss/Sum_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Reshape_1"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_2_grad/Reshape"
      input: "gradients/loss/Sum_2_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum_1"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Const"
      op: "Const"
      input: "^gradients/loss/Sum_2_grad/Tile"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul"
      op: "Mul"
      input: "loss/truediv_1"
      input: "gradients/loss/Square_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Sum_2_grad/Tile"
      input: "gradients/loss/Square_3_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape"
      op: "Shape"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape_1"
      op: "Shape"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/truediv_1_grad/Shape"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv"
      op: "RealDiv"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/RealDiv"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum"
      input: "gradients/loss/truediv_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Neg"
      op: "Neg"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_1"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/Neg"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_2"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/RealDiv_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/mul"
      op: "Mul"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "gradients/loss/truediv_1_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/mul"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum_1"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape_1"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_3_grad/Shape"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/Reshape"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum"
      input: "gradients/loss/sub_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/Reshape"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_3_grad/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Neg"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Exp_grad/mul"
      op: "Mul"
      input: "gradients/loss/truediv_1_grad/Reshape_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/loss/add_2_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/Tile"
      input: "gradients/model/Exp_grad/mul"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/add_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/loss/sub_3_grad/Reshape_1"
      input: "gradients/AddN_1"
      input: "model/split/split_dim"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/mod"
      op: "FloorMod"
      input: "model/concat/axis"
      input: "gradients/model/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ShapeN"
      op: "ShapeN"
      input: "model/pi/add"
      input: "model/add"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/model/concat_grad/mod"
      input: "gradients/model/concat_grad/ShapeN"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset"
      input: "gradients/model/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset:1"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape"
      op: "Shape"
      input: "model/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/add_grad/Shape"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum"
      input: "gradients/model/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum_1"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/mul_grad/Shape"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul"
      op: "Mul"
      input: "gradients/model/add_grad/Reshape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul"
      input: "gradients/model/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum"
      input: "gradients/model/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul_1"
      op: "Mul"
      input: "model/pi/add"
      input: "gradients/model/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul_1"
      input: "gradients/model/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum_1"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/model/concat_grad/Slice"
      input: "gradients/model/mul_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/model/concat_grad/Slice"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape"
      op: "Shape"
      input: "model/pi/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi/add_grad/Shape"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum"
      input: "gradients/model/pi/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum_1"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi/add_grad/Reshape"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_4"
      input: "gradients/model/pi/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_4_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_4"
      input: "gradients/model/pi/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc2/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc2/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc2/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc2/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc2/add_grad/Shape"
      input: "gradients/model/pi_fc2/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc2/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_4_grad/TanhGrad"
      input: "gradients/model/pi_fc2/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc2/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc2/add_grad/Sum"
      input: "gradients/model/pi_fc2/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc2/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_4_grad/TanhGrad"
      input: "gradients/model/pi_fc2/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc2/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc2/add_grad/Sum_1"
      input: "gradients/model/pi_fc2/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc2/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc2/add_grad/Reshape"
      input: "model/pi_fc2/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc2/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "gradients/model/pi_fc2/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_2_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_2"
      input: "gradients/model/pi_fc2/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum_1"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum_1"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1920
          }
        }
      }
    }
    node {
      name: "Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      input: "Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1920
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape_1"
      input: "Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1920
          }
        }
      }
    }
    node {
      name: "Reshape_2"
      op: "Reshape"
      input: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      input: "Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1920
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_3"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape_1"
      input: "Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_4"
      op: "Reshape"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_5"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Reshape_1"
      input: "Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_6"
      op: "Reshape"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "Reshape_7"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Reshape_1"
      input: "Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_8"
      op: "Reshape"
      input: "gradients/model/pi_fc2/MatMul_grad/MatMul_1"
      input: "Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_9"
      op: "Reshape"
      input: "gradients/model/pi_fc2/add_grad/Reshape_1"
      input: "Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2048
          }
        }
      }
    }
    node {
      name: "Reshape_10"
      op: "Reshape"
      input: "gradients/model/vf_fc2/MatMul_grad/MatMul_1"
      input: "Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_11"
      op: "Reshape"
      input: "gradients/model/vf_fc2/add_grad/Reshape_1"
      input: "Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_12"
      op: "Reshape"
      input: "gradients/model/vf/MatMul_grad/MatMul_1"
      input: "Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_13"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Reshape_1"
      input: "Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_14"
      op: "Reshape"
      input: "gradients/model/pi/MatMul_grad/MatMul_1"
      input: "Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_15/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_15"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Reshape_1"
      input: "Reshape_15/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_16/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_16"
      op: "Reshape"
      input: "gradients/model/add_grad/Reshape_1"
      input: "Reshape_16/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_17/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "Reshape_17"
      op: "Reshape"
      input: "zeros_like"
      input: "Reshape_17/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_18/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_18"
      op: "Reshape"
      input: "zeros_like_1"
      input: "Reshape_18/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "concat"
      op: "ConcatV2"
      input: "Reshape"
      input: "Reshape_1"
      input: "Reshape_2"
      input: "Reshape_3"
      input: "Reshape_4"
      input: "Reshape_5"
      input: "Reshape_6"
      input: "Reshape_7"
      input: "Reshape_8"
      input: "Reshape_9"
      input: "Reshape_10"
      input: "Reshape_11"
      input: "Reshape_12"
      input: "Reshape_13"
      input: "Reshape_14"
      input: "Reshape_15"
      input: "Reshape_16"
      input: "Reshape_17"
      input: "Reshape_18"
      input: "concat/axis"
      attr {
        key: "N"
        value {
          i: 19
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 12548
              }
            }
          }
        }
      }
    }
    node {
      name: "group_deps"
      op: "NoOp"
    }
    node {
      name: "group_deps_1"
      op: "NoOp"
    }
    node {
      name: "save/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/filename"
      op: "PlaceholderWithDefault"
      input: "save/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "PlaceholderWithDefault"
      input: "save/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/pi_fc2/b"
      input: "model/pi_fc2/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "model/vf_fc2/b"
      input: "model/vf_fc2/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc2/b"
      input: "oldpi/model/pi_fc2/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc2/b"
      input: "oldpi/model/vf_fc2/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "model/pi_fc2/b"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "model/pi_fc2/w"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "model/q/b"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "model/q/w"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "model/vf/b"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "model/vf/w"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "model/vf_fc2/b"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "model/vf_fc2/w"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_25"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_26"
      op: "Assign"
      input: "oldpi/model/pi_fc2/b"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_27"
      op: "Assign"
      input: "oldpi/model/pi_fc2/w"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_28"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_29"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_30"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_31"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_32"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_33"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_34"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_35"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_36"
      op: "Assign"
      input: "oldpi/model/vf_fc2/b"
      input: "save/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_37"
      op: "Assign"
      input: "oldpi/model/vf_fc2/w"
      input: "save/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_2"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
      input: "^save/Assign_24"
      input: "^save/Assign_25"
      input: "^save/Assign_26"
      input: "^save/Assign_27"
      input: "^save/Assign_28"
      input: "^save/Assign_29"
      input: "^save/Assign_3"
      input: "^save/Assign_30"
      input: "^save/Assign_31"
      input: "^save/Assign_32"
      input: "^save/Assign_33"
      input: "^save/Assign_34"
      input: "^save/Assign_35"
      input: "^save/Assign_36"
      input: "^save/Assign_37"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
    }
    node {
      name: "save_1/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/filename"
      op: "PlaceholderWithDefault"
      input: "save_1/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/Const"
      op: "PlaceholderWithDefault"
      input: "save_1/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/Const"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/pi_fc2/b"
      input: "model/pi_fc2/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "model/vf_fc2/b"
      input: "model/vf_fc2/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc2/b"
      input: "oldpi/model/pi_fc2/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc2/b"
      input: "oldpi/model/vf_fc2/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_1/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_1/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_1/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_1/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_1/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_1/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "model/pi_fc2/b"
      input: "save_1/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "model/pi_fc2/w"
      input: "save_1/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "model/q/b"
      input: "save_1/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "model/q/w"
      input: "save_1/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "model/vf/b"
      input: "save_1/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "model/vf/w"
      input: "save_1/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_1/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_1/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_1/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_1/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "model/vf_fc2/b"
      input: "save_1/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "model/vf_fc2/w"
      input: "save_1/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_1/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_1/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_1/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_1/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_1/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_1/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_25"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_1/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_26"
      op: "Assign"
      input: "oldpi/model/pi_fc2/b"
      input: "save_1/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_27"
      op: "Assign"
      input: "oldpi/model/pi_fc2/w"
      input: "save_1/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_28"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_1/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_29"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_1/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_30"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_1/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_31"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_1/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_32"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_1/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_33"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_1/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_34"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_1/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_35"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_1/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_36"
      op: "Assign"
      input: "oldpi/model/vf_fc2/b"
      input: "save_1/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_37"
      op: "Assign"
      input: "oldpi/model/vf_fc2/w"
      input: "save_1/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_24"
      input: "^save_1/Assign_25"
      input: "^save_1/Assign_26"
      input: "^save_1/Assign_27"
      input: "^save_1/Assign_28"
      input: "^save_1/Assign_29"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_30"
      input: "^save_1/Assign_31"
      input: "^save_1/Assign_32"
      input: "^save_1/Assign_33"
      input: "^save_1/Assign_34"
      input: "^save_1/Assign_35"
      input: "^save_1/Assign_36"
      input: "^save_1/Assign_37"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
    }
    node {
      name: "save_2/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_2/filename"
      op: "PlaceholderWithDefault"
      input: "save_2/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/Const"
      op: "PlaceholderWithDefault"
      input: "save_2/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2"
      op: "SaveV2"
      input: "save_2/Const"
      input: "save_2/SaveV2/tensor_names"
      input: "save_2/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/pi_fc2/b"
      input: "model/pi_fc2/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "model/vf_fc2/b"
      input: "model/vf_fc2/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc2/b"
      input: "oldpi/model/pi_fc2/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc2/b"
      input: "oldpi/model/vf_fc2/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/control_dependency"
      op: "Identity"
      input: "save_2/Const"
      input: "^save_2/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_2/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2"
      op: "RestoreV2"
      input: "save_2/Const"
      input: "save_2/RestoreV2/tensor_names"
      input: "save_2/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_2/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_2/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_2/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_2/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_2/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_2/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_2/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_7"
      op: "Assign"
      input: "model/pi_fc2/b"
      input: "save_2/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_8"
      op: "Assign"
      input: "model/pi_fc2/w"
      input: "save_2/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_9"
      op: "Assign"
      input: "model/q/b"
      input: "save_2/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_10"
      op: "Assign"
      input: "model/q/w"
      input: "save_2/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_11"
      op: "Assign"
      input: "model/vf/b"
      input: "save_2/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_12"
      op: "Assign"
      input: "model/vf/w"
      input: "save_2/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_13"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_2/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_14"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_2/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_15"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_2/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_16"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_2/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_17"
      op: "Assign"
      input: "model/vf_fc2/b"
      input: "save_2/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_18"
      op: "Assign"
      input: "model/vf_fc2/w"
      input: "save_2/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_2/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_2/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_2/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_22"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_2/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_23"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_2/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_24"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_2/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_25"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_2/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_26"
      op: "Assign"
      input: "oldpi/model/pi_fc2/b"
      input: "save_2/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_27"
      op: "Assign"
      input: "oldpi/model/pi_fc2/w"
      input: "save_2/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_28"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_2/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_29"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_2/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_30"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_2/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_31"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_2/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_32"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_2/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_33"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_2/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_34"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_2/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_35"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_2/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_36"
      op: "Assign"
      input: "oldpi/model/vf_fc2/b"
      input: "save_2/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_37"
      op: "Assign"
      input: "oldpi/model/vf_fc2/w"
      input: "save_2/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/restore_all"
      op: "NoOp"
      input: "^save_2/Assign"
      input: "^save_2/Assign_1"
      input: "^save_2/Assign_10"
      input: "^save_2/Assign_11"
      input: "^save_2/Assign_12"
      input: "^save_2/Assign_13"
      input: "^save_2/Assign_14"
      input: "^save_2/Assign_15"
      input: "^save_2/Assign_16"
      input: "^save_2/Assign_17"
      input: "^save_2/Assign_18"
      input: "^save_2/Assign_19"
      input: "^save_2/Assign_2"
      input: "^save_2/Assign_20"
      input: "^save_2/Assign_21"
      input: "^save_2/Assign_22"
      input: "^save_2/Assign_23"
      input: "^save_2/Assign_24"
      input: "^save_2/Assign_25"
      input: "^save_2/Assign_26"
      input: "^save_2/Assign_27"
      input: "^save_2/Assign_28"
      input: "^save_2/Assign_29"
      input: "^save_2/Assign_3"
      input: "^save_2/Assign_30"
      input: "^save_2/Assign_31"
      input: "^save_2/Assign_32"
      input: "^save_2/Assign_33"
      input: "^save_2/Assign_34"
      input: "^save_2/Assign_35"
      input: "^save_2/Assign_36"
      input: "^save_2/Assign_37"
      input: "^save_2/Assign_4"
      input: "^save_2/Assign_5"
      input: "^save_2/Assign_6"
      input: "^save_2/Assign_7"
      input: "^save_2/Assign_8"
      input: "^save_2/Assign_9"
    }
    node {
      name: "save_3/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_3/filename"
      op: "PlaceholderWithDefault"
      input: "save_3/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_3/Const"
      op: "PlaceholderWithDefault"
      input: "save_3/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_3/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save_3/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_3/SaveV2"
      op: "SaveV2"
      input: "save_3/Const"
      input: "save_3/SaveV2/tensor_names"
      input: "save_3/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/pi_fc2/b"
      input: "model/pi_fc2/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "model/vf_fc2/b"
      input: "model/vf_fc2/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc2/b"
      input: "oldpi/model/pi_fc2/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc2/b"
      input: "oldpi/model/vf_fc2/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_3/control_dependency"
      op: "Identity"
      input: "save_3/Const"
      input: "^save_3/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_3/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_3/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save_3/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_3/RestoreV2"
      op: "RestoreV2"
      input: "save_3/Const"
      input: "save_3/RestoreV2/tensor_names"
      input: "save_3/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_3/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_3/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_3/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_3/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_3/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_3/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_3/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_3/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_7"
      op: "Assign"
      input: "model/pi_fc2/b"
      input: "save_3/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_8"
      op: "Assign"
      input: "model/pi_fc2/w"
      input: "save_3/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_9"
      op: "Assign"
      input: "model/q/b"
      input: "save_3/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_10"
      op: "Assign"
      input: "model/q/w"
      input: "save_3/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_11"
      op: "Assign"
      input: "model/vf/b"
      input: "save_3/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_12"
      op: "Assign"
      input: "model/vf/w"
      input: "save_3/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_13"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_3/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_14"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_3/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_15"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_3/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_16"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_3/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_17"
      op: "Assign"
      input: "model/vf_fc2/b"
      input: "save_3/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_18"
      op: "Assign"
      input: "model/vf_fc2/w"
      input: "save_3/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_3/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_3/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_3/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_22"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_3/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_23"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_3/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_24"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_3/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_25"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_3/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_26"
      op: "Assign"
      input: "oldpi/model/pi_fc2/b"
      input: "save_3/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_27"
      op: "Assign"
      input: "oldpi/model/pi_fc2/w"
      input: "save_3/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_28"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_3/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_29"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_3/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_30"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_3/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_31"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_3/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_32"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_3/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_33"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_3/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_34"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_3/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_35"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_3/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_36"
      op: "Assign"
      input: "oldpi/model/vf_fc2/b"
      input: "save_3/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_37"
      op: "Assign"
      input: "oldpi/model/vf_fc2/w"
      input: "save_3/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/restore_all"
      op: "NoOp"
      input: "^save_3/Assign"
      input: "^save_3/Assign_1"
      input: "^save_3/Assign_10"
      input: "^save_3/Assign_11"
      input: "^save_3/Assign_12"
      input: "^save_3/Assign_13"
      input: "^save_3/Assign_14"
      input: "^save_3/Assign_15"
      input: "^save_3/Assign_16"
      input: "^save_3/Assign_17"
      input: "^save_3/Assign_18"
      input: "^save_3/Assign_19"
      input: "^save_3/Assign_2"
      input: "^save_3/Assign_20"
      input: "^save_3/Assign_21"
      input: "^save_3/Assign_22"
      input: "^save_3/Assign_23"
      input: "^save_3/Assign_24"
      input: "^save_3/Assign_25"
      input: "^save_3/Assign_26"
      input: "^save_3/Assign_27"
      input: "^save_3/Assign_28"
      input: "^save_3/Assign_29"
      input: "^save_3/Assign_3"
      input: "^save_3/Assign_30"
      input: "^save_3/Assign_31"
      input: "^save_3/Assign_32"
      input: "^save_3/Assign_33"
      input: "^save_3/Assign_34"
      input: "^save_3/Assign_35"
      input: "^save_3/Assign_36"
      input: "^save_3/Assign_37"
      input: "^save_3/Assign_4"
      input: "^save_3/Assign_5"
      input: "^save_3/Assign_6"
      input: "^save_3/Assign_7"
      input: "^save_3/Assign_8"
      input: "^save_3/Assign_9"
    }
    node {
      name: "save_4/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_4/filename"
      op: "PlaceholderWithDefault"
      input: "save_4/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_4/Const"
      op: "PlaceholderWithDefault"
      input: "save_4/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_4/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save_4/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_4/SaveV2"
      op: "SaveV2"
      input: "save_4/Const"
      input: "save_4/SaveV2/tensor_names"
      input: "save_4/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/pi_fc2/b"
      input: "model/pi_fc2/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "model/vf_fc2/b"
      input: "model/vf_fc2/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc2/b"
      input: "oldpi/model/pi_fc2/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc2/b"
      input: "oldpi/model/vf_fc2/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_4/control_dependency"
      op: "Identity"
      input: "save_4/Const"
      input: "^save_4/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_4/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_4/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save_4/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_4/RestoreV2"
      op: "RestoreV2"
      input: "save_4/Const"
      input: "save_4/RestoreV2/tensor_names"
      input: "save_4/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_4/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_4/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_4/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_4/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_4/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_4/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_4/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_4/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_7"
      op: "Assign"
      input: "model/pi_fc2/b"
      input: "save_4/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_8"
      op: "Assign"
      input: "model/pi_fc2/w"
      input: "save_4/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_9"
      op: "Assign"
      input: "model/q/b"
      input: "save_4/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_10"
      op: "Assign"
      input: "model/q/w"
      input: "save_4/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_11"
      op: "Assign"
      input: "model/vf/b"
      input: "save_4/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_12"
      op: "Assign"
      input: "model/vf/w"
      input: "save_4/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_13"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_4/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_14"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_4/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_15"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_4/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_16"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_4/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_17"
      op: "Assign"
      input: "model/vf_fc2/b"
      input: "save_4/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_18"
      op: "Assign"
      input: "model/vf_fc2/w"
      input: "save_4/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_4/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_4/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_4/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_22"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_4/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_23"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_4/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_24"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_4/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_25"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_4/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_26"
      op: "Assign"
      input: "oldpi/model/pi_fc2/b"
      input: "save_4/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_27"
      op: "Assign"
      input: "oldpi/model/pi_fc2/w"
      input: "save_4/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_28"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_4/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_29"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_4/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_30"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_4/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_31"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_4/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_32"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_4/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_33"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_4/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_34"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_4/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_35"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_4/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_36"
      op: "Assign"
      input: "oldpi/model/vf_fc2/b"
      input: "save_4/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_37"
      op: "Assign"
      input: "oldpi/model/vf_fc2/w"
      input: "save_4/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/restore_all"
      op: "NoOp"
      input: "^save_4/Assign"
      input: "^save_4/Assign_1"
      input: "^save_4/Assign_10"
      input: "^save_4/Assign_11"
      input: "^save_4/Assign_12"
      input: "^save_4/Assign_13"
      input: "^save_4/Assign_14"
      input: "^save_4/Assign_15"
      input: "^save_4/Assign_16"
      input: "^save_4/Assign_17"
      input: "^save_4/Assign_18"
      input: "^save_4/Assign_19"
      input: "^save_4/Assign_2"
      input: "^save_4/Assign_20"
      input: "^save_4/Assign_21"
      input: "^save_4/Assign_22"
      input: "^save_4/Assign_23"
      input: "^save_4/Assign_24"
      input: "^save_4/Assign_25"
      input: "^save_4/Assign_26"
      input: "^save_4/Assign_27"
      input: "^save_4/Assign_28"
      input: "^save_4/Assign_29"
      input: "^save_4/Assign_3"
      input: "^save_4/Assign_30"
      input: "^save_4/Assign_31"
      input: "^save_4/Assign_32"
      input: "^save_4/Assign_33"
      input: "^save_4/Assign_34"
      input: "^save_4/Assign_35"
      input: "^save_4/Assign_36"
      input: "^save_4/Assign_37"
      input: "^save_4/Assign_4"
      input: "^save_4/Assign_5"
      input: "^save_4/Assign_6"
      input: "^save_4/Assign_7"
      input: "^save_4/Assign_8"
      input: "^save_4/Assign_9"
    }
    node {
      name: "save_5/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_5/filename"
      op: "PlaceholderWithDefault"
      input: "save_5/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_5/Const"
      op: "PlaceholderWithDefault"
      input: "save_5/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_5/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save_5/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_5/SaveV2"
      op: "SaveV2"
      input: "save_5/Const"
      input: "save_5/SaveV2/tensor_names"
      input: "save_5/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/pi_fc2/b"
      input: "model/pi_fc2/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "model/vf_fc2/b"
      input: "model/vf_fc2/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc2/b"
      input: "oldpi/model/pi_fc2/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc2/b"
      input: "oldpi/model/vf_fc2/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_5/control_dependency"
      op: "Identity"
      input: "save_5/Const"
      input: "^save_5/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_5/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_5/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save_5/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_5/RestoreV2"
      op: "RestoreV2"
      input: "save_5/Const"
      input: "save_5/RestoreV2/tensor_names"
      input: "save_5/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_5/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_5/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_5/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_5/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_5/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_5/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_5/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_5/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_7"
      op: "Assign"
      input: "model/pi_fc2/b"
      input: "save_5/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_8"
      op: "Assign"
      input: "model/pi_fc2/w"
      input: "save_5/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_9"
      op: "Assign"
      input: "model/q/b"
      input: "save_5/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_10"
      op: "Assign"
      input: "model/q/w"
      input: "save_5/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_11"
      op: "Assign"
      input: "model/vf/b"
      input: "save_5/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_12"
      op: "Assign"
      input: "model/vf/w"
      input: "save_5/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_13"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_5/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_14"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_5/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_15"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_5/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_16"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_5/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_17"
      op: "Assign"
      input: "model/vf_fc2/b"
      input: "save_5/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_18"
      op: "Assign"
      input: "model/vf_fc2/w"
      input: "save_5/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_5/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_5/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_5/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_22"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_5/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_23"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_5/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_24"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_5/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_25"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_5/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_26"
      op: "Assign"
      input: "oldpi/model/pi_fc2/b"
      input: "save_5/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_27"
      op: "Assign"
      input: "oldpi/model/pi_fc2/w"
      input: "save_5/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_28"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_5/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_29"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_5/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_30"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_5/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_31"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_5/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_32"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_5/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_33"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_5/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_34"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_5/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_35"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_5/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_36"
      op: "Assign"
      input: "oldpi/model/vf_fc2/b"
      input: "save_5/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_37"
      op: "Assign"
      input: "oldpi/model/vf_fc2/w"
      input: "save_5/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/restore_all"
      op: "NoOp"
      input: "^save_5/Assign"
      input: "^save_5/Assign_1"
      input: "^save_5/Assign_10"
      input: "^save_5/Assign_11"
      input: "^save_5/Assign_12"
      input: "^save_5/Assign_13"
      input: "^save_5/Assign_14"
      input: "^save_5/Assign_15"
      input: "^save_5/Assign_16"
      input: "^save_5/Assign_17"
      input: "^save_5/Assign_18"
      input: "^save_5/Assign_19"
      input: "^save_5/Assign_2"
      input: "^save_5/Assign_20"
      input: "^save_5/Assign_21"
      input: "^save_5/Assign_22"
      input: "^save_5/Assign_23"
      input: "^save_5/Assign_24"
      input: "^save_5/Assign_25"
      input: "^save_5/Assign_26"
      input: "^save_5/Assign_27"
      input: "^save_5/Assign_28"
      input: "^save_5/Assign_29"
      input: "^save_5/Assign_3"
      input: "^save_5/Assign_30"
      input: "^save_5/Assign_31"
      input: "^save_5/Assign_32"
      input: "^save_5/Assign_33"
      input: "^save_5/Assign_34"
      input: "^save_5/Assign_35"
      input: "^save_5/Assign_36"
      input: "^save_5/Assign_37"
      input: "^save_5/Assign_4"
      input: "^save_5/Assign_5"
      input: "^save_5/Assign_6"
      input: "^save_5/Assign_7"
      input: "^save_5/Assign_8"
      input: "^save_5/Assign_9"
    }
    node {
      name: "save_6/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_6/filename"
      op: "PlaceholderWithDefault"
      input: "save_6/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_6/Const"
      op: "PlaceholderWithDefault"
      input: "save_6/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_6/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_2d410708c3e74efd87b2f161f65ec993/part"
          }
        }
      }
    }
    node {
      name: "save_6/StringJoin"
      op: "StringJoin"
      input: "save_6/Const"
      input: "save_6/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_6/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_6/ShardedFilename/shard"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_6/ShardedFilename"
      op: "ShardedFilename"
      input: "save_6/StringJoin"
      input: "save_6/ShardedFilename/shard"
      input: "save_6/num_shards"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_6/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save_6/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_6/SaveV2"
      op: "SaveV2"
      input: "save_6/ShardedFilename"
      input: "save_6/SaveV2/tensor_names"
      input: "save_6/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/pi_fc2/b"
      input: "model/pi_fc2/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "model/vf_fc2/b"
      input: "model/vf_fc2/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc2/b"
      input: "oldpi/model/pi_fc2/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc2/b"
      input: "oldpi/model/vf_fc2/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_6/control_dependency"
      op: "Identity"
      input: "save_6/ShardedFilename"
      input: "^save_6/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_6/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_6/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_6/ShardedFilename"
      input: "^save_6/control_dependency"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_6/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_6/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_6/Const"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Identity"
      op: "Identity"
      input: "save_6/Const"
      input: "^save_6/MergeV2Checkpoints"
      input: "^save_6/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_6/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/pi_fc2/b"
            string_val: "model/pi_fc2/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "model/vf_fc2/b"
            string_val: "model/vf_fc2/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/pi_fc2/b"
            string_val: "oldpi/model/pi_fc2/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
            string_val: "oldpi/model/vf_fc2/b"
            string_val: "oldpi/model/vf_fc2/w"
          }
        }
      }
    }
    node {
      name: "save_6/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 38
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 38
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_6/RestoreV2"
      op: "RestoreV2"
      input: "save_6/Const"
      input: "save_6/RestoreV2/tensor_names"
      input: "save_6/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_6/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_6/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_6/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_6/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_6/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_6/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_6/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_6/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_7"
      op: "Assign"
      input: "model/pi_fc2/b"
      input: "save_6/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_8"
      op: "Assign"
      input: "model/pi_fc2/w"
      input: "save_6/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_9"
      op: "Assign"
      input: "model/q/b"
      input: "save_6/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_10"
      op: "Assign"
      input: "model/q/w"
      input: "save_6/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_11"
      op: "Assign"
      input: "model/vf/b"
      input: "save_6/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_12"
      op: "Assign"
      input: "model/vf/w"
      input: "save_6/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_13"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_6/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_14"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_6/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_15"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_6/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_16"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_6/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_17"
      op: "Assign"
      input: "model/vf_fc2/b"
      input: "save_6/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_18"
      op: "Assign"
      input: "model/vf_fc2/w"
      input: "save_6/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_6/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_6/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_6/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_22"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_6/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_23"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_6/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_24"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_6/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_25"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_6/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_26"
      op: "Assign"
      input: "oldpi/model/pi_fc2/b"
      input: "save_6/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_27"
      op: "Assign"
      input: "oldpi/model/pi_fc2/w"
      input: "save_6/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_28"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_6/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_29"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_6/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_30"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_6/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_31"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_6/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_32"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_6/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_33"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_6/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_34"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_6/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_35"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_6/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_36"
      op: "Assign"
      input: "oldpi/model/vf_fc2/b"
      input: "save_6/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_37"
      op: "Assign"
      input: "oldpi/model/vf_fc2/w"
      input: "save_6/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc2/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/restore_shard"
      op: "NoOp"
      input: "^save_6/Assign"
      input: "^save_6/Assign_1"
      input: "^save_6/Assign_10"
      input: "^save_6/Assign_11"
      input: "^save_6/Assign_12"
      input: "^save_6/Assign_13"
      input: "^save_6/Assign_14"
      input: "^save_6/Assign_15"
      input: "^save_6/Assign_16"
      input: "^save_6/Assign_17"
      input: "^save_6/Assign_18"
      input: "^save_6/Assign_19"
      input: "^save_6/Assign_2"
      input: "^save_6/Assign_20"
      input: "^save_6/Assign_21"
      input: "^save_6/Assign_22"
      input: "^save_6/Assign_23"
      input: "^save_6/Assign_24"
      input: "^save_6/Assign_25"
      input: "^save_6/Assign_26"
      input: "^save_6/Assign_27"
      input: "^save_6/Assign_28"
      input: "^save_6/Assign_29"
      input: "^save_6/Assign_3"
      input: "^save_6/Assign_30"
      input: "^save_6/Assign_31"
      input: "^save_6/Assign_32"
      input: "^save_6/Assign_33"
      input: "^save_6/Assign_34"
      input: "^save_6/Assign_35"
      input: "^save_6/Assign_36"
      input: "^save_6/Assign_37"
      input: "^save_6/Assign_4"
      input: "^save_6/Assign_5"
      input: "^save_6/Assign_6"
      input: "^save_6/Assign_7"
      input: "^save_6/Assign_8"
      input: "^save_6/Assign_9"
    }
    node {
      name: "save_6/restore_all"
      op: "NoOp"
      input: "^save_6/restore_shard"
    }
    library {
    }
    versions {
      producer: 38
    }
  }
  saver_def {
    filename_tensor_name: "save_6/Const:0"
    save_tensor_name: "save_6/Identity:0"
    restore_op_name: "save_6/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "summaries"
    value {
      node_list {
        value: "loss/entropy_loss:0"
        value: "loss/policy_gradient_loss:0"
        value: "loss/value_function_loss:0"
        value: "loss/approximate_kullback-leibler:0"
        value: "loss/clip_factor:0"
        value: "loss/loss:0"
        value: "input_info/discounted_rewards:0"
        value: "input_info/learning_rate:0"
        value: "input_info/advantage:0"
        value: "input_info/clip_range:0"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc2/w:0\022\025model/pi_fc2/w/Assign\032\025model/pi_fc2/w/read:02*model/pi_fc2/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc2/b:0\022\025model/pi_fc2/b/Assign\032\025model/pi_fc2/b/read:02\"model/pi_fc2/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc2/w:0\022\025model/vf_fc2/w/Assign\032\025model/vf_fc2/w/read:02*model/vf_fc2/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc2/b:0\022\025model/vf_fc2/b/Assign\032\025model/vf_fc2/b/read:02\"model/vf_fc2/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc2/w:0\022\033oldpi/model/pi_fc2/w/Assign\032\033oldpi/model/pi_fc2/w/read:020oldpi/model/pi_fc2/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc2/b:0\022\033oldpi/model/pi_fc2/b/Assign\032\033oldpi/model/pi_fc2/b/read:02(oldpi/model/pi_fc2/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc2/w:0\022\033oldpi/model/vf_fc2/w/Assign\032\033oldpi/model/vf_fc2/w/read:020oldpi/model/vf_fc2/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc2/b:0\022\033oldpi/model/vf_fc2/b/Assign\032\033oldpi/model/vf_fc2/b/read:02(oldpi/model/vf_fc2/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc2/w:0\022\025model/pi_fc2/w/Assign\032\025model/pi_fc2/w/read:02*model/pi_fc2/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc2/b:0\022\025model/pi_fc2/b/Assign\032\025model/pi_fc2/b/read:02\"model/pi_fc2/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc2/w:0\022\025model/vf_fc2/w/Assign\032\025model/vf_fc2/w/read:02*model/vf_fc2/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc2/b:0\022\025model/vf_fc2/b/Assign\032\025model/vf_fc2/b/read:02\"model/vf_fc2/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc2/w:0\022\033oldpi/model/pi_fc2/w/Assign\032\033oldpi/model/pi_fc2/w/read:020oldpi/model/pi_fc2/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc2/b:0\022\033oldpi/model/pi_fc2/b/Assign\032\033oldpi/model/pi_fc2/b/read:02(oldpi/model/pi_fc2/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc2/w:0\022\033oldpi/model/vf_fc2/w/Assign\032\033oldpi/model/vf_fc2/w/read:020oldpi/model/vf_fc2/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc2/b:0\022\033oldpi/model/vf_fc2/b/Assign\032\033oldpi/model/vf_fc2/b/read:02(oldpi/model/vf_fc2/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "ob"
        value {
          name: "input/Ob:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 30
            }
          }
        }
      }
      outputs {
        key: "act"
        value {
          name: "model/split:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      outputs {
        key: "stochastic_act"
        value {
          name: "output/add:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
