saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_VARIANT
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatOffset"
        input_arg {
          name: "concat_dim"
          type: DT_INT32
        }
        input_arg {
          name: "shape"
          type: DT_INT32
          number_attr: "N"
        }
        output_arg {
          name: "offset"
          type: DT_INT32
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "DynamicStitch"
        input_arg {
          name: "indices"
          type: DT_INT32
          number_attr: "N"
        }
        input_arg {
          name: "data"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "merged"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Exp"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LessEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeSummary"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Minimum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PlaceholderWithDefault"
        input_arg {
          name: "input"
          type_attr: "dtype"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomStandardNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "ScalarSummary"
        input_arg {
          name: "tags"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Select"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "t"
          type_attr: "T"
        }
        input_arg {
          name: "e"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Split"
        input_arg {
          name: "split_dim"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
          number_attr: "num_split"
        }
        attr {
          name: "num_split"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StridedSliceGrad"
        input_arg {
          name: "shape"
          type_attr: "Index"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Tanh"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "TanhGrad"
        input_arg {
          name: "y"
          type_attr: "T"
        }
        input_arg {
          name: "dy"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.14.0"
    tensorflow_git_version: "v1.14.0-rc1-22-gaf24dc9"
  }
  graph_def {
    node {
      name: "input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 30
            }
          }
        }
      }
    }
    node {
      name: "model/flatten/Shape"
      op: "Shape"
      input: "input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/flatten/strided_slice"
      op: "StridedSlice"
      input: "model/flatten/Shape"
      input: "model/flatten/strided_slice/stack"
      input: "model/flatten/strided_slice/stack_1"
      input: "model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "model/flatten/Reshape/shape"
      op: "Pack"
      input: "model/flatten/strided_slice"
      input: "model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "model/flatten/Reshape"
      op: "Reshape"
      input: "input/Ob"
      input: "model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
            tensor_content: "\357\210(>\261X\204=\022j.\275\221.\337<\275\2022>o\022\372\275D;=>\307B\002\275\217QD>\"\376t=\'\326k\275\235\n\342\275\332H\217;\324]\033>\014\357\340<\314\374\020\276\241\014,<\036\371w\274\242V\255\275g\222\222=fk\255<$8+\275\213]S\275\'\324\021>{.>\276\033\003\321=U,\264\275\261\214\234=\344\003\237>\335\217!>3I\016\275\017\223\025\274Y\0105\274\031\374\204\275\375\225\331=\372}\227\275P\366b\275\277\314\232\275%\363\347\273\214\242\207\276@\020\342\275\317@$\275\213B\014=\322\204\272=\304\374\341\274\375;\270\275\273\321\351\275\312\270\335=gHW\2765\"/\276y\340\365=\200\222S\276\206\n\006\272\0278.>6\375F>\246\355\330\275\030\214@>\242p\214\275\330\376\254\275\205I\022=z\363~\275+\374\225=\034\276\245\275b\2663\276\312\275\375\275\2731A\274\360_\005\276\255\020\361\275\035\231[\276\347\300\227=Be\025>\212\021Q\276\033\257\017\276\356A\255=\375*\275=\361\027L\275T\344\340\273\313\223v<\222\303\r\273\025D=>\365\177\r=\'\270\224=ed\034\276\366\3779=\321;\"\274!\245\030>\233\276\214;\206}J\275\362\215\300\274\276\344\010\276\276\022\016>\240\r\313\275(\0359\273\251q\374\273\375\201\010\274\233\201\214=\316<\305\273=\232\211\275#}\212\275s@(\276\227\215\361\275\256:\222\275\025\341\032\276\2566\226\276}\264H\276\\\205\224\275lJ\347\275U6\332\275]=D>#\234\014\276\33395\274\'\377\021\276\322rX\274\250\013\317=\264\316\210\2757\336\212\276\323\357^\276${\307\275|w\020\276\317#,=\341\367\264=~\302\275>\201\345\020\2767\\\366\274\323- >&\031\366=f\375\013=H\375\223\2763\214\000>\221\346\227\273\226x\361=\361\375 >\373i\203\275\207C*>\363NG\276\341\325\350\275\262\251\033:#\301\267<L1\004\275j?`<ZWI\275\345Y^\275g\254K\275\005t\340=\346\002q=\273=\376;Vb\255=\255\020\217\275\223\2209>y!\217\275I\363+\275\035\\7>\230\000\235\275\357\376G=?\232\371=L\331\211\2751r?=\342\014\210\276\022\231\233\276(I)\2745\344\030\275\032\360\203\2767\250\241=V\302H\276\376m\347<\332\302\224>\376\263z>\307B(\275n\034d\275\376\037p<\205\317\005\276._h\276\010\271\243\273|~\375\275\3724\352\273+\2768\276\206\305\021\275\270\031\303=\350fD>\344_\"\275\005\n\204>\005/!>\362\243d\276#\305\203=o;^=\274\353F=\246\261\037\275d\351\205\276\311\273\326\275Ji?=|Ao=u\211\227>\315\302u\275\344\004\024>\005D+\275S\250(=\273|S=\003E\244\275\031\261d\275O\243\315=`Kd\276<\017T=\t\377\t\275\007\"\311\273[-\315<\005\334f>\007x\373=\036\272~\275U\345\311\275_\241\017=1>$\275\352J\336\275\323p\317=A\376U\274\003\2769=\002\276\224<{M`\275,\346\006\276\353\\c>\313\302\023\276nP\034>K\277\254\2751\333j\276^\014\364\275\345\261C\275QQ\027\276!\363\020\274\226\021Z\275\334\245\232=\244\033};\017W\321\275\377\252\250;7j]\275@B\353\275R\277\363=\300\0359\275\014\250.=\326uK\276\363\t\223\274\322E\021>\327\245\035>*\262^\276\262.\203\275Ao\206\276E\235\262\275\327\362\2629\372/2\274i\000R\2750\337\031>\226\002%\2766\336\313=q)\344\275\343\377\017>BQ7\275#\321!\276\271\245\276<\271\022\216=\242\226\341\275)\310\037\276\240\332\352;\201\332\013=\331\r\376<m[i\27589d=\305\222C<v9\226;\242\370\024\276\352\223\305\276\001?B\276=G\220\271\007\245P\275F\356\262\275\332\331?\275\247,\207\273~\237\357\275?\334-\273\271+P>\377\023\373\275\365X\211\275\341\233\254=8\306>=c\375e<\204\251\236<\334\362\013>m\002\203\274&\030\034=C\257\367\274\351\373X>U\361\203\274\205\201\000>\340\364k;\212\3301=\374\\\000\273j\'\032>\252\321\216>e\2472\276\376\334\320=\305\335\010=\343\035\330=\370#\223;4\252\240\276\013\302\265\275~\207\243\275x\246\350=\226S\225<d\325A\275\271\023\211\275\337ed\276}\212\\<\202\261\'\276?\254\244<J\365^=\364?\316=\266=\036=\200\331g\274\026\221\246\274Q\202/\274+\243Z\276\207p\367\275\310\2025=\022n\237>\330\245\023=\201\321W=g\001\225=\211\233\000>:K\335\275\233B\250\275\267\250\026\275\204\377Z>;0\"\2762Pf=\312L\206\274C\007\177\275\270\372\347=\237R\215\275\306>\330=\377\366\210>\317Y\210>Q\003Z>\262>\373\275\017\2446\275_\215\035\276\362\355\366\275}<\224\2752\024m\276So+>\211\301\224\276{\032\001\275=\010\177>/\300\231\274\223\027\026>E\264\326<Nd\246\275\'6D=\017z\023\274\332Gc\276?\026g\275|\246\274;P\357\030\275\026\203\333=d\033\213<\022?\001>\257j\313\274\235ib>-\2422\275}\223@=O\246\223=\255\301P>t{\225=\227\212\177\274mz\331</\277k\276\311\320\215\275.eW>\274;\303\274\007\030u=\177\276/=.\275\374\274Pq\200\275\375C5\276\234\020\246\275\377\255\330=\025h\316=\326\347\202\275-w\024>\240\020\261=\363\304 >\344\3217=\216\250\212\275\\\247n=V\255\002>_\244\220<%w:>\307\360\022\276Y\351\207\276\236\355\\>\301sd=\353\236\203>4\002\031\276\223\323T\275&\036\302\275]P\203\275\2013?\276\315`\034\276\202\321D>NC\215=u2\201\275|8\306=kw\">\032\366\341=\336\303\014\276<s\206\275|\213%\275\017\316p\275\251z\261=Vm\367<@)\023\276\275\301\324\274\257\204}\276c\024$\275\036\275G>\266\316\365\274y\367\030\276h5\220\274\301\035{\275\340\205\032\276\264=8\276\211/\202\276R\224\002\276~t\202\275\',V=`\214\360\274~\226\t\276<n\232\274\354\274\206\274\337\353\014\275\246\021(\276\330\3418\2769\234\264\275\021\032\365=7Dl\276J\365\374\275\0310i\276\257\020)\276\343\367y<\205\355\373\274\317\177)<&-\231=^V\027>\277\035M=A\236\365\2759\363\313\275{\304\214\275\376\231\262=\257/\356=>\332\312<H\350|=Q\245\262\275\215\272\024=\272\311J>\215\2150<\365\306\215\276\265\337\331\275 \003D\274n\310\003\276>\r\212\275\327\331X<\344\304\032=G\350\372\275]X\000\276\306-s\276S\236\242\275\320e\021>\216\322\330\275y\3064=\007\224\331\275w\231\220=\301TB\276\255S\023>|\327\366\275\337V\206\275\016\342\203:\350\326{\276x\250\030\276\030\322\336\275co6\275\270\264\032>@\016\244\274\226\227\365=\202hX\275\264\370\017\275>\324v:\236A\004>#\t\225<0\312c>\n\3440>EgD\276\341\025\037\276\272r\276;rA%>\364\303\213\275\207+\010\276\242\027L\275\214\346Q\276\3376\335=\026\356\242=\3409\021>K^\301\275\365\363O\275\364\023\236<\336D\306=m\375\025\275,\313\203=]\253\027\276\243c-\276\226k\021>\260#->\301z\366\275\204\254\273\275q\363\211=\023\333L>\224\316\352\274\347\256B\276p-\001\276\246\271\362\274OO2=\360_\201\275$\356\302=\212\022\035\275$\244>>\251I\007\275\247<\250<\265 m\276\227y\340\275/\227A\276/w\241=Q\355\274=\270\370%\275)\037\017=j\336\311\275\214\350\214<\222\224\013\276e\377K>T\355\025>\327\363\237=\007$\332\275\225\220\034\276@K\004;X\332S<\014\274\325<\367_\007\274X@\275=\0036P\276\315\321\250\275\2202\204\276\3657#>L7\240=E\022\342\275n\004\261<\005^1=O=m=\263r\354<\226\272\206=\274\014d<\320\031\217=\252\332\\=\364\033j\276\255@A\276\261X\251=\351\2167>\352\356\236<\004\272M:ay\317\275\035\032\275\275\026\263\320\276\375<\254<\"|H>\337K\347\275W\272\317\275\233+\356\274\350;x\275\207\"\303=\365\354\035>Fu\222\275n]Z\275-[\206=\274\327\326\275{\304i=e\225b\275\245\216@>\031\2402=\2475\022>VbL\275\177\035l\275l\256L\276\326~\n\276\230\203\003>\032\326o\275\275\222\223=(\247i\276\226\331\375\275\"\221^>a\252z=\323\354\226=\324\340\206\275t\302]\275\231\363\276\275\'a\014\276\223Z\223;\341l$\275\250Vy=\305\203z=\302\342E\275\212\010\177\276\360\320\004>\214;#\276\353+5>\001\312\205\276\360e<\276\370\312\001\275\253\3378\276\177nC>\203\326$>G\257\225=F\356\021\275l\310\207>\016\247\202\275\017\033\322<\224\026\236\273\241\340\252\275=\372I>\215\261\003\275<\346\353\275Wh\365\275\036\262\333<\212A\365=\3643\204\275\203\001\347\275D\006\211\274\337B\245=t\001\311=\251}\201\275o\335\322\274rH\251<\347\270\214>\235p\033>lv@\275\320%\244=\364\377\351\274\273\274\2227.\337s\276\266\037\237=\242R\372=\362&\231=\362\002C>\307<0\276\005\307\305<\343\304\000>Bw\277=D$\016\276~/Y\275W\371\232\275X\325:=\002\037\237\273\223\330H\276;\202,>g\302a=\n*}\275\203\230\334\275\357\265^=\213\323i>\037\230\305<\207k\r\2750\025\232<n(\311\275\220J\305<\r\346\273=\251EI>\001^\252\275\270\t\326\274\020\'\r>A\'C\275)\355\250>\361\330G<\017n >1\370\n\276\000Rs\275A\311\023\276\013\324\031=\003\263\240\274d\364\243\274\372\332\320=h\002\366=G\225\323=\326\211\007>\266\202B=R\367M>u\025\026\276\'\326\001\276V\365\215>6\005\220=\376dA\275\350R@\276\366\326\'>zS$\276Y\207\320<2)\230\275\375\331\304<\202t\251\275i\006\031\276^\3357\274\301`s\276\235\276\374\275{\036\356<\216o\337\275\365\023#\273\27603\276AW6\276V+.>\3602\037\275R\326t\273\234t^\274\005\0051>\247\254\316\275-E\024>\240\n\247\275\224\307\031\275Oq\212\275Xa\222=\255\330\t\276Q\265A>0\321\r=\001\352\331=\\\235\264\276}\200<>\330\014\334=\na\210>\361\035\333=\240\340\031\275\222\035\242\275u\312\010>\372\2417=B\347\215\2748\034)>\210\240\032\275\322\306-<\256}\003\276\027)\344=\375H\200\275\177!P=\350\203]\2760\336\270=\334\247\034\276s\013\207<\230_ \275R\210\357=\303\365\211\2751\345\177=\304\340\345\275\356\230\245=\t\241u\275L#\216\276\237Bq\274\026a\013\276\252\020m=6>/\276\'<I\275\256\327(\275]h\305\274\014\334\035\276\267E\">o\221\036\275}W\023><\203\247\275\344aC>l-r>\267!\002=\266\356\257\275\007\342;=DbF\275\265\264\270<NK \276\266\340\213\275\200\272W\276M\211\020\275\343&\227\2755y\253=(q@=\312h\252=/\305\316\276BL\337=\002z\231\275-$\017\276n2\200\275\'\t&>-f\230==-l=\235/\264=\210X9\275q\034*=g\n3>}\t\257\275*\332)\276\273\233)\276,\2169\276\213\342$>\253\210{\275\310k\000\276\342P\243\2755\266\214=V\227m\275\022\300R=%\013x\276\224\033.\274\230t`\276\t\341\363<9\265\000<\371;\036>&\016\315\275\331\214\374<\330\006\245\2763u\203=}\203\004>\365A\362\274\307\370\321\275\027v\251\275\210N\361;Y\344\t\276K\200\356=\216\207Y<\231N\312<\3177x\276\356U\026\275\023\344\017\276\313\007\314=\347\254E;[p\036>L\265.=\256\320\231\275tN\230\275\237\217O<\031\004\370=m\000e\276?\313\341=?\235<\275\374\223\367\275\273\247\246>\2057_\276\332\244\014\276\307\271z=\247\273J\275\271\311U\275\306B\333=_\215\257<)\207\206\275\034`\023\274[\241\036=\003\346(>\264!\'\275\207{\n\276q\265>\275\034\375}\275}\"\215\275\226\333N\276r\312x\275\313\034\224\275\2032\276:\353\207\353=\345~\254\275=\375q>\306~\243\275\247,\226=\372l\312\275-\237\275\2751J\232=I\301\330\274 V\255=\nLS\275\005\214/>\027K2=\2543k\273\016G\001>\305\215}\275\032\224\014\276\363\037V=5\350\234\275\006<Y\276j\307d\276\200\260&\276n\345\257\275\201\2376>\2546\031\275)\037\242\275\3043p\276\2407,=.\275\305=\021\034}\275\360\3154<60\017\276L{S=\201\017Q>0\205n\275\013\r\013\275D\264\240;+\314.>\300\216\377=w\027\273\275\"\n4>b*M\275\023\217\370=\316>\257\275W\031\003\275\235\245\254>[m\321\275\231\020<>m#\307=\272\365C>\206\251q\276\324\006\027>\316\315$>\330hl>!\336(\276m\246\312\275\025`\254\275{:\277\275\025\324\365\275\230^\036\276\274\205\003\276jB$\276\274%L\276c\366\016\276`\303\323;\313\336\006=\367C\010=\0005\'=\035\3219\275\332\265\035\275\210\334\331=\n\220\237> \372\227=We\227\275\303d\363\275*\274?>\033\241m=\026\327\232\276\274J\247=\024\212\306\274)A\t>G\327\243\273s\266\357<!\026\004>\307\332\234=\000\315\301\273\265\016\013>8B\001>( \n>\313\002(=D#R=\361\016\264=\246\345\317\275v\272\367\274\230\'==\3119\300\2755\362$\276\246\336\n>\204\277\246\275f\273E\275(Q\002=E\031\'>\000\304\345=XQW;[\230J\276^\263z\275\325\230\301=\'\316A\276\220\223\214<N\372\005\276l\202\266\275r\013\235\274\277\302\225\275\003\376I\274\362\031\265=\216y\324\275\354\240B\276{c\300\275D\211\027\276`\373\315=\223k+\276g\202\001\276&1\r>\300\234\201=a\256\027<e!\021=HQ\262\275`\375\232\275\254\227C>\023\330 >\031\256\035\276\312\004\277\275s\307\270=\026-\236=\312\227O\275\263\366T\276\":\277=w\377\244\275\276\300\370<r\275\226<\2605\003\276U\267\236\275\316\317\242\275/\006\221>\311\332\016\276\361;\313=~\354\244=\177\253\220=\010?\275\275_)\246\275&3P\275\377fm<\363\351,\275\240\010(\276\363\001\231=\023\364\235>v\240.=\226_\013=UN\326\275\272\274\205\276\314{l<\000\020\234\275 \215\272\275f\022\353=\305\226\260\275\224_\346=\301kH\275v#/\275\360\307\222=h\364(\276 \263\236\275\227\300\302<A\3529\274\327\024\265\275\022\343\247\276\263\0174>\344\224\246\274@\251\272=\324.\231;\214\"\013<\3277\273;\253\2670=\325\236\320\275\330h\017>\261\006\274\275#\232\377\274\027.~\275:=\327=\314\006U=W;\343=H\216\267\274Z\256\273\275\003/\262\275\332\351\005>~\t\000\276\336\301\354\275\237:\321=x\t\210;!s-\275_\302F\276\366\363\267<d\273M\275\002\356k\275\303\212\177=!{\266=\300\342\247\274I\255\365\274lz\360=\264y(=\177\250\254=\261\252\376\275.\361c>\265j\366<\013\204\241<\241\340\033\276\360\031)\275ZW\024>\207\224@\276\254\364B>\311\0336=,$\311\275\222\346&\276\302\354e\275k\264\203>\001\2444=\333\227=>\204=\344\275\202?:>\327\256\006\276\023\230O=\342\277n>\304\231X=r\035\365=EK\205\275\301=e;\251\3174\276\213\210Q=5\342A\275^\347\025<\273H.>\0014\237\275\200\331E>>C~\273A9M>\374\001!\274\235\305G=f.5\2766\213a\275N\335\244\2754P\005>;/:\275*z\254;t\255\245\273^\260\245\275\211\222\016\275\273a?>-\317\022\276 \2722\276\020\372r\276Y\001\272=\035\017s>\000\003\013\275\244\350l\276$Nl>\346\337\216\274\3577\261\275h\373$\275A\206\372<\026$\251=f\366\215>\r\242e>\025\336!>\225#%>\217H\226<\325\307\204=\233\353\223\276I7\003\274\360\376|>M\266(\276\212\342\306\274\205\215<=vF\017>Y\363W>0\355\214\275\375\270U\275\\\375\212\275Bk\004>\224yQ\276]CD>\365^\331\274\020\203\237\275\004# \276\2715\333\275\001\r\031\276\265\266*\275f\366Q>a\213\210\276 -(<\216)\255=qwv\275#\361\"\275\345^\226\275\376\325P>\322\0107\276\336\271\226\2740W\373=\036n\241\276\315\226\365\275\362\221,>*\376\264<\260v3\274~H\323=\324\003\210\276K\320\302=Hj\001\275\251=\345=y\0022>V\222_\276\257H\220\274s\2206\276\366\031n>>J\243=\221\3434\276\232\344\234=\210\022/\276\374\321\027\276\242\010?>\314\216\223\274\351\006\312=\231V2>\301\303\245\274X\370\255\2734t\235<\274C\027>+s9\275^\246;>O\270\202<\031\"N\273\255rl=\3511\212=B^\242=\306\330\251=\325,k\276\363P\\\275\021\026\350\272\273#K=H\024\005>\032\3027>\354\273\006\276`dl\275$4\227\275\223!\321=%\201\000\275\270\003\035>\321)\001\276\364Y*\275W$\370<\273\344\223\275\277\202\003=\204\236\">\374{4\276\005\036\321\275n\310M\274\271\307b\275ls\214;%\002\030<\265\322\331\2752\242\236=\031\276\247\2759\017\020\275\340\223;\274\320\310\316\274\361\314L=\321z\205=\022\031\356<r\224\331=\264\371\210=0s\344=zT\201<=:\354<{\007)\274\355p\327=\232\260p\276\333\302\233\276\013\342(>*mS\276\203\032\211<\223\021\351=\nI\324=%\201\275\275\207=,=w\244\025>\351\027\035<\276\223\200>\303Z\273\273N$\244\275,c\002>\r\205\000=6\343\205\274c\273D\276o#=>3\371\323=\003*\375<.\033T>\032d\027\276}\352\317<\177B\003>?\201\344\2754h\342<\361l\302\274\267cy\276f\366\\=1V\375=q\224\262=$#\n>\t\306\273<\004\305<>u$A\276\222\002\323\274\372\232T>*\364t=b\277\247=%g)=\257`\242>\031\034\207\274\227\340\350\275\265\353\037>\023 >\276P\263;\274\336\002\325<\275\265\315\275\360\025\212\275d\205\345\274{\236\232>:\014t\275\374r\000\276U\276\253<g0\035\275|\276&\276\336\025$>\261\367Z=\235\206\'\275\222f\322\275u\334\255\274:\372\270\274cf+>\365\215\007>vM\352=Yk\322<\026\330\0208\206\343\327\274!\305*\276z\332v\275\312\n@>\373\020\210\275\231\214\275\274h\240\010>\006G\036\276f\374v\275\0207\200=\323\353\341\275\324\250\354<\252\315\340\274\212\212\037\276\320\207\025>X\314<>\'\201\236\275\321J\202\276Te\244\274\022\340\027>\266\213\360=\313\267\247<\t\'\232=\253\254\363\274\260\315\003\275v\233\330=\326\234\006>\201%>\275\260o\342;\347\323/=9*b\276\352nN\275\313\233\245=v\317\t>\323\026\215\275gR\013>\016EZ=T\375z\275ZI\016>\256m\260=\232&\t=\002\355\275=O\004E\274\376\342\234=\231\355)=v\255==\200\372#\276\201\261\252=\243c\314=2\215\263\275 \375\210\276*\036m>\'\216b=\026\273\302=\305\357C>\366\0014\276\000\312\317=z!\003>\361\367\030;<%\233\273s\020\272\275j\253\003>\213\366\243\275\371\337\217=Hs\203\276\260\021\224\275\301c\030\276\225\005_\276\2012\257>&\331\362\275P\354\035\274\315\240E>jr?=nf\247\276T\350\252=7S\024=\245\305\312=\373\301\373\275\027\010\231=\223\205\016\276\320\343\222\275\242\272\253\275W1\035\275*F\034\273\334\032\362\275\262\022\r>_~\215\275M\315\352\275R\240(\276\317\036\202=\301@\373=|\253\033\276d\352\355=oi\030=\276\203F\275\310/\202>\206\242C>\331\002\020\275\265\344!=\210\177\010\276!\207\001>\240\347\275\275\025\321\252:\230KG>\031\266\"\276;\2415\275\317T\326:\243\214\224<jC\005>\025\267\305\2756\353\016\276\304\003\205<S\014\004\276\271\246\020\276\223c7\276\263\016\217\275\303\201\322=\265\252\005>\330\001\255=W\304,\276\210\013\336<\257\004i=P\306\331;.5\226\274\342\000\212=)\310\371\274\200W\022\275\027\017\227=\371!\241;\361C\214=1b\021\276\312\022\364\275H\341`\273\014\351\343\275\027RZ=3\332a=\014Q>>|\006\006\276h\177g\276\324V=\276(\357\232\275\021n\253\276\366\016\206\275\247\007\222\273\260;\033>\333\001\200\275\244\353\027\276\2355\022\276\016\345\025=\256\252\216=\000\237G\276\272\355z\275\037f>==h\203\275h\2470\275un\245\275\"\260\231\275\372/\310=\007\377\r\276g&R\274\036\035\330=9\272\340=`A\363=E \016\275E3\212>\277\340y=\030\231\323\275\013\233\023=9\303\222\274\2077\223\275`\337\374:\204*\343\275\215\203\252\275s\035\201=<\025\t=\202.8\275]\201I\275L&\303<\377\356L\276\300,\361\274ll\212=;\370\006\276.\2517\276\223\214\256>\200\347i>\005\203\016=;ok>\231\355B\276q\323\324<\221\364\346\275\220\032\034=\001\250\207>K\2726\276\240\326o\274\225\032f\276\310M6\276\026\220\273\275\251\216Z>Lkv=\016\307%=\224\356?>\313\275\002\276\002!\311<\373X\201\274\373\232m;8\342E>{\357)>\342F\240\275\010\306\n<N\302\271\275\205Q\201\275 \036e>0i\003\276JyY\276\363D\231\275\361\\6\276\235\312\212=\r\206+\275\234\330\331\274J\014\360\275c\027|\276\347\304\023\276\236y9\275\027\2602=\200c\036\276\301\332J=\365\034\212\275\210\235\236\275\0236\234=\313eR\275z\312\371\275\343\314\r\276\314\307%\276\263>*\276nH$\276$\201{\2769#\026\272\345]\024\2768a\t\275C\322$\274\311\354\232=\021\237\033>\000A0>\372\265\325;\216y\250\275y~H>\200E\257;\263\230\305\273\367*\204\275F\232\024>xiW<\030xs\275\333\312\342\274\341_\205>Cv8\276N\357\217\276:\266{\274\\C\n\276~\203\033>O7\242=L;\201=\327\311\303=\304\232>\275\337\314\037\27564\\>\251\356r<\240\"\332\274D\262\362\275\343\231A>\233D\327\275\250n =\267\030\375\275T\303\n<\220R\244=\314:\013>\310\234\354=\234n7= O)>\004\225\327\274\270\034\336\274l\314:\275\250Cd>\245O\020>W~\213\275\241\274D\275Y\350_<}t-\275\007\272\273\275\345F\253\272U~\264=\205\255\352<\34723\274\223\347\237\275\032\031\201>3\340\360</\247\262=\334Y\245\275\323\224U=\013\206s\2763]\235<,5\030\275\313\001\230\275\237\234\203=\263#&\276-\237\266\275\361\313\201\275:]\301\275\345\177{\276S\353b\275\342\3626>\256\346\032=\364\014==\307;\216\276u\251k>\263\3208\274vk\332<\321]K\276\004$\231\275\215#\213\276+E8>\204d8\276K\014\027\275\200\203\344\274\342\002\267\2757\240 \276\264\030\347\274:\325\236\276\222\251\337\275\320E\'\274\234\244\333=\2750\275\275\302B\243\275w\014\200<\\1+\275\314\307\214<\362W\236<F\253&>\235\365\223>\223,\357\275\004\211\030>\337\213V\275\013P\342\274`_\377=TK\306\275j\350\365\275\210\360\216\275H\200\266\275R^\355=V\222\n\276\343\267S<\'N\363\274n\314\270=\243&J\276j\306\214=\331i\357<>q\026\276\026m#;+W_=e\004\032=\034\237\354=\177\352\217=\311a \276\233\207v>\227\237\311=\024b\244=\006\177\226\276F|\301\275\237\230\343=\256\037\032\274\204a\361=\347\010\335\275\361\230\366<\372*\350\275\222\223\020\276pS\005=3\201\002>\236\262\362\275\230\025\037\276g\363/>qa\260\275\177\356\213\275\246\306\221\275\001\177\353\273\207\207%\276|\\!>\030\022\216\275I\261\'\275\231\302\362<\322\342\241\273\232\035%=\021Cm\276Pl\321\275\211\327\356=\266D\225>ME\231\275\314\346\007\276S\213\036\275\375\324\223=s\333a>LA`\276\313\205\000>?yB=\331)K=q])>c\001\302=\373\263\207\275\205\000\026\275\325\252\220\276\301\r\276\275\242\336|\275x#\035<\256m\025=\216\323X\276\031\264\037\275\256yM=\027_]>\377\335>=JO1>\236\021g\276N\033\031\276\211\025\207>|\315\276<\356\033\017\275QJ\"\275\313\247\221<\220\016\277\275L\010\323<\256V]>\212\332\206\275,\220F=\037\326\233>\030j\345=6\347\315\275\2579\002>z\035\364=\216O\312=\263WO\274\277\320p\276|\205\243;\217Ba=-13\276U\254\261\275\033;\036>\306\n\312\275\237\372\\=\364tz=\261\2251\275\374[\272\275\336\027\007\274\030\321\n\275X\236\221<\302\224E\276,\207\224=5\213\315;D\247c=\365U\347<\237\335\207=Y \344\274\374!_\275IE\335\275\351\\0\276~\231#\276\341\302r<\226\314\372=\207\013N\276\244\252\230=\350\023y>\306\237\305\275\360\251W\276\345%\210\275\320F\271=\375/\260=\305\244&;D$0>\244\024\324=\024\227\307\274F\252\363=OB\3669\357\361R=\335#m\276)\307S\275r\006\370\275\366\371v>MF7\276q\257\222\273a\000\353\275`G\303=\324\2213>~\026I\273O\232S\275\310\\n=g(\003\275/\341\006>\302\351\257\275j\\\371=\033\024\261=0\3171\276\257\305P=\241\t\227\275\377m\316\275\301\344\353\274\005Mk\275?\317;\275<\021+;\346o\202>\304\020]>s1\002>\350\333W<\256*\247\275\253\364\316<\363M,\276k\327`\276\326\254=<\031\246c\275Dd\221<\217\202x\275^\276\242=bO\017\276,\315\355=\254\255Y\276\013\311(\272\315\310\264=\304\312#\274\223\215\257<\366\274\r>\317!<>\2203\r>\274\n\312<7 \"\276iU\013>r\372\372\274@\304\353\275\260\231\016\276\371P\031>y\301\000\276o\014\274=\371s\026\276\024z\013>8\3565>&[k=}\n\221=\270\2422\276\227\225\265\275\254\267\207>FeP\276\016X\r\2769B \274F\332\214=F\233\352<]M\213=\201\376\206=z\337@\276\336\215+>\017h\n=\207H\205>\256\001\201<\307<\274<\2514l\273>\006\213=j\0133=\254\0226=\303\363\250=\232\267\374\275\202\347H\274\250\313}\274\334\022p=\034\215\020>l\202\203=\340Hy\276}\226\241<M\205\247=f\374\355=y\331(>\002N\214\274E\313\023>C\243\230>\016\360\310\275D\014\313=\024u/\276\\\213 =c&9\275\343\232\255\275\303\262=\276\250Xe>N+\310\274\025H\243\274v\000X\275\361\025s>5\220\r\275t\210.>o\004\362=\310ye\276O\351\353\274\276\334\265\275\006\251\260;)SS\276!M\336=\026\037\276<\003\2449\275|\273\222=\004\330\237>\\\213\342\275\324k&\272=r\204\276X\014\202\274l{\221\273a\265\362\275\346p\271<\000\254D>\344.6=v\251\375=\r\357\307\274\330\305x\276qk\336\275\334Z\010\276\003)\035\276:\253\222\274\351\247U=\305S\315<[\355R\275\263,\344=\262\223@>\276^\270\275\207h(>u\"\276=\216_M\276\225\246@\276\236a_>}\t;\276\336z\034>\016\220b=\336xm>I\2547\274\221\020\303\275`=:\274\026\211\000=\360Y\240\2754\216:\276+b\342<:\213\037>\310B\n\275\017\272\333\274\207p|=?\300\336<\272\212\366;\027  \276\311 \306\275\351\343\025>\034\314d\276J\263\207<\304)!\2768\275\016\276r\205\305=\362\303#=\205\000@\274La\023\276\214\240H>\026$\010>k\242\345\273\223\320A<\234\273\246\275\020\243\202\275z\274\n=\357\251\370\275@\323\355=}\321\330<\3268\226\275\335\363\371=\303\002q\275\312<\023\276\335\036L>z\210V\276\213 T\274l\301\004=\373\374\213\275C\306\257=\246t\007\274\366#\221<\3148c\276\2414\367\275+z\363\2740QB=(4\031=?\251\217=\nk6=%\316 >\261\363\t\275-na=\007a\233=\'\322\207<\314\027\376\275\332u\002\275A\221`>\332Q\243\275\221\372\207=\217UP\276\343K\030\276U:;>\016\207!\275\034\317\200\2743\327\214>*\341\005\276\034\323\245=\\\310\374={\270\203\276\373Ji\276\013\035S=(\273\222\275kd)>\217\363\024>\322\222\027\276>0\371=-\'i\276\227\276\211\275U\004\264\275\317R\247\275\006\177\323\275\306\312M=\tq\000\276\274\221\020\274\316\377H=\223\273\354=C\325\223<\303\370L=\305W\236=*|V>_hp>5dT\275J\255\332=\304Q}\276!w\254=\372\356~=so\207\275llF\275\023\340\n\275\200\031M<\003\271\'\276\346\356\314=\"\023\303=Qa\014>\311\3442=\207-\215=\262\346S\275\221\300\275\274\245\340A>-\002\306=\254\321\033>mp\272\275^\326!>\350\275\323\275v\020\256\275\363\'_\275\373\342P<,m\003\276\376\233K=\002\000\"\276\324\324Y\275\210Y\272<0\326\031>yw\205>\344\360\257\275V\336\'\275`\204?>\003\226\334\275\367\222\211\275I\256h>=\276\000\274Lq\345\275\374\027\217\275\215=\253\274B\347N\275\026G\n\275_p\256\275uV@\275e\370\024\275\"#\215=|\305\027\276\rT\005\276\320\323\277\274\331\371\027\276a\222F\276\374r\203\273N\0324>K\255\n>G\374\371<\351\2755\276B\275\315\275\337$\366\275.\320\030\276z\001\347\274\230\375\022\276\377\335\020>\354\221\335<$\017\032>v$\274\275=\272V\276\267#,\276q\262F>>st<c,m<\2343\016\276J\014\207\276\004\240\014>3\233\351=\032\217\021\276\246n\016\276\244e\255=\337.\321\275G\021\221\275\263\035\234\275\265\225n\276\264\362\241\273C\017\222\275\260A\023>\236\227Y\276\2342\273\2756\271q\2767\233\000>O*\270=\014\366\205\276L\302\313\275\260\331\247=#\222\036\276n\005\201\274;\372\316\274/\035\343\275m\177\025=wT%\275h\225\023>\242\364\362;+A\307=\373\227[=\037v\316\275\315\271\023>j\240#>y\031\022\2752\373b>\314\334N\276\020\354\245=[Z\344<\"+\376=\212(\360=\317\014\237\275k\004(\276\037P\244<`{\234><Q\235\274q\342Q\276D\250\350\275\256s\242\275d\354\333=g$1=\331\t\000\276\255Jq=\330\200\263>\253\250\376<\312#O<\373~`=\366\235\302\274>\367\014\276\273\346^=\254\\\214>F\321!>i(K=\034\020\271\275J\367r\275\344\031\355=\300\357;\276;e#\275z\' <\264\370\331=\200\261\273\275\300\241_\275\2177\227<\"T\345=F#\244\276\305\260\217\275&\336\233\273\357\024\004>\332 \002<j\206.\275\375\317\261\274z~L>T\032\032\272\277\321;>\273\036\221=\243\3153<Bw\344=\210\017\346\275\305\026<<\311\035\315\273\347\310W\276G\207\273\276\244\246\354=2\2300\276\003\322\262=\027:\275\275\245X0\276!\210\256:\205\273\253=\300\227\311\275\214\1771\276\327\267h=\025[\274=\247\370&\276\204\324\320\275\356\315\300\275\250\205\305=\243F\203=\265P\275=*\362\210=\276\003\317\275#\337\014\275\004d\\\276\367f\276=@\345\020>x\325\">,\304\367=\367[\226>G\213\001>A\352\377\275<\232\027\274\255wM\276N\374\t\275v\376\321=\002\261+\276L\031)\276z\207\271\273\247nb\276\362-q\276:\341-\2753\235m;\002\307*>`\341\214\274\017\320\262\275\002\276\177>\260z\250\275\361\241<=\220\301u<\220\320\020=\233\231\204\274\001b\337\275\002\023\327<\254\010\235<\306\027d<\254\036\023\275fw$=\333\202\223\275\302w\'>\256\202.\2762\304F\276_\016\344=\3307<\275\304\000^>\235L4>\300\366\007\276mP#>\004,\222=@\345\334\273E \002\276\216\337\223\275\022Bn>\317H\271\274tK\216\2741t\313=\013\360\215=\013A\021>\342%\031\276\340_]\275\206\020\n\276\375P\005\276!\372\226\275P\035\250=V+\020\276\331\315:\275A\317&>\335\364C=\256\225\263\275\375\313\357\275\323X\211=Pn\300<?\340\307\274X\001\035\276ks\213=\301\341(>\361\205\332=5\370\274<\373\'\221=\273z\022\275\257&\022\276\336O\001\276\177\355\217\274\031\235\242\275\313s\302\274\255\006o\276q*8\276Yks\276s<\312=q\t\023>\262\237\003=\303\220\243<\352\200\025\276*\352o\275(v\377\275e\221\235\276\210\361\241<\331mz:J\327@>5\374\016<\267\004D>I\177\306\275\024X\226\276Z\272e<\377Jf\276\244\375\256=H\201\005>%\250\354=\035Aa\276\217\027\343\275f\304\225<\265\314>\275\360\303U\276\322\222i=\243\347\006>\'56>\264\325\366\275j\023\346=\205[5>:\37779\357\200\n\273\221i\256=\356B\"=\2464\344\275\301p3\276\345<\341<:W\227=\316\333\207\276\312u]=\245\2326\276\275\334\223:\264X\023>&\235\301\275\021\271\262=\004\020\250\275\362\016\023=\327\324\024<\336=+>Ab\010\276^Dp\2764\362\211=:3:\276{I\316;\310l\207\275\316\371\212=\207\0063>\271\034\000=\002\r/<a\335f=\360X\255<\306\032\254\273g\271\222\275\261\273\t\276\306\016B\276\2442\000\275\353\333\036=\244\016j\275\304)1\276kds=\254\200\317=\031p\003\275\024\000\336\275\257\227\037=\233\317\323\275\010\030G\275\317\364;\276\222\346\244\275\370]o>%\254d>`\350\254=?qF=\005\326\262\275`7\017\2769\2373>\241\234\232<:\316\036\276tCL\276\274Y\345=\261\357\354=y\306\007\276(JW><\337\213\276\2024[=\205d@=\362\204\251\274H\030\352\274\223,\204\275h\341\304=P\0242>\207,\266\275R\230:>\250Y\010\276\314Xr=\302.(>\236\352\253\274U\240$\275)g\321=\026\204\007\275\034\026[\275J\177\340\275\366\030J\2743\004\263\275\3340\226\273\223\026L<\005\374\252\275\351=\006\276G\354y>\222\025;\274\271\210\245\275A\315&\275h\270U\276U\035\034>\252\030\233<\222\225G;\373\214G\2758w\264\275\372$\346\274\025\366\001\276\245t\235\275kUD>Nt\r>\363v\252\274D\035+>6\335\000\276\201\350\351\275er\000\276\327g\017\274 \311M\274+\232]>\237@5>us\t>9=\366\274\327\247\350\274\341\302}\275N\233\003\276i\365\276=\n.\027\274JV\010=\351\215\217=\3334\371= \226\242=l\254X>\2672}\275\375\203?<\215t\277=\260\313\305\2757\204I\276=T4\274{X(\276\233\321F=!\254\214= \340\333\275\034\0276\276\024FV<\010\373\006\2765!\326=\372\263\032\276\036X\266\274Y\004\262\276H\203\272;P\237\006\276\031i\031>s\316\220\275\240\'L>\365\313\230>\332I^=]\330\336\274\315\227\300=q\223\274\2758\363\217\275\277\232\006>-\177n=\305\370\346\275\337\266\350\275\2113!\275\265\006>\2768\031(=S\273)=\375\273\002>\335A\344;\346\373\362\275\314\300\373=6\t\377\273\021;\300=8!\322=\006\005\232=\373:\264\274\257\r\265=\371$E<\302vL>b\244\026\275Jq\001\276\0337^>}\307\007>\377\315\233=l\267\004\274%\353\024>3\325\004\276<;2\276\277|\225\275j\356\357\275\253}\201>\255\240,\275\000\257\306=q\300\216\2768\373\224\274LMf=\210\020\023\276)=\347\2746\010\237=9\004\272;\r\253\236<5+r=2\361/\274\255Xw\275\316\252\220\274\000a\265\275\034\230V\276\031L/=\251\221\313<f\357\260\274d\320\232=Z\327\241\275\301LN>\233\3360\276\234+\330\275T\r<=\314\260\352\275\t\t\032\276X\224\230=5\316\254>\233\333\246\276Z\003\253\275\225\257n=\355\351\221\275i\"\201=@\350\267\275sn&\276\247z^>3\177\357=\272\276;\275\302q\364\273\000\301G=\354\360\014\276\356\351\271=\377O\220>X\273D\276\344\nM>\363\241\321\275\247\305b<\352\232F>H\270c=X<\326=c\022\026\275iD!\275\233\212\273=\362\271\373=IZ\326\273\271<\031\2766\274w\276C\000\244=\321\356\340<\370\263s>\233\257\n>?\032\231>@\031\345\275&\275\215\275\332V\275=\033\346\031>\322\261\300\275l\240)\276\221=\330=\272\3066>3\351\005\275)\211\203\276\316\361\236\275GV\r>aj\247=\320\313\273=g\345\266\274\026jK\275\002\017\263=\031\024\265=\234F\004\273\003\230\010\276U\206_>u,\224\275.\"\244=w\024\301=\237\362o>Ht=\275\t<p=$\034y\276\333\236.\276\272L\266=c\333\027\275\310l\200=\200\213\250=\312\247\210=(n\307=\033\332\212\275\231\270\340=\231\344\010>fAv\275m\361\261\274^\200I\276\257@\205=\360\023\000\276\330\232\256=\213\317L=\330Yr>l\\\300=[v\017\276\246\301}>\347\301\302\275\317BE<\325t\377<A\022\200\276\020\212\326=K\263\355\274\254\362\354=\213\032\242\275/\366\213\275\231\373m=\223\336_\276XY\227\275.\340\247=\203\213\215\274x\245-\276\177.\304\2759\343\021\274m\332\001\276\232F\316<\326\233\350\275\347W\277\275Ph\222\274\002\036P>$%A\276lMh\2757[\022>\337\276@>\220\3606=\217\202\257\275\350S\331;\263\260\r\276\261P\t\276\213\263+\276u\243c\274%\030\265\275\234\252\313=l|S=\250iW\275Q>\205=\353\020J\276\314\013\351=\031fY<{t/>\250\223\227\275\212\276\202=!\367\343\274l\270\336\275\375\251\230<=\221\336=\0229\005\276\365c\014\276\016U>\274\376\024)\276\007\224\034\275\177s\033=Y\263\241\276\031\247M;\0255.=\305;\206\275\314\3300\275\333\273\026>\254\t\272<]x7=P\335\330\274\263\256\305<\373\312Y=n\245q\274`\333)>\271+\304=\254z\333<\252\241\007\276\0020\344\275C\022\\\276\334\3638\274\324\017\001>,\235\204=H\271\227\274U\\\036><\237p:\321\2441>\264\225W\276\252\026\311\276\267\261\202<\\\2150\275\020\016\215\272\224)\327<\362\n\033>\370\273\335=\376\027\343\275\300]e<\362\021\006\274!\234\211=\246\307\000>\370\314\260=\n\360&>\201\211~\275\365C\230=\305\376\206>Ds\333\275\232\013\000>\200\314\325\275\205\250\001\276\373\211;\276\240\340\243=rN!>\336]T\276Lh\247\275;\357\364=\203\314\003>we!\276:\220\023\275\275N}\274\331zd\275\013\303\206<\246\027t\275\211$\027>[X\t\275\246+\002\275^6p>\240\375\341=\246\371\337;\252|#\275?\033\252=\020LX>qZ%>#\240J\275*\233\213\275\366\370\336;e4\222\274\370\247\342=\366\221\200\275(\023\227\275\344\324[<\230&\225<\030\217\217=\233\233\327\275\350\224\327>\254\233\037>\275\357\241\275\264\263\n\276W\364\265\274\303e\324=\020>\333\275;T\214=d\264\014>\336gY;\267\316P\276\261\207\024=;\367y\275\357\324C\275CQ/\276.^\212=.L\301\275c\256\014>\205\014\205\274\025\\\'\276T\3166\276\263k\342=~q\312=\225\207\010=\371\247\212\275_\325\331\274\325\241\231>\021\035O\276\001h\026>\327\327\034=\037Q]\276\361M\017>y\3042\275\244\303\323=+yA\275)\034\020\275\341\316L\276\0317\201\275\006s\304\275\027_\261\275\003y\366\275o\367c\275\363\344\334\275\327\316G>\375?A\276\352L\212\275\264e\223\275@\247\327\274\255\033\325\275}b\014\275\306\320\255\275\275\377\336\275\265\230\"\276\312\333\247;\3051\262>\3474\314\275y\2339<K\253\234\275\204;\230>\023n{=X\332\016>\025\261\351\275\232\277\323\275^\345g>Ae\266\272U]\013>\313-\334\2758\334^>\205\2408\276\271\264\237\275\024\351\204=\244\226\014\275\377\027\234<\202\375\257;\027\360\032\275\315\016J=(\371\025=\340\370^>\211\027\343\275f\273\207=\255\210\270\275\306\031\364=S\243R>\026S\350;:\367o\275\345\272\256\273\252\362\361=gt0\276\020\236<>\300\250\326=y\204;\276Bm\365\275\221r5\276X\340\264>s\374\256\275\2508\216\275\230Vh\276\032\360\275;\306X\215\276\232F\031\276\276S\260=YY\235\275\246\277\026=EW\241\275\177q\000\276e\027\230;\273\270\263=\204\250t9\333\0221=>\221\326\275HU\r=\320\251c\275\301^\025>*\322\310\273\036j\251=(\204H>#\032>\275\022\242\264=0L\225\276\360v\264<\240H\022=\356\nv\276\371\217\006\276mH\025<\377-\257;r\026\277=e\273\365=\013\214\267=3f\340=\260\222\n>r9\362=\2154.\275\276y\340=;\376\267\274\237\325\223=\214w\254\275\331~\204\276\322\332Q>g\2021>2l\277\275\306[\212\275\264\254\034\274\212\343\364\273\004\033f\275l\201\'\276\310\"h;%Qq\276\364G^\275\274\221\243=\347\261\"\274\364,\261=t\346\'\276\306&q\274\253w?\275E}\023\276\247>\t>\370\300\361\275\'\310\200\275\033\017(>S\036\323=|g\313\274\374\324\360<3\263\251\275\206\257 \274\310Jo=\355\351\233\273\305\'\260\274\262\243\003;5\213+\275D\332\013>\237\321\031>i\0149<<\266e\276\035\t\322\275\313Y\270=\263\235\265\2755\210\337=\371R/=\004\266i=\213\274\030\276\003\r\020>`\014T\276$\301\224\275D\002\313\274\221_\313<\010\211\207\274\255\017K>\177h\006\274}\2446\276\363\311\025\275)Ar=H\377d\274\213og\276\321\315\212\276\002\316\334\275pn\331\275\363\303H>\374-\300\274\232\370o\275\322\032\222\275\352#V\276\225\000l>U\307r<\227v\365\275\260\027<>\355X\360=\223\233\253\275\246\352G\275\340]z\276l\315\266>+Sf\274\333\364I\275\267\'L\275\007\324\023\276\320k\325;\231\021\272=_\266\266=\354\237\\=@D\237=\305X\215=\236g$\275a\006R=\rl\271\275\013\272\212\275\0165.\276\037*\034\276[\267\332\274\367\240\336=\314?e\276?1\231\276\351-\006\276\352\003\256=\\\275\032<\'\340\021\276\364\302\024<\352xO\276\252:\237< aP\274\315[\264=\007Bk=\356\025\276=\216\223\016\275\r\t\030\276\201P\206\274\003\034?>\376]\210<\354\242y=\345\212\004>\\+\360=\206\351\027\276\303\271\376=/\313\254<\324\301u\275 \310D\275\367\321\271\275V3\247\275\2650D\275,\254$\276\300\022\026=\302\177\r\276:\332\301<^\215\373\275\300\371V>\027\266 \276\373N>>\3732p>\303t)=o\346n\275zg\001\274\375\212N=&\n\315\275\341\223q\275k\007A=\260$\215\275M\325\333=\222\303\321=\'\212\257\275\265\343\221>\343\246#\276\225\033\002\276@k\017>W\r\035\276!\322?\275\013\\\312\275H\234\222=\027\200\201=\350-=\275\361Y\250\275\277)v>\364\000*=\351%\231\275\344\233X>\t,\241\275\005E\371\275\353\254\027=X\327\022\275Z\"\335\274\256\323\026>|\002\\>\307?\220\276t\326\246<7\374L\276\322\n\331=g|@>$O\'>\270\335A\276\307>\\\275\305b\323\275\034\212\014>D\214\273=M\031H\275\341\371\347=\224\352\354=?|f<6\316p>\231\240\034=\304\344\374\275\221n\177=\275\010\272\274g\177\344\274L\2611=G\352q\2748\021\362=A\212\243=\245^\320=\213>\207<c\300\000\275\351\233\252\275\365\322b=\261\373%\276\013#~>$\r|\274\272\355\317==\343\013>\017\237\026\275\312\331k\276\'e\342\273\317\203\274=:S\214=\353][=\323\307\004\275\354\354\021\276\355\265\263\275\236\314\234=#v;>\021\014\023>\365\345\244\275V?/\276y8\020>;0\013\275q! =,~\237=}\210\005;p\004\020<\262\r\231=\241\221\250\274\227?o\276\302\256Q>\357\306A;p\3571>\373\344\211\275z\n\270=\'\205\r\275\376\006\247\275\276/>\274\017\223X>a\232z\276\2027\225\274T\006\037=!\205\023\274\264\376\301=\250\246\354\274\263@\240\275\257I\354\274\355\242G\276x\2578\275\2645\224\275\333\332\264\275\354\367o=\335|\213>j\0331\274.0\352<H\310\223\274;\220-\276\013jr>}*1>\266\376\250\275\240En\276\220E\274=\201\200\000\276D\362\314\275b\335p>B\337\352=^`\006\276\016-\374\273\"\221\022\275\201\367\027\276m!\350\275\275\262$>r+{>\324-x\275\261L\020>F\014\024\276-Qj\276\267\020\354\273Y\211\225=\036\213\033>\273\266[>\335J/>\225\247\264<\t\200W\275\341\014\335=(\017\271\274\337\007\235=4\261\\>\245]\'\275&z\004\276\366>\246\275I`X\276M\253\264<Y\333)\275\221\2254\275\363G%\275\371\265\240\2749x\250=\017u\301=\374\006\274<A\343\344\275+\005g=\277pM>A\270\036>X+\335=\"T\365\275\361x\030\276\211\013_\275\266g\212\275\335_+>\222\032_=F\231\032<@\260W\276\235\362D\276]:5\276O\213\262\275\256\233\331=w\020H\276|9\300=\\\231L=\351h\351<\370\243\026=\373@\330\275\362S\207>7\n\250\274\021\003\222=M\231==i\0017=\302@\341\275<3\272\275\314/\365\275\235h.\2761\005t=\211*\000\275\327oE\276\224\345\250\274\333\345\240\274\310\345\302\275\314(\006>\013r\304;\212\236\006\276\307\217\026>\352\201x\275\323\345\374<UXD>\371vj=*;\311\274\303m\256=(\206\224\275\004\033\024>\256@\r>};>=R\223\016=y\370\200>|\\G=M\035H\275\321\001{\276\327F\230=\2570\227\276:\323X\275C\337\204<\222-\035\276$@\177\275\310~\252<\030a\315<\345;\244\275\035\275\203\275\036oY>\347\242\300=~u?=\240\256N>\266)\244\275\367)\233=\005\235^\275R\357\200>\220E2\275D\016u=\363\\5>AZ\204\276\010\267\217\274A2\355=i\363\206\276s^:>\252\305\314\275{K\344=\013\340\373;\362\275^\275\240\257\004\276\273Hs<\204:N=\314\330E=\307t\217\275zNX\276\261\321.\276\354\252\323\275\367\306\006>\373\3731\274\350\352\230>\273\034\n\2763D\221=\232\330\013>\216\246\307=\017b\232>*8\214\275\253\306\013=3\203\314=\367\266\351\274t\220#>}\3517\275\t\265\037<J\213f\274\351\356\321=\021\261\302<+\t <f\3460>\235T\252\275\035\"=\275\247\230\314\275\211V)\276\341\303\322=\006UB\276\246\007\017>c\324\002\276\255\250\321=\317\021-\275\212\263\253=\204\374\323\275\232\374\214=-\230\227=U\305\223\275\376\307t\274\025\r\023>b\266\016\275\357\307u=\304\003z\276\373~p=\303\276\004\276A\247>=\230r\221=*\2006\276\375dY>A\264y\275\001\000z<\270w\332=\005\334k\276\210\205`\275XZ\034<B\"D>\231Aa\276\245\333\026>\177;\364=\232\365\223\275+\243\362=\020_\274=.\257\266\275\rY\222>\330:\334=H\365\351\275\332\222z\2767\r\325=\022\322\345=\270\376\233=\341\232V=\n\254\303\273_\345\223\275\361\243\266\275wT\223>\243L\304\274\217\314\250=\320%\224=\335b/>\302H\026>\230\331\203\275\374\2370>c\344\211=\250\347S<X\206\016\276N\242\272=\216\237&=,rL=W\002N<\010\204\251=\270\266w>sY\252\275>\350\257\275\327\026\361=L0\245=\363\3466=\272t\251\275V6W>\362;k\275\256d\031=\014\033\374=\262*\370\274\324U>>C\332\271\274\034\177\230\274;\373\265=\021\302g\276\203\0001\275L\2735\274kr >\266SX=\220\026}\275\250Ra\276\332\301 \274\316\001\010\276\240\013\324<m\200\262\275\375\301\247>\341\366K>sM\017=\276\204\026>\036\352\002\276\236r>\276)\202\007>\243\3154>p\245\356\275\201\025I\276 \020,<v\274\255=o\331!\276\261x\260=\221\367\313\275B)\r=|\2724>\177K\346<\314\341\331\275,\215L\274\026\210$\276\023O\376\275:\030\262<5\365\035>lT\200=-\364\257=f\005\001\276\271\250\224=\240\207\371;\361\275\303=\365\006\r>\360\361\225\274w}Y;\327\307\231=\350\336]\276\333\036[\276L\205\306\274Y\031A=\363>\355\275\013J\'\27688\030\275\364\212\312=\0006.>\324V\025\276\245\312\357=C\241\014=\241\002;\276\330?x\273\327\"\231>\236_\265\275\206\257\217>\334f\330<\24487\276\023\006\203=\356X\327:\256\373\221\275l\264\376=V\245\272\273o^\027>\257\023\303\275\236\335\304=D;\263\275\334\353R=\311\256\254=\266\"\027\274[6\r\274\273h\334<\nl)\275\220\307o<\274yG\276\210i\246\274\201OE\276%\207:>s\200\002\276\004\3276;/\270\271;U\360\253=\033\262\274\275\334\n$\2766\003\361\274\234h\245<\006\2252>\315\366\026>\022`\211\275\2500\204=>\250\022\276z:8\276\014 h=0\303T>\325\200\246<\233\000\200\274\345I\010\276&\236\261\275e\000\305\274c>|>\023R(\276W\337\221\275x\201?\275X\356-\276+\nG\275\301\322\234\275\312\022\217\274\306\200\243=\2610\027\2762a\033\276q\272\257\275\r\371\375=\352\356\232=\261\361\363=C\273\017>2\255\266>\006\266\025=7y \275:5\237\275\377I\305\275\031D\230<\227\226&=\253\256c\275\2045E>\006!S>\241\321\224\275\264q\000\276E\361\263\274\321\221\006>\016\315\361\275\211\333\247\274\032t1\276\231S\303\275[{b\272t\255#\275\324\202\">\300L>>CVV=u{\001\276Y\344\234<8S\332\275\t{S\276I{_=eP\261>\361\\\333=\317\323o=\333\276\220=\257\"\320=\342\021l\276\234\016\031>\003c+>\2434\001\275y\003\004\276\213c\321\272JoK>/\367\210=\355\246\313\273\371\327\036\276\304\337\201\274\351\372\330\275\336H\247=\027\"\026=\336^\r\275\262g\026\275\007\360i=\203\371#=7\0060\275\201\023\305=3\315o\276\024\267\247\276\370\234\246\274O\272\027\276\350|\220\274\256\024\037\276h\221\325=\351g\224<,\220\333\274x\005O\274?PZ\274L\342(>hk\013=\221\357\r\276\262\024J=\323\364\027<\205YH=\316\031\217>\023\'\251\275\315x\324<\225E]>=\244#\274R\033\340=A9l\275\250$:=\210\211\031\275\340\325b\276\333\225\323=\252(\r=\222yd\273\253\323\221\275\227pH\276\355\226\251=\212*$>\313F\035<\221\347\276=]d\250\274\377\027\204>j\262\267=\'\333\037\274\336E\223>r\254l\275*a\023>\352j\343\275\261\314\272\275\365\036\006\275{\247\204=\270\254.>\216\203\006>\227\264\177=\373j\006\276B\345\016\276\360\227\002<nu\366\275JJ\231=\372\317\222\274\256\240n>MG\031\275\265\203R\275U\263\371\275jJ3\274PVS\275\243\247i>\226\216\225;\2173k\276\240\244\243=\027\264<=\352\217\014>=\315\212;\201\232y>\224L,\276l\274\223\274\365\251\220\275\221bS\276~\177\236=\214\312q\274\316\351\342=c\242H\275\023\356\244<\257\336k\275\305\200\343=c\331\263=\026\315\345=\032V\302<\375\364k\272.#6=\021qP>\312\032\215=\246\"\352\274\225\273}\275\321e\211\276 &F>\371\215I\275m\0143>`PZ\276\227\322\237=\242H9=4\022\374\271\223Xi=\315\244\217\275E\273\n\275\003\221O\275\373L\374<\235j\361=.H\030>)\247\326=5\302\245\275\207\225J\276\351\320l\276\033s\337=\342\006m>B~\314\275\030\227\216<e\242q<\001\2574\276\215w\013\275\01082\276H\231\016=q^\206\275\261f\203\276\370\210\300=R\360\204=\243m\300\275F\356\345<\371\276^>@b[>\024\033\365<\225\251e>\377]\213>\321\320\212\2758\363U=j\352\311\274XX\216\275%\010\302<\021\270y\275C^\327=\200m\\\276\217\365\215=\356]b<0\233)\275\005!\017:\272\202\225>\347\'\035>\341\260\305<{\264\316=\336\2525=b\020\202\275J\362e\275X\377\036\276O\247\234=\017v\342\275\313\316)>e\353\306=;\371Y\275o_\016\276\231\025*<\334\\\236=\341\361\216>\351h\014\275s\254\353=v:E>\221\365\027>\021\253\370= \324\216>[0\326=\016s\250>*\326I>~D\246=>\301k\275[\247\213=O\330\005>\355\251\353=\222\373\262\2753!Z\275\335\r\270\275az8=}\312\300>\273\376m=\272\030>=\267\3261=P3\345\275,=*>\214+k\274\377\223\215\274D\335\336\275\213\350\365=\312\3038\276\314o\375<\373z\331=\262\326\004>\232\322>\2765\250\242\275%\232\355<y\303%\275\0379:\275I\354\007\276\306\311\'=\341,\324\275R.\200\275\322gy>\023\004\213=J<\305=&\213\326=\207s0\276\210\204.\276\002\013\003>Y\\\361=\360\204\211=j\375%>\346T\264\273\177\277\257=[\231\354\275\303Z!\276\010\255\306\274\2750\363<j\234\365\275DS\232=\302\210<\276A\250\275\275_\331\n\276,\372\371=\223\214\255=\037\237k\275\014\325D=U|\202=\365\200\264;\346\236\377=\216J\203\275d\321\007>ce\020\276\235X\006\275\343\353N\275\271x\347<\345j\004>v\236\277=-\252\340\275$\300\005\276\350\361\013\276/\2455>{\257=\276\2201\362\275.\024\037\276Z\275\023\276\265\221&\276\366\320q>t\351\311=\375\237\372=\365Te>\274\025\233\275\251\315\344=;\034\213\274\342\223\327=[\032%=\302\277\376\274\037gv=(W\335\275\2155\226<\013\256\340=,\030i\275\030[\346\275\213\030U=:i\266\2750$\376\275\357&q=\031u]>"
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 30
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/w/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/w/read"
      op: "Identity"
      input: "model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc0/b/Assign"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc0/b/read"
      op: "Identity"
      input: "model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc0/add"
      op: "Add"
      input: "model/pi_fc0/MatMul"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh"
      op: "Tanh"
      input: "model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
            tensor_content: "\343\214.\276|3\005\276W f=3\206\n>c\306\003<\001f\353=^\0278\276 \355_\274\272\335t\276\232\266@\275.\017\003\276\372\340\302=}\002\224\275dcr\275\021\3226\275r^\312=\342\271;\275\006\324\353=\366\204I\276\270\334\326\275\310\337\312\275\311\3122>y\217\335=\314}\\>\230\240\205\274h\324\001\276\261;i\275>z\001>\275\352\210<\251:D>\307\177\'>\357\004]>\n\260\">Y\220\202>X\265\033=Y\256\243=\243\207\270\275]_\325=\374m\033=\245\261h=\204\351\n\276\250;\206\276+y\n\276\036!\213\275\304R\035>\032\344\246=\277$\246\275\314\245\366<\343\r\347\273UQ\033<\023Ts<\251\372\'>\232f\277\274\'\364\033>M+\221\274\360\006\364=C83\276\225\356\266\275\327\240\031>\355%\203\275\3749~=\337\322y=\366\335\347\275sy\212\275\325\310\022\275\036\207\\\276\326#8\275\222\377\003=\363\tX=\250i\266=[\356\217>\024\355\362\275\250\2638\276\222\356\010=\005\225x\275F\266\001\276F<\311\274\273\223\321<\341\370\200=@\255+=n\004(\274V\005\206\276\3104\232\275\266\037\272\274\334\357F\276\301\257\002=\013<\324<\002k\357\275\223\362\347=ON\215=\374\245$>S\007\013\276\000K\235\274%iA>\307\273q>\205m\362\275\013\345\315=bN\220\275&\321\225<\337\007\215\276\341\006\253\275Q\205\273\275\n%i\2759\024\224\276\225W1\2762\273\013\275f\007\021\276\265\023%>\250B\001>V\304`=\000\325C\276I\307\212;\367[/>\306\361\327<\\s\316=\336\2715>7\t8>g[\362\275\340L\306=\244\2062=\r\002\\\275\341\210\306\275\253b\353:X.\263\275\371\202v>\216N\331\274\272\305\321\274|\365%\275\323\340\231<\032\377\036\275\236!\"=\312\371\311\275\303)\363\274(\236\201>\270\\\267\273[\263I\276\036\362\207\273\232\010\340;\355\3553\2753\026\266=\020\3350\276\310\312\272=zR\263\275Um\343\274\r|K<\305\021\275\274\241\372\373\274\246\205\231;w\304f\274:\373\202\275pg\013\276\006\301\252\274\321\372\204\275C\242\004>s\026\010\275\225\252\371\275\316\\4>\274TO=P\353\026>\261\274\326=R\222\023\276H`\264=n\222\027\276\244\037\036\276\276\335\010=\236\314\250>\034x\224\274Q+e<\221\350\220\275\217\020\324=\227\263\177=\232\332\321\275\003\345\365=E\263\271=C%\235\274w\360v=\366\220p=%\246\353\273\225p\006<\304\2148\276-y\364=\344i\217\274ES\037\276\262\334y\274\200i\004\276\313/0\276\242\333:\276\365\232\225\275\246\344\222>G\312q>&\242\234\272l\033h>\204iz\2753\036A\276\360D\017>\261\007\333\274@\261\211>x\323\257>dQ\242<\335\252\341<\270e\017>n\036[>W\252\003\276\327\031F>E\2375\276\t\274\247\275\275].>\216{\340;\r-}\275?>\206\275\360FF>\006q\006>\245V\232;\272A\330\275\347r\241<@g\023\276\302p\017\276\001\273\t\276\310\342\366\275\240U\375=\201\362\210>#<2<\276\034\322=\t\314\366\274\236I\277=t\240\363\273\362\251%>\3354b\275\215E,\276\274\247\036>\030\220\304=\214\373\003>i\232a>@\\\301=\332\332z>\350\031\245=\'\227\026>\223gf=\265r\301=[\017Y\274\312I\007\276\235\222\031\276I\267T=\"\2645\276Ut\321\274\270G\351\275\304\232y\275L\315\302<\322x\324\272\275\205:=\347\212E>\0361\325\275\213\311J=\330\343\223<\020\325s\274J\325\221=\361\266o\275@\263\226=\203\310\230>\325\341\244=!\213\301=\211V\t\275D>\"<\r_\027\276\tu\\\275\251\353\360\273g\025\241\275\252-\253=$\353\r>\357=\010\276\001C\211=\347\330q=\241\026\345=\353\247\235\275jk\220\276#\246\025\276\347\227\224=nh\337\274sZ1\275\345\243\010\276\327\344=\275\301\212\n\275j\200&>\253\317\230=\352|\">ljE>\3242v\275\3353\201\276\"\263\207\275\340\300\377<\202|C>.\t\213:\270\335\022>\244Q\023>_)\021\276\317%\241=\333\212^>w-\306\275\024\376\023>,D\256=w7%<\301\367\324\275P\353\017\275\342\027\024\276a\033\003\276\354U\325=\324~\276\275o\377X=\226i\004\274\234\177\033\276OR\277\274\322#\301=\211\335\326\273\032y}>s\316\272=\213Az<jj >r\337\205>\322\n\227\276\010X\202\275\364P\033=w\007\244\274\314t\260\275\317\372\206=/\350\342\275\277\220~\275\312\333\213=%q\350;\037#\204\275G\021&\276G;+\275\001`\300<RP!\276\224\013W=\027\344->\007\001\201>\246x\211\275\311\375\341=\377\t\273=p\034L=\237P\355\274mp7>\371\033\307=\r\031\306\275\274P\005\276\215k:\276d\365x>\377i,\274\320\233r\273\356\352\333=6\2521\2751(\223\275\036B\202\276\276\340\224\276T\327\304=\363\203\307\274\217\373\335=#B@\275\034&\000>\207\3233>`\234\273\275S\271\360=~\213\002>c\323\351=\017\211\374\274\361\320t\276\276\010&=\351~\332<\263\260\001\275\255M\227<x\013\031\274\214\227\314\274\251\326\376\274\234\025\223=~U\204<ip\206=P<P>\200\003\313=B9\313\274\213p\030\275\273S\362\275.\024\206>\250\205\r>\316\353]\276;\207\307=1\2315\276f\247\255\275\213\037\340\275\206\370\242\275\311\355\334=\241B\275=\257\300F>\247E<>T\003\216=\220\214\037\276\036Z\014>\361\371\264\274wR\261=\346\013\346=\215\020\373\275\200n\322\274J\374\033>\230\203=\275\n\273g=\334\314O=5}\032>/\031\200\275\rj\242\273|p\013\276:\215h=\231\375\217\274\021AU>\255\355\"\276F`\336\275\325\235\375=q\213$>\222\312\216\275\335AF\2760d\017\274\016\277\331\274\307\245\350\275\027\375\206>fIr\275sL\r\275\214\221S>\33179\276\177\306~\276\204\"\020\271\365\tu<\332\321\210\275\027\007\024\274\270)\224=\321\342\240\274\342>*>\365^\034\276\313<n\276\257\236E>\r\3436<\315\341M>\225vR=J\004\254\275\375\264\375\275|\240\002<\316_\307;\003Z\014>\357\023\205\275\022\324\231\275{\375h\275\230G\355\275\263\257\211=\357{\027\276m\215S=\036v\310=M\007W\276t\025\235\275[+:>\355\375g<\364B\020\275\347\\T\275{\n\312=\246}1\276\336\372\364\274T/C=|>\343=2\367\305\275\361\240\207>\240vL\276\351Qi>\235\0134\275\374\277\231\274\027\3201\276\303\212:\276_\317X\275\211{F>\225\244\337:\206\336I=\373\001\235=\214  \275\035\251\347\274\005\206-=\267+\332\275\273\3211>\234\377&\276\335O\376\274\335\221\026>\177j\214\276ko\216\275\241\372\224\275\213S\214=\307\013!<o\376-\276t\324V<\312\230\234<@\000\313\274\\k^>J\316#\276\257:|\275\272\026\026>c\'W>\266\',>o\357\236<\t\252)\276\326\0267>\274\325\027\275\271\367\030>\352\035\266=\324I<>t\377\342=\310\263\365;\312T\021>w\221\t=\305\307\362\275\276O\277\275\332\017,\276\262=\251\275\240\254\033\27635\354\275\342\2630\2753,Y=\332\260\003\276\024\207;=\267\323\340=\376`l<\035&\344\273\034\233\227\274\320\247\022>>\276\271<\217\002:>*F >M\002:<\370\303\331\275^\002\002\273\031T\002=KX\021>x!\013\273\307I+\275a\017\231>\214\327X\276\330_Z>\341F\202\275&\365\031\276\327S[\276\255\303g=\331K\221=\217\355\205>\376\020\253\275c\003q\275\200\251\030=\241sJ=W\202\265=e\345\361\274\366\305\235;R\311\036>\366\022\310\274k\037\236=\360\266\370<\207\334\026<[d\276\274c\206\233=\265\217\\>\222\344\243\274\014\343*\276\351\200s>\225\024\316=\242\014\226\275s\000A\273\332\337\270\276\324\237\367\274\016\002^\276:v\231=\370\370:\275S\001\210\275c\215\021>\207`O=Vr=\276\373\3248\275\312\3104\276+l\000>\266\227\316\275\375f\237>\217*=\275p\234\300\275\t5S>\001\014\312=k\024\243\275\354\274\027>u\301\203\275\242\354\351\275:J\315=s\244\026>\007\2531\275\243ac\274\316;\225:\363\032\310=\334\n,\276\325\314x\275\202k\022\275/\'\002>\361\305\035\276\212\227\306\275\223\0041\276;-\361\275\332\2707\276\203\362\r\276f\322\256=e^\030\276\240\360m>H\320Q\275Uu\221=\267\231\203<\254\246\200=\301\273\345=\223\037n>\301\364\303>sk]\275\246$\226\275\306k\314=\271D\360\273(-\204;#\354\354\273\3312T\276\203BT>j\275><\346p\273;\004&\r\273\034ZG=\020mW\275~\356\016\275Y\021\034=\247\347\277=\236e\247=\266\370{\275\2519\000<D\306\017>\026+:\275-\277\007\275\010\241\017\276(\236\343=\014\232\"<\342\302\242=Q\002!=\000\035\005\275]\007\225\276r\352\201=\307\261/>\215\372\366=Xs%\276j\353\240\275)\267I=\257A(\276\206\330\316\275\001\243E\275\213c\220=,j%=Pb\246\275p#,>I\2477\276\022\321\216=\034\0138=\272)\036\276a\313\371\273q\357\230<\320\212R>+B\257=\350=n>t6\034>x\245&>)v\252\274/\342\376\275\017\001\227=\355\352:=\335\237\371\275\200\330n=0\036\033\275Q/\226=\\N+>\357/=\275#\274\t>\0101D\276\2165\017\274#{\031=\026{\310<%w\344\275\r\275\307\275+F\213\276\233\327\007\276/\013\354\275\000O\005\276{\347F\276\024\346\344\272?\223\221<n\327)=\356r\214\271\315\244\337\275\261\210\364;\2676w\276(\361\267<\325\260\021\276\277\345L<\336\257C\276@I\245\275\270\332L\274\340:\234=\250\350\026=A\255\216\276\312[\002\272c\017\354\275#\363\t\276e-\345\275\347I9<\0037\035>*5\223\2753\000\036\275PKA\276\210\020\221\275\373\317{>\323\341\304\274S\356\013=\0032C>\016I\026\276\362`E>\241\tH=\340B\002\273R\363\204=\376\323\r\275\372m\345\275\363\355\201=\0361f\275\256\227\314\275X\311\256>\000\3130\2751Lh=\270\302\275<\207\374\">\270q\366\275\247\220\241\2751\230a=\260P\302\275\021nd\275(\322G\275\026N\204\275 \273n=u\337\233>\263\033\036=\324G\363;\322\373M\274^o/>\034\321\234=\353g#\276:N\365=\320P\311\275\206\336\202=\3633\217=\254U\266\272\202\265v=$>\271\275\002\360\022>\314\342\352\274\260\014\177<\304&E=\006)\024>\215u*\276\351\204\377=\223i%>\227@\311\2766!\222\275\373`\370\274\017\242\002>\206\022!=\343[\317\275\240)\025<\210\234\r\275T\253\013\276U\244N=\376P\206\275\304\004+\275\350\032Z\275o\202\024\276\264\033\"\276k\360T\272\266E\356=\010\273\247\274\234>j<mo\372\274`\rp\2760%\362\275\333\300\276=\332\362u=\250R&>\273|\272=\270r\026\2758\231\306\275\000\372m\275\207mH=\306g\003<\234\236\252=\203\352u<\262[[\276\344\207b>\212%\013\274E@\373\275\335J\212\275\0145\244:9\236\014\275\004\311\016>\217)\311=\232Qr\275\274\035d>\311\221B\275;\260&>C#\204>\357\257\'\276<3\367\2755>>>\311\030\224\275\375\274\361<r+\025\276dh \275,\232\317\275\237\333-=D/\212\276\275\211\265\275\237\027+>h\nm<\251UL\272 \322M\274\207\035\350=1\027\202<\243{\224=k\256\233=\2304\215\274\373\353\231\276OW\267\275\212x\326\2750\"\212\275\204\227\227\274\346\343\";\3462\241=\205\333\302=\024*\200>*S\033=\2259M\2765qS\276\325\005S\273[%;=\304\271\357\274\r\\y\2760\177\020>\2556\343=\342\000\024\276J\254[=\253\234\201\276\000\247T\276\347G\337\274$E\374\275\257I\033>\323\342\303\275\232\347\314=\203O\270\275\020M,\275\247\014\324\275\264\214w>Z\033t=\370\310S=\252,S>\tL\024>\271\321\002\276\202\214\235=6Bd=\305\215M>\327.\035\276\232s\003>\021\202\025;\302\306\315=\323\272\363=3\260\221=\010}\262\275(-\360\275\013|\343\271\333\240\334\275\226W2\275\274\031S=\362\271\035;\335,\016>QT\315\276\342Y\252;\216\302\247=\036\303\\>\374S\330;\206\272\351\274\375\014\206=\017\203\273;\r\302&>\'\026\034\276<n\315\275;\035:\276\227G\316=\374\324\236\274;\177\004\276\2326\341\274\362\351-=J\307\217\274\036\r_=o\n\227=J<\\>\306,\316=\010x\300\275\210\242\270=\347\257/\275{\317\277\275n\227c\276(\363\237\276\327\006\234<&\022U>8\022};\364\r\274=>\031\263\275\302\244w\274\017}\232<P\255\273=\352\337j=J\200\306\274\317\362\006=\010\204\245\274\327\024\320=!0\020\274\261Y\344=\n<\004\275a\031\001>0\307l>\257\tV\276\324yZ\275\323\205]=\0039\316\275r\t\335\275\245\251\214\275Ob\343>:\302\251=\017\2457\276V4\230\276f\367\326\275\306\214\235\275y\017]\275\373rC={I\317=b\306\020\2760\252C\275\314\\s=L\375i\276\357/p\276\347\225R=O\3752>\000\214\340\273\327i]=\000\354\233;{\333\333<\006\350.\276\225\327t\275+\037\r\276\340S$=\213\353d=\204\205\"\276\030W\034\274Ri\342\275\247F\035\275\030\373q;,\226\253\274\374\n\025>u\247)\275\376\374?>\240\232\'=\\\007!\276je{=\247\224\214\275\033\212\356;\371O \276\260\361\371\275\242\346\353=\226l\205>\230Xl\275\253\253.>&\231\243<\265\343*\276t\347\371\275\321)\210>\0177\260\273}S*>\266Bh\276\262\253I=\353\241\262=\322D\t\276\200^\340\275i\237\002=\2650\215=Z\r->\341IO\276\034\234\036>\365\245\377=m\342#>\321\024\321=\265\323A=\010\3241<\241\207\246=h4c\275\362\210m<\2659\334={h\017<\\\231\240\275Z\275\013>\311\331U\276\270\231\340<\221\372\316=\014\200\216\275\354[\243<R\236\357<\000\272\217>b\235\t>\005\311\351\274\267\312y\275s\346P\274=\356\"=w*\225\274\014P\376=\3403\241\275\3625\014>\214\2577=uj\033\2769\266\200=\357\014\205=B\240\266\274;^\340\275TW\250\275\223w\n=\034\007\307=\227\235\264\273Y|\177\276H7\205>H\344\347=\034\203\241=\332*F\276\370\212\247<[<\223\275{\000[\275\240\224\030>\276\324\004>\177)0\275\327{\352\275o\275X<{\243\000> Ay>G\215-;L\005\342=\354\245\327\275\305V\327=}\352\204\275!\030\007\275\2124\201\276\207j\305;\344f\227\274\017\374\365={>\035=\276\211*\276\244a\010>h3D\275\023\331\217=\240\206\003\276\337\222\223\275m\024R\276\005\340\276=\253\367\340\2750\033\014>\276\017F>\245BJ\276\203X4\276*\363\315;\274\036E=\034\321\004\276\237A\007>\037\260\240<\314\201B\276\245S\230\276\270YU=\0268n\275%fA>a\361\014>M\020\233=\272\224\331<\0075B\276\241\322\300=\377\364\207\275kg\274\275]\006\276=M\022N=c\000m=a\341\225\275g\341S\275\325\202\210\2757\233\305\275f\267.\276T\352\324=8\362\030>\224\357.=\t\035j>\271\356\037\276!\251\006>\334\355\203\274p\345\310=~.\312=\305qc=\221G\343\275\240k(=\216\225\347\271~\301\004>\261\201\224\276\330\216\210\275\377\344\'<\325\376k>5\340u=\035\305\363;F\335v=\355\331\334\2753\204\201<Nv \276\313\3359\276\217\024\342\275\327Z\244\275-\324\352\275\375\222#=I\306\336\275f2\316=\321%E=\360z6=\240\342\331=\351a\000>\244\201\350=\333\350n=X\206\035>\013\317\373=\276\372\222=u\3443\275\316M\344=\336$\034>\243\346\207>\035J\250=\'=G\276d\245?>\301\336=\276\025Z\333<U%1\275\215O\267<\336\024\200\276\320\265\035\276e\303\367:\177\3139>\337\202\000\276\245\216o>,\223m\274\241w\312\275\266\300\235>\264z\244\274-\235U\276\3252b=45\365=@\242\313=\245\375\273\275!\320\n\275h\025\204=\220Rj\275\3721B\275\267\023\022\274\001V\212;t\375\347\274\262H\"\274\323\342>>G\215\001\276\347\262y={\311j<\013B\035=UM7=s\032\366<\305\036\340\275\004\213\2379\235\240\342\275\301l]\275\276n\323\275\207\344M>\032y\250>\223\370\032>_\304\246\275Iw\020>Y\315p\275\022\275\254=\340|\301>&\020\216;\017\232\323\273\220\251?>\354\3051\276+\217\234=\353\335\374\275\236\340\215<\223\353\031>\263\3572\276X\0278>\377\223\247\276g{\306\2759s\226>9\350 \275\0363\020>\232\245\317<\021Xy\275\245x\231\275\360\306\271\2757\244\022>I>L\276q\251,>-I\234\275\221.\267=\"\344\256=\0245\256\274\202\303\n>[g\201\273\247\003?>?\322.>\362\366\002=\201\321=\276~\265W\275\366\352\">\324\203>>*Z\237\275\017\226J\275cMW\276m\n?\274\274\006\371\274\r\222Z\276\357U*>\334\332\022:w\331\260=Y\262\'\276\r\277\320=\350\375\276\274\tt\323=i\211\033=\352\372\000>).\364;\247V\272\275\031\306\007=\367*\264\275\013]\r>\344\206#>?\360\264\271\227\300\247=\325\033\314<\244\265\030\274\301\255\036>\360\275(\275\240\325\245\273\261E\215\275\235\254\364\275\355G\036=\244\360h=\004]\002=\335\024\260=z\343\205>%\237o=MI\034\275J\"\357=8\350\252\274\342\373\362\275?h\231\275\010\265\034\275\177\316}>\275\313k\273\r\307\353\272\0054\247\275\226RS=\025\030\265\274\241\227:\275\215\020,>\016+\230=Vu~\275\316\253i=%\306A>\344H\t>\306\036\006\276\177\3679\274\005\027S>\215mz\273)P*\276u\246\361=3\260\201=~ip=\003\265\220\275\211c\266\274\355\017==}\261w\276\004\3655\276e<\374\275<qP\275u\007\357\2755\301\270=\376\037E\276fF.=\277\2751\276 u\240\275m$\026>\344\335\304\275\275r\230=\267\010\345=*R\363\275\244\207\004\276z0\313\276\026x\322\273\370\314\224=\334\241\217=n7\003\276\262\212j>\3300\307=\004\\-\276u\313\236\276\245\242\007>\326\211j\275\360\367:\2765\250\252=:i\037\276\363\244,<\312\266t=\036\353B\276\343\337U>\237\363\n\276K} =+/\354\275g\314\215\276\240\373i\275\261-4\275}\204?\273\234\202\201>\005\260\026=\010D\226<xF\236=\263r\236\275\236\343\327\275+\267W>pj\301\274dqe=\262\375!>X\362(\276\336S\213\275\350\254\274<\305b\271=\200 m\274$\374\222<\230\254\310\275\315\252Y=\221\377\014> ZS\275\301\006\262\275Q\350\013\276\3742\024>\344\227\276\275p\262\363=IF\002>8k\262\274\262_\021\276Z-]>I\272\204\275\360\004\357\275\205\276\200=La\361=\"\313\000\276\235J\003>\222\265\254\273\337u\000>\346~C>sL\324={\002\036\276\371\376\230\274\262V\205=s\326\232=\022\344\025;A\336\242<i\357*>\3503a\274\227\255\013>\222k\243\275\021\340\216\276\313\2617\276\214\214\351\275\207\236\273\275\364<J\275\236\227A\275KL\340<p.\216=.\203\003>nL\347=M\206\301\275\205\312\211\275\023p\344\275Kx\333\273\253B\327\275\253\352\t\276>\032\241\275\252\215B<kW\204=\254\034[\275\266[M<\320\234#\275V\317\001\276\032\177\024>f\206\022=\335oe>\005\373\302<V-F\275\345\357\013=E\024[>\303\366%\276i\317o\276\362R\027=\t\tC\276\032R!>h\003T=\242\355 \276\025\033\003\276\352qr=CD\202\275\234\227\000>JC\n\276\360T\023>\250\272\004>\336\241\364=(\267\227<\3502\256\275\322l)>\373\362\313\275{\210\016=\232\037\331\275\335\223\003\276v]\366\275\024\275\200\276W\302\262<\027\367<=\266O\254>\242\327\220<\353l\253<\373\325\341\275\367l\331=\355\215o>\270\ng\274\210\336\014>\300\306\321=\314\033A\276c\220\302\274v\237\233=\313\025;=VoV\276\001\200d>93\332\275\242\214\240\275\216;2\276\365\226\006>\305\245\231=\\\247{\272\3632\254\274\263\222Y\275\356\374\242\275\324O\036\276\310@\316<ms`>\"<\205=f*\010\276\006D\216\276\307%F>\266 \025\276\274U\2448K\347\312\275\3275\013>TU\263\275\n\272\237\275\325\350\327<\355\253\345\274\237zu=\365\213\034\276\330^\213\274\003\006\222\275\271\\\247\275\376\367\212\274\023\304;\2757\206\246\275Y\023:>\225z]>\323\004\224=\331\340\003=|<\">)\016\276=\017N\t>\276\016\350\274\3143%\276T9n=\314~t\274\315\250\t>\363/L<\304Y\021<R:\204\275\375h7\275\035\231/>\331\260 >\371\311!\276\323\266\240\274-\227\307\273\253\027\016\273\210\034\221\275\036\267\006>\034\225\022=\\\216\302\273\276h\032>z[\252<?>\032>\354\267\277=\261\241\267\275\303\331^=\022\264\320\274m\300B>\225G)=\224\016\033=\257\336;\275\3117\243\275\035H\343\274LX\213\276\376\243\244\275g\272@\276\357P\220>$y:>\272\220u>\374\2558=\221\335\030\275\302X+=~\306\261\274\356\026\213\275\013\303\253\274w7m=`!$>\211\351\360;\225\263\350\275\353\323\274\275\203\323\360<(\365\230\276\324\260\310\274|\000c\275O\205\014=\311\202q>\252\025\025>\360\353\331\275\204\307\265<Td8=D\025\327\275\252\010\241<\030\371\276\274\204h\265\275\231@\036<\r\207\230=\351\376O\276\206W\344\275\351\256\342\275=&U>41\365=\n\036;\275\3250B\276\221\307\330=\371\300/=e\304@>\346l\020\274\205\r$\276 >.>$\332\006><_|\275A\304\236=\310\344\346=H\373`\275\357\316G=\'\364#\276\221\3514\2752\346\362<\001\2430\276\207p\002\276\352\243F\276\241Hb\275\274\260\216=\242\256A\276\205D$\276\364\352\365=\ndD\276*A\026>Z\2512\276\352{1>$\225\035\276\006)w\275J\326\203<g\274D=\202\006\332\273\274\322\001\275\r\024\005>H\260\325\275\314x\200::)]>!\276Z>\243e\261\275<<>\275\353\024\330\275\034\215<\274A\330\003\276\353\010\212\274\237\266\036>J\021\345=\261\351t\275\267\321\220\274=\206\274\274H\0178>\330\002\310\274\233\023\210>b}\237>\\\247\225=!\2048>\242\311 <6\r\350\275\364\347\240=\321O\301=\342\260)\276\234\326\003\276\250\014\205\275\335E=<\346\237;>Tx\220\275\016W\300\275\347~\263=\270\353\005=\377m\350<\240d|=\3017\027\276!4\237>B\001&\276\3215\220\276\351\253\311\273\275\241\353\275h\220\242;P\001\353<\036\271\227=\274]\233\275\367\214B=\320\026$\275\322\242\211>I\305\020=\n\244*>\001\307\265\275\276\357A=\300N\207\273\333\272\243<A\2641<\263\330\224\276#\315\227<!\236\237=\240\347#<\247\247\224= \262K>H!\235\274=\222.=\221{\261=,/g>D\235\240=;\026\016\276H\274\222\275\262\343F=;\370\n\276\357\244w>D\\\375\275\220\371J>TF\201>\360.\345\275\320\311\300<}.\010>h\177\306\275S\326$>\331\372\377\275\254V@=\241a3=\266\020\347\275&-\027\276\326Q?=\336G\253=\027\016%=n\340\267\2752\201\005\275\362\230\273<\275\336\246=$iY\276\361\366f\275\311\337\360=VZ\247\275\237\371_;\225\005g>A\255\204<n\034(\2740!\003\275\232$\340=\356O\205\273f}\315=\031\366\212\275\334\317\277\275Vc.\276a\273e=\231\234\217\272\234\025\261;n\330\337=\337\325\"=\374O\351=V\362k\274\3776\355\275\002\313\372\275\177\361\256>]\360\324;\'\334\304=\240\265\204\276^#}\276\354\003\234>\326e\300\275y\306\216=L\346{>\324)\315\274\307\201\001\276\'E\312\274g\031=\276\024 \315<G\210\312=\217\352\310\275\003\025\017\275\231C\010>\234\354\004=\366`\336\275M\214\265=\223s9>3\004\274\275\213\264\021=\245\337\246=I\3522=\257\314\"\276w\374\352=\235s\303=\225\340\244<\013;#=\221\r\025\276\260\321/\276v\352\327\275\322\205\215=\317<B=\344\226C>Kx\001<\377\215\264\275d\366\213=|\263\200\274:\000N\275\340\020v\276!\364\036>\273\223`={\340\274<un\366=*\202\315\275\273B#>\221\203@<+\005\262=\337\323]>\307\306\262\275\252y0=W\030\255<\340s=\2755RG\2752\'\265\2756\021Y\276\"\201\267\276\310\224\007>\216\377\245<\221\221\230\275`\002\230<J\325\255\275\r\021\351=b\333]=\246y\024=\330\211C>\250\206/=:\325\202\276\265\326\312\275\177\342\177\275\365\273*\273j<\002>A\332\021=\025\234\021>\nh\334\271\n\364\001>q.\241<\267\362m<f\030\377\273\273\3719\276\240\210X=\036N\'\275)\244\230\275\177\r-;}\010\227>\3727\207\274\361\212->\331\270\036>D\275c\276\306m\304\275\334\003p\275U\030\232\274\233QI>\243\261\017>mi\023\275\202\337-\276\2346R\275\230\005\023\276513\276\335T\317\275L\352Z\275`T\235<\265\2216=\240\214\254=eRC\276\032\322\323\274\025\257\322\274C\346$\276|=(>\366\315#\275\363(\013=\373T\004>\324\336\202\275\037\032\r>\225a\230<\033S\265\275\350\225\262=\224\204\266>\326\355t\276\327(%\275Q\260\334\274c\3302\275\330\351q\275\016\222\r\275i\037%>\201\233c>\230\245\217=\313=\237<O\366)>e\207+=I\2154=\337\022\n\276\201\217\016\276\362\300q\276\211\301H=F\016\300\274\032`\006>F\211\307\274\353\352\210;\221te\276]\t\204>\247A\250\274\303f\302=\221\234\214:\350\357\256<\356F#\275\036[\030>1\212\201\276\226\311p\275W\353\341=\343\032G>@]\037\276N4\250\275\301\325\202\275\305\r\236\275`>;\275\363\\\346\275ye1\275\375\312\225;Ors>S\257\242\275p\313\210=zN\236>\002^\177\275y\311\037\276\213\005\351\273\300\227\"=u\'\003\276\357\221Z=\020b\224\275\261\020\235\275\37789\275k\335$\276\327\240F\276\264\346A>\025P3\276\247\371\013>\'G\274=2\'\242;\025\254\030>\rW\263=\2643\177\275\345\210H\276\232B\222=\232y\314=^IQ<#p\021>b\373,\275\235\351\260\274f\004A\275\216b\010>\336>5=\014 \366\275\315\005\312=\227\3002\276\234\320$=\r#\031>\376z\265\275%\013\265\274#s\234\275&\252i>q\205\356=Wd&>Wv\r\275\262\367\r=\257\323\266\273\255\017\n>\205\300\372\274\322\304\256=\022t\003\275\356\016\254\275\276J\370<\203\257\271>6\204\013>\027{!>k?\005>.\037\325<\223f\267=\002\'A\276\250\234\031=\027\262\270\274i\363\224\276\230\250w;\310\220\016\275nt\347\275+\331\206=w;\261:\314\004\034\276\374\362l\276i\003\277\275\323o\376=+2\037\276\262*\317<6\022A>\365\331\205\275\274+\251\274\247.\004=\342i\205=\035\277I=\016T8<>\347\273=&\265\032>(\360C>l+\327=\021E\034\276\245\262\201=\252a\205>\220\\\323>\315\315\372\275\004=\373;t\004\020=\014p\202\276\311\216\354\275\3615F\275f\177\025>\314\374c\276\257\277\316\273\26480>\274s\216\274\003W\001=\301\321.=|\300;<a\271P>\033]\316\275\377X\022>\327+\350\273\273\371\217\276(\207\001>\360\377\021\276\371\314J\275\214\025_<\356J\355=\374z\">\314A_\276\374U\004\276\251\254s\276\030\326\314=\010\273\365=\207\341\202\274\306\370\344\274\357\271\357\275X\367\207=\334\356g>/N\333=\260K\232\275\rq\252=\332H\027\275+.\002>c\314\303;\253\350\324\275\212\231\321<\014\361N=\251\311\327=\025>\n\276\233\034\252\275\370Z\030=\213\300R=\343\351\330=\212\335\312<R\027\013\27600\n\276l\3048>7\215\351\2753\213\267\275\3748\362\275\361\355\335=\272\257\256\275\026uZ\2762?\321\273U\023\311\275\025[b=\035\021|<\036\314-\275\003\004M\275\307}w\275I\230\200<8\016\245=]\007;>#8\010\275\002\371\n>\305B\322\274FCv\273D4\254\275\271NL\276ig\333<\032\\#\275\326FS\274G\267\n<\020(\322\275$u6>\010B\365\275W\236\251=\322XU;\375\033\333<HZ7\275\367\220\233=Q\274>>fd\203\275-\315\217\275\244\312D\276X\227N\276!\234\250\275XC\320\274\325\330\306=&\341\351<\3145\200\2758\014u\275w\327\276\275\275\356\001\276~\261\001\276\334Fe>\002\324C\276UA\025\275\375S\337=,\030;\276\300\310\366\274g\0317=\023\351\311\273i \354=\340\2541>U\022\236\276\370H2\275\200\016T\273F,\253\275}\364\264=\225\266\334=J\005V>\225\321\266=03J\275\002\033\177=;\330f=#HM\276\323w$>\0243\301\274\200\261\344\275\2062\010>\001\254\271=kso>\331\253!=\177\360\257\274\3427\273<\313\255\350\2752\303\242\275=\314\245<\320L\301=qbe\2757\314\027\275\234\317\226\273\376\320\331\275\351\304\017\276A\317\036=\004V=>\240\007\350\275K\302\000>\202\377\262\275M\313\n>\323x\003\276Y\252&<\016\330\206=\372^\354\275\217\202\256=4,\302\275\252\272\006<\343\001\222<\304)\217\275U\205-\276\251\371\222\275S\360%\275bk\320;q\226\224<\030\234\222<3T\005\275%\004\230\275C\360\207\276)\207K>\271F\264\275gx\310\275h\210\331\275\201\304:\276\347\356\200\276\273\273G>\365[N\273\035\311\033=/t\260;/ 8>\321\240\303\273|\017\202\275\036\363D\27663c=R\252\373\274\013I\342=`\2179>\230\031\333<<N\270\275\250[a\276\003}}\276Y\317\202\274\254\216 >\013\346\026\276\353,\007=\363\303i>\356\220(>\215)\274\276\313\220\225=\247\362\033\275Ba7<\0052\206\274Lo\024>\344>\300<{\364\014\275\363T\013>\304\221\230\275A~\274\275\317C\204\276hFU\276v\316\337\275\001\245\306=\234\272*>\365NM=\305O/\276\345Z\214\275\351}\256=`\312\207\275{\361\t\27560\361<\322\246\273\275A\274u\276\205\203\024\276f\375\253\274\032\000\005\276\354\376\221\275\232\\(<!\252j>\271K8=S\256\023>\014\217T>:\205\001\276w\233\202=\345\221/=@\307C\276\001\036\255\276\312\376\225\274\311+T\276k\2339\275\264\253\244\275\316\376\252=.\224\245\275\026C\361\273\215\316_\275\243\306\207>\030\227\n>\265a\377=]lQ>\310|\037\276\332\221\265\275L5r>d\007\215>\330Je=-,;\275\264\271p>\\\314\250\275H\2422=-6\236<&\230\020\276V\353\265;>\365\n=k\033i;\325\030\320\275F\031Q>@l\360\275vx\242\272\273\232\347=\030h\013\275\356U\030\276\276\320\352\275/\245\210\276\355\265H=R\250\030>\357\032\000>)\202\367=\177\313\262=\205\365H>\313X\232=%c\350\275\3210\324\275\341Ay\274\231Z\214\274\323<F=KX\r\275\371 \005>)\272\010\275~\207k\276S\2576\274\333\372\254\275\371\363\226\274z{\316\273\275\233\025\274r\250k\275\202\265L\275]\023\256\275\355\201\200=\037\320\030\275\214\307\024\276y\321\362\274+\357\266\275\007\250\001>\262\020G<\306\247\337<gk\210\274\332L\360<\362\2275\276\310\217\034\276\251SN\276)z\245\274cr\243\274\366K\034\2760*\362=\370\376e\275\312\334\253;\213\033\210=\2354\210>\334\307\241\275#[\333:}\246\315\275\273\337?\276\266\177d=\374\227/>M\240\252=\003%\264\275\264\033\347=Z\013\230\275]\033\363=q\226\343=\372Y\212=J\342\r\276\226\006\037\276HA\n\274F\375\201< \201i=\024j\304\275\243\001\000>\254\241\344=O&\301>*$\243\274\347\313\254;\276\214\214=\323\304\033>\355\326I\276B\027\314\275\227\341j\276:\020\272=\353\273+\276y1\324\274i;\214\275\022\267\217\274\035\245N\274\236\221\301<\203t&\276\275\371J\276\2115\335\2744\250\001<M\033\262\275\264\254C\275\255A\320\275\307\272\225\276\272y\010\276\241eK=;$L\275^\020\316=\254\033c=\341C\360\274\203\360\004<\247\025\244\275<\242\374=\226Z$\275\261\037\263<\333\371k=\n|P\276\227u\221\276\315\222u\276|\350\2559\354M7;?\306\311<F\001\016\275W?\247\274\330\260\240\274y\355\244\275\'\3233>\177\332\264\272\177\357+\276F\3565=\215\203$>\276.5>L2\235=\315\337\265<Pg\314<Hx\021>*\277\260\275\022!\n\275\277\331 >^\t\255=1\347\223\275B\217\366\275}Cp\275\320~\342\275\317=\016\276TS->\343\344\324\275\324\224T\275\306\\\021>\234T\374<\331\366\251<\306\301\201=\357c\025\276\224&<\276\242\323\204=\331\363\003\276b\215a=|\272\204>HXh>\0269\217\273\334\2636>H\030\314\275\007\207d\275n0\003\275;[\357\275~E\006>\346n\325=n\202@\276\352\236\312\2758\357g\276\222Kw>\310\263\314<.d\233=\242\317\340\275\316\325M<c/3>Xv)\275>`\232\275\237\264\313\275:\215\265=\374g\306=\234f\177=\360\375G=CE\277\275\350\221H\276\316\006<=\376\315\274\275^\357\006\276\262\350\013\275X\342}>\377\340\223\275m`h=\330~\354\274\310\r\272\275\033\336\215\275=\232,=\330\n\314=,\233*>r\372E>tD\255<\343\223\013=r\312\317=)$\344<\032P\277\275\315u\210\273\323x/=*\231\223>u\314\366=\224\277t\276.\335p>:1*>\252\304\204\276\220\244/=\256\033\337=?w\345=\337\270\367\275\361\220\000\276\010\013\251=\261\317\222=\261\305\213>\270\302\374;\326H\321<\264g\317>\377\233\312\274\014E\031\273p\210\373<K\210\\<\025\261\007\274W\317o=6\301\251\275\025\022\013\276\255P\200=\301\340\025>0q2<M\036,=\362&\005>j\327`=\307\342\000\276\214\036\215=kV\370=\220\2522\274|+;>\026U\274\275\277\024L=\320G\223\275\021\347Y\275\023a#=\240\006\267<4YA=\241;_>=\352#\276\'\232i\276\201\010-\275)J\026>\266;P>P\221#\275rH\345<\231\263m=\223\271:\276Bc\036\276.\003=>~\276\235\275\206^4=~%U>\025\312\355<ka\261\2750\240X<\250r\256\275\036T-\276\304\321\210\276B~c\275\244\024\250>\307\022\235=\373b\355\275^\023o\273d\371\037>\304\243u>\027M\353\274\032l\227=\275\344&=\355R\013\276\357\204\261=0\274\227=\240\017\016\274^S,\275\3579\314\275\203\223\n\276\304d\202\275\223O\243<\276\227\332=\333\017\247=9\021\032\2752\203\363\274Os\226=\000)3\276H\265\033\276\360 Q\274\020\036\021<\"\323\205\276\341\004g=\351\323m\276\337\344\233=\002\350\224>\363\213\024>\305\211\311\274\253!\320=\247\371Y\276\177p5\270G\331\261<\036\321\303<4\323\375\275`\024\246\275]s\016=$\366\376=Yw\245\275\245CI\276\013\005\306\274uk\276\275I\336\221>\376\267\220\276\355\003\354=\202\333\001=\352on<\244#\257<\274\3118>6{{\275m\nw>r\362 \275\tu\375<\237<}=\037}<<z\246\333<Vf\212=1]\277<z\362\256=\225\233\377=\032\312p=\034\364\333\272\277\230\234\275\342L\217<=\231\316\276\344\3553\275P\333\315\275qa5>\237\207Z\272}:\211>\036\"\375<\273;\202=R\375\r>\013^\032<9\236\243=0L\334<2\247\302>)\222\017=h5\026>\026M\206\274P\001o\272\032\264\244\275}eE\275E\201A\276\262:6\276u\373\270=\220\344\201\276\267|\360\274\2755\274\274\366\305\240<\270yO=\2400\247\274\236\221\025>\357\301\222\274\335s\177=\311\352\307\275\024\212\204\275\221\2425\276a\317\004>p\261\271\275\014\312\004\276\\\266^=\010\317V=\220\337)=\332\353d=\370\225\261\274\024\274\177=\362\032\t\275\365\\\203\274\231\347\264\275A\004A\275\364N\017>>\'o\275zu\264\276E\366S\276\346\'R>\034\341\371=e\306\272=\342\3638\2757\262\037\275a\260\277=Q4\245<\n\\*\276\372\364\227>*\325\030\2753\2501\276\310\037\240\275$9\026>\356\346\004>2\025}\275\257^\274\274\260\260K\274\372\031t\274P\242\344=\330\265>\273\337.R\276\333\220\214;5R\032\276\310\371\204>\311\'.\276\\\024\320=\n\376d=nN\017\274\270\005\201=X\0107>v!\205=*h\254<-\251\010>\314l\211\275\027M\246\275\317\261\220\275,=N\275\212r-=D\017\331=9\0340\276D?\350<\026\305\"=<\265\244\275K9\227=)\006(\276\332\032\235<>\304==k\0333>\264n\260\275R\034\230=O:\243=SA\265=J,P>\333\364\252<\236D \275\324;\316\275\321\033\362<\312\014\033=\223\3147\275\321\207\005=C\007\233\273|\377\326=Zm\023\276\234\301\251\275\236\r\213>PH@\276PA\017\276\373?\225=*\232\\\276sZ\210\274I\265\237\275\311\026y>\350\031\304\275\010\360\347\273\314y\213\275\346c\257\274bH!<\203\374\307=ZD\242\276~\316z\275\016\\O>\225\324\244\274\373%`>D\230\306=\213k\305=\231\206\305\275\343\014\227=\225\240 >\003\207:=\364\027\241>\335\031\270\276\016\355F\274\246#\345\275D\3670\275\005*/=u\252\005>9\235\330\275\\o~=9\003\030\276\257\323\306\275\227\001\265\274\332\037\331<\257\r\230\275xT4=\250n\250\274\265U\351<{\256w\2762-\265\275-\306\254=\032\213^>\267\3603>\260\251\232\276\372N[\276xD\010=>\322\361\275\256\203\224\274\234\301\226\274\314u\370\275^\353C\275\335BC>\303,E<g\273\241\274`\250\231\275\310\347:>\037\364\220<\221\325\340=iM\344=\200\376\275=y\332\213\275J\232/=\222\"\022\276\003\223!\274\006\241\226=7Z|;\t-\330=\007cu\275\273\311C\276}\262&=X\335F=\370\375<=\235\272\372\275\250\310;>\354\315y>l\235\257\273\265\373\225\275\331\273i=u\325\024>\325{\350\275\207\362R\273V\340R\276Xu\346\275d\223l\276\261\374\025\275e;\376\275\000=\206=\270\237 >\2614.\275\355\204\350=\312\364\343\275m>\276\275\306\020->.\311\261\275\213\203y\275\277y\200\2754\2617>\352\"\362=\227>\234\275A\230n=\214\311?=\022\n\014\276x\340m\275C\225\007=\354\263\241=\271\3712<D\014b\275-\264\220<\370\332\000\276\017\244W\273_\224.=uLI\275Uj\300<\352-\355\273\344\2148\276/\360u>r\262\261;\225z\305\2741\362\303\275!\272\275\275\350\305\333\275ZI\311\275\312\336@=\265\014\'=\326\272\221=]t5>\225\344\262\275\033\247\267>\362\251#\275\314\327c=%r+\274\002\3551>\005\0018=\004-\016\276?`R=(\t\036>\301\035\360=\271V\343=\031sC>}n-\272\024F\010\276zQ\262\275\n\201\\=\340\341\016\2742\225\226\275\215G\222\275<\002\200\275\3269]\275\267Uq=A\3766=n\231\320\275?\254[=fc\244\275\001\201H<S\253\333\275\360J\320\275\010A\242<\021\354\226\275\351\031\262\273\362\014\201<\313\245\t>\245:\230\276aw\t\275\001\2367>\224\t\356\275\213\264\026>t\362\216\275#iv\276\267R\271=:\213r=y\330\213\275}\353\204=+#z\276\236)\361<\213\306\277\274\306\223\007>\327\377\217\276i\020}\275\tv!=\325LE\276\004\351E\274&\006\313\275o\374S\276\311\341a\276\226j6\275B\225\203\276(2\306={\306\357=9\302\021>\216k\242\275\276\2361>\304\232\204<O\236y\274\315\263\003>\261\314\017>\031-\305=\230S\340<\265\306\223=\254c\261\275Z\204f<.\254\014\276\n3&=/\234\307\275\264)6\2762\327\010\276\017\374\364=\363\277\333=\027\246\255\274\212\330\227\275Ab\001>z%\324=\217\356\"\276\025\211\305=\200\332\232\275!/\207\276\032\232\232\275R*\030\275\022\340\n>\347\031;>\223}\002\276\026\034\326\275yec\2762h\216\275;\270=>[\361\222\275\216\207\217\275\250\033\026\275\243\376_\275/[\000\276,aF\276n2`=C\n\246\275\211\367#\274\220\337\177\275\010\261&>S\036\022>\222j;>\216yA>cI\\>\301\024\305=\\\202\027=\341\177\305=v\3531\276$#\232\275\324\024\242=T#\263\274\272\251\006>\023(\277\274\346\002\203\275\357\354k=\217yB\276#Xb>\037\020\342\275b\262P>\371\350\364=(\254p>\022\313\236\275D\005\325\274\267\314\372\274\243{i<\274\316\251\275\314\'4>d\206T>\353f=\276\001>\217\273e\352U>\371eC>}\357\004=\'\235\321\274\013\236A\2767\317\">s\354\202=1\037<<<\323\032\276a\014O\276\323B\241\273#\346\260\275\212\033h>6L\342=*\321\212=\332\316v>:\266\241\276b\264\206=\343\275e\275\223\331\n>\361\223\025<\023\221\027>\245\311\361=\247\031\270\275\204\214\325\274\221-\322\275C,\235\275\037\230\014\276y@P\276\232\231\204\274\353\346\311\275txN\275\207\031\375\275\236\'\256\274\230\270\237=\350\263\245\276\327g\363;\035a\246\276\335\252\026\275t\341\215\275\246\306S\275\346\201\243=Ox%\276\203}\257\275\326\205\216\275{\224?>#\223\000\275\004\241(\274AY>\274N\025\355\275\241\203g>#\326S>)\243h=\371Ks\276e\371\330<\000\316\211>\271\350\214=4\367,=\373\266\262\275u\321+=\366q\204>\372\262\010<U\3507\273\036\n&>\030\272\324\275\207\020\267=i\270\222\274==\202>O\2668=\277\235<\276\327h\347=\200\245\277=\"\252-\2767\250\023=\036\240\257\274\332\262\241<\312\017\306\275_\344\345<<\231<=x\206E=\320\373\230=a,\370\275^\337Y>|5r=yWM<\255d\222>\314\363\317=M\316(\275\314\256\320=\214\217Q= \037\211=+\360\244\275Z\304\026>\321\303B\276\000\3041\275\262\177\262<l\245\226=\000\020\256=O\306m=\334\327b\275\024\334@\275\210F\t\276\212\220\375<\320~\216=\252\225.=\363\267G\275~\003\004\276d=\235\275i\360\027>\024K\276\275%\262\361<1\252\260<\262\300y=e\301\310\2759\233[\275]95\275\345f\372=|\177\313\275\241\216\002\275\310\231\360=\271\204>=\267\027\213=.\017\215>k\355}=Z\037\237\275(y\263\275\276\205\017\276m\355\306\275\246\375v\273<^\301\275,77>\223\003\310=`\036\333<\010n\254=\266\227\332=\314<\007\2750p\370\275>p.\275\316\206\002>\250\001\022>\242*\344\275\262\0179=\345\031\037\274:\177\323=\377&\253<L\273\250\275F\246\355=>\231L\276g\313\256=\010\2050:\237\247o\275;\",<\330\214\254=\321\330_\275t\035\266\273#\240R=)\330\241\275\250}\241<q\260\t\276Uo#;IX\006\2759/#=\275l\206=x\213K\275&k*\274k\330\016>\365^\201\275\"\242\017\2761E\032>\2531\261\274rI,\276\350dk\275\256\214\316<\010\t\017>\205m\240\275DWO=\327\177C=K\312K\276\2221\030\276]\366\241<4\t\365\275\020j\200\276\340\003\002?Z^\352\275\340\306\247<\263X\227=s\373\017\276\347\202\322\275\212\357\013\276g:g=\020LQ=\313\262\360\273\335\3523=\274\353\302\275\244\335\347\274a\266\260;\000\214\232=\224\374t\275\203\025r=D\272H\275\217\247>>\232\235S>^b\276<\277\020\231\275U\261\310=e?,\275\243\016B=;8\220>Z\204\211>\362Z\006\275\362\350\004\27641\020>X$\">\375\036\324=\262*\320\274\213\346\210\274[G\253\274\005Cf\275Tp\366\274\301\266\254=\010z&\276\003\242\221\276\314\n3=g\331p\276\323\265C\275\204\365\267\274\231\345F\276\240\2174\276J\326E\275\252\003/>$\344l\275\226\302\002<\371\r4;m\232\014\276 \022\"<\205[\204>M5A<\201\332X>\335\2221;UR\371\275\026\232\250\276\311\3240=\250\236o\275\306\005\027\276t\300\033>\273B\223>\337t\254<\022C\032=wp\340\2753\304\201\275\315\215b\275q\214\277=\250\243\034=]\261A\276s\3268\275\305\355U\276\237Um=\242J\241\276\033/\006\276\276q!\276\246\"\272\275(\360\006\276\317\244\227<>\316\321=$tC\275%\344\231\275.\253\016\275\350p\262=!%\312=\\:\222>L\371\257\273\321D\305=\301\231\025\275\266\265\252\275\201\023\233=;\363\276\275\036\340\345\274u\253&>\2417@\276\344m\322=\324\021\037>}\251F=\306\323>\276\347\2634<\371-\343=[\203\004\275\344/\341\274\376\351\'\274\351\315\211=7\373\207=\210\244Q=\237\005(\276L\035\025\276\013\365\330\275p_\202\274\372\007\000\275\230y:\275U\245@\275\314\256.\2760-\206=%\365\244\275\326\214\273=2FQ<\213\246>\276\3477^\275\276\372\370\275Q&\260=\242\022\331\275\347MQ<1\304a=\003\3100>*\324n>n\2141\275F\317\340=\202\344\256=\221P\016>\022\207\376\275\035\'\021\276\016\212<\275\376\014\372\275\024S*>(=\221\276\363\274\256<\017\3544<\364M\261\274\366>\005>\002\361\323=\tca\275\261\204\037>\353\030!=!y\220\275\254g\201\275:f\376\275\234\365A=\261\251\220>Re\271\273\034!\333\275\337\2420>\307\342\010=\342g2>6\366\362\274\031P_<\014\0365< oF=\320\201\014\276\023\313\360\275\262\014,>y\275>=\034\322\324\275()\273=1\362\013\274\014,1\276\305\312X>;\250\263\274(vm\275<SK>0\3728\276Of-\275\0243\273\275\\\231\300=\314\267c>d\014P>\035\342\307\274\n\300\010\276S)K\276\037\354\351\275i\0210\276\253v\267\273\026\244\214>\335\237P>\207\200w\276`\225\246\276\340\233\344\275\324\315\203\272\221\276\016>\307\246\216\2746P-=~\321\223<\255{u\275\244\266\"\274\242\032\005\275\216\310\010>H!\231=\177\352\013>\220\3337\275\313_A=q?\253<\323a9=\352\256Y<H\235\211=\035?\243=`\010\370=\314\326/>!?\225\274\222\222A\2747X_=\'\207\360=\254|\275=;\274\367\273\344\343\010>\017\037/\276ez\334\274\247l\354\274+|\367<\321y8\276\021F\034\276\263\007\032\276\377\265\314<zk\245=\034\000s\275\235l#\276\263\003\246\276\2061\016\276\203\264\240\275\371\025\247<a\324#>.\213\246\274\t\224\260>a\344\272>\013\201\241={\362\231=m\273\026>\211<$>b\273\036\276~\347Z={\367&\2760h\350=U\200\004\276\010D\215<\207\205\306=~a|<\264\206\036\276\274_3\276\303\373\214\275\216\324\316=g;\212=y\367\376<Fn\376\275\306\2678>\273HM=\017\357y<\266\245X\275w\214\235=`\363\037\276G\341\004>\323\327e<\225\376O\275\261$\314=\nR%>t\375\\>\233\337?\276\336\230R\276Bx\036\275h\211\312\275L\275\033\276Y\245\362=VQ\260\274\215\252e>zG<>WA|\275\nw`;G\221\022\2767\302&>\223y\361\275\305\337\202\275<\271H>\333\264\263=\237=\242\275C!@\276\022\347\237=|\312q<\221\253\231:\314\007\001\275\024|\236\275[\215\361\275\005\2508=O\313X=X\266\213>\352\340\364\274A\277u>$\372]\276K!\201\275\'\257\324\275,\214*=\377#\177\275\332ph>\273T\325<\213sq\276[l\200\275-h\003>b\254\016>\345\003$=ma;\274\033\355\025=\237.,=s\235\227\275d\235f\275\305\031 >$5G\276\337\316T>\3123\202\275\3134\273\2756\346\301\274E(\331\275\217-\250\275z\332\'= eC\275\360u\304<\004@\205=\217\360F\275,\226\221\275\255 \346=\305j\302\275\327Z\266\275xD4\2753r\246\274X\267c\276TW\233\274\r\237P\276/\236\213<\252ki\276_/\247\275\204\334\232=\020o\343\274\362W\007={j\215\276o\004\007=\237\022r=\232\ti>GN\306\273Q\216\263\274)*\333\275+PS\276q(\302=\345\211\260;\'\212\313\275\361\232\025\2768\024!\276A\024J\276v~\026\273\246I\272=K\330\326<\033\2535\276\221]\307<\035\322%;\030\023\245=\346\217w\275\255\0371\275\235\365\335\275\225\036\017\276\260\333g\275\265\374\234\275E\330M>\244F\024=\003!Q\275u\027\021\276\310\002\022=e\2372\275\000y\347=k\2051>\3374}>\317Y\247\274x\335\\>\217\341\242\275\035+\374=\177\177\"\276\234\241@\275.\3245\274M\245P=9:\310\275u\220\361\275>\264\033>\037\372\230=o\205a\276\342TC\276\366-j\276\341\207\270\275\222H\246=\237X\n\275\375t\267\275\211\2421=\236\327\230\274\0032!\276\365\033\250=\262tD\276Hx\246<\034\317\024<\347;G>\034\025\335:\214\250\035\274\353\211^\275\217\001\t>\252}\213=\3138\351=\232\336\361\275\352\270\370\275\252E\030\275K\014q\276\013\016s={}h\275\232\263+\276&\236B>\010\372U=Xj\330=\010\365v>\025\247\342>yf\343=\313\225@\276\024\216h\276\270\344\377;\365\271\246\274\016\370\322\274\313;\347\275\231\316\264<\2260)\275?\220H>yA\227\274\305\301\033\274\253\352\226\275u)\327<\254A\346\275\261p\204=\221\365k=\220\210\214=t\370\324\275\333IU=y\200\022\276\212p\'\276~\342\374\274f\365\024\275\023\347I\276\270Z\001>\356=\366\275\004\n\317<(\300\375\275R!\021>T\031g\274\324\242\006\276\024T\337\275\032\252`\2747\265v>\233W\016\276\221\\M;A4\243=\303\240\353\275B\333h\275\217\014E\275\364;\373=\272\265\016=d\242\374\274\364\303\022\275\305\327*\276uw\003\276\353\3216>z1#>\253;/\275\200\030\361<+\262G\276\032\006q<\242\363I\276\002\214M\275\263\312\214\276*\t[>S\227\013>\300\373\255\275\023A\210\275Y6w=G\223v\275{D\302\275g=j\275p\033\243=\315+\302\274\272\336\032>\300\3769\276\232\010>\274\333\022#>N\t8\275p\244\243=\377H\225\276g\333%\276!t\254<\037#\263=\363\316J=~z6>F\353\025>\303\232;>\332L\306=\331\357x\276\247\360\002\276~|\374\274\230\267n=\365J\205\275\n\252\326\275\267\352\177=\333\001\276==\306\023>\326\371+=\252\023\230\275\251\n\213\276\031\0351\275\317H\004>0\210\253<\2040(=G\233\377\275R\003\316<\312\025\332\275\034\tW\276\331a\203\275:\"\345=\253u\343\275\212\373\202\276\350\326\374\274 \317\275\275G]U\275\025B\267=\327\355<\274\310\014k=\031\213\265=&\233\005\276\326dn=\336\254\273<>\320>\275\375\360\335\275\335\2413>\033\233\240=dD\221\274\334\203\374=\351\356\321<n\'\002\275\212\026\203\276\240\302\335<\332G\241\275S\005!>\227\323X>\262\3621>d\314\355\274\350\343Y>\n\363\205=\030Nv>d>\032<)\036><\311a\250\272w\")=D*x>\361\376\024\276{\210\306<z\177\237=s\021\002\275`\245 >\201\332\342=\350\363\305=\356\336\265\275\341n\200>d\360J\275o\t\n\276\367\263\201>\024\\6>\232d\022>h\253\246\275\314>\230\275q\350%>?+\370\275\3370*=\305O\023=T\243\210=7\321V\275\211j\214=\001\365\330\274\227\370\310\275\027\236I>_\3269\276\005\334\333\273ph\006\276\027\370\251\275\360\221\225<\240K1\275\006\210\207<\315\277\022\276t3\">\244\254~\274\322\316\230\275\320\354\032>\0108c\275$q\000\276\206\025\204\275+@1>\t,.=\226\257\024=\263\305\006>Q\320\237\274f?(>\343\305c\276\355\345B=9\013\333=\220\235\303\275$\022\231>\307\377\014>J\300\274=pm\326\273\t\006i>\251\215)>0 \265\273\r\234>>\223\302\002\276&\334\207\276\177v\005>\033G\277\275<\366 \276lJe\275\202\341\206=E\207\017=\246\321\013>H\220\326\275M\217\207\275\312~\206>\242\343\243=\257\242\231\275\314\t\377;L\026\032\276\271fC>\221\347\367\273\360+\021\276\272\266\227;\020\237\250=\2235\251\275\230\342v=\350\276j\276Z\324\356\275-\322-\276\220\320\336<\350)\250\274I\2757\276A\252\002<\026_U\276\2130\001>y\355\303=\247\276\373=q\327T\276/\200\203<\343v\222=p_\301\275\301:\226\275G\347\216\275\3315\311\274\241\271\"\276\t\365\305=WH%>v\371_>\245<\214=F\336\375<\177\253\206=\0304\306\272\254\032~\275\275\376\321\275\340\277{>\221\311H>\246Q->\242D\311\274\366\372\257=V0\326\275z\214\000>\001\024\t>\346vC\275l\'d>\221&\001\276\2318<\276\275\254\240\275\317\233\311<~r\330<!\327\200>3\035D=\222\275\263\275)\330\373=\375\257\211\274\243\306\354\275V\360+\276\227\242\204=u\326\364=\270z\256=\306@-\275\363Z!\276F1\354\275\034#u=\323\375\210=_\250\030\276#i\221\273\327\273\327<TF\016\276r\217\265\2757a\274\275\023?[\274\332\254\201\276\362\377!\275\221\225g<9%\256<;\352!>"
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 30
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/w/Assign"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/w/read"
      op: "Identity"
      input: "model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc0/b/Assign"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc0/b/read"
      op: "Identity"
      input: "model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc0/MatMul"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc0/add"
      op: "Add"
      input: "model/vf_fc0/MatMul"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_1"
      op: "Tanh"
      input: "model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
            tensor_content: "\241\260\253\275\213\007\235=\010\320-\276H\216\351\275\022H\014\276\017\212\000\276tc\377<\236[\325<\316\303w>\316\267H\276\005\027M\273\007\336\304=\236\235\327\275\022\376:=^\"\006>\351\373H\275\014i\205<\306\332\362=b\373\266=\221\256\\\275\272\005\013>\322`\342=\240\0217\276\271+\177\275\035\006s\276\200\227\347\275\245\206\262\275P<\033\274\271fE=+a\t=\234\343v\276\214^\273<\"\'.=\020#x\276-\366\255:\214\005:\275\300-\014=\2425\257\275\307\021\014\275\034\357\020\276J0\212\274S\341^<?\266\035=\036p=>\nH\223\275V\237w\276\261F\034>\330\322]=\220\023\016\276N\201\307\276\215\007\254=g\004.>e\360d\274\002\217\034>^d\225\275;\010\355\275\353\346n:p#=\276?Kz=\252\316\253<C\234\342=\362|\232\276\342\274T\276\352\231\247<`\2743\275\351a(\275\005\326\013>\026w\322=!.\366\275Q\262\223=h\027\314\275\3778\261=6$\277\275j\354\222\274\334\317y=\370\345\217\274\337=\034\275aPt>\027E|\275\020!4\275B\257\014>]>\373\275Q\037\243>D\352\303<\306}+>\217\033\r>\300\335)=(\001A\275\'\376R>\337_Q=\256\265\314\274\262\2436\275\271d\244=\374\316\355=@\376\364\275>\220\323=\370\210\371<\227\010\010\275\202\376\257<\237\017.\276l\020\232\2756R\345={\r\206\275\373\255v\276J^\265\274\2306*=c\351N<\014\010\230<:TN\276$\027*\276c$\031=\372\000%>:<\224\275@\361\331<z\362\025=Y\035\356=\253\331\302\275\222M\316\274\316N\335=$\366\205\275\354[I<~\371P=\031\325/>\377bm\276FxY>\200c\013\276\030\302\355<fQU>\203hO\276\003|\021>\335\232?\275a\372I\2766\233\235=\234\034\342<\260oa=c,\263\276G\247\202;\206\331\235=\307\336K<#bq\276nT\037<\324\\\223\274\340\260\270>\373\327\013>R\226\214\2767\234\025\276Q\026\247\275\236\323\225=\232\256\034\276l9d>\035\364\204<f\227k>\315N\263=\260R\373=\302a\242<m\026\326\273S\256\361=\034\321\021\275]\221.=8\313\273=\367\306\033:\266^}>m\334\270\275\332\362\230\275 \024H>\364\353\327=\371J\234=9\325\024<\371\376%>\020\307M>\355x\016\276\323N0>\027\032{>?\247\227=\262\242\000>\020]\024>\253\006M=\302H\327\274\210O\'=+\n`=O\271\327<\307\270j\274\217\037\316\275<\356\364=#G\345=*\273\247=\346/Q<\371B{\276\007\376\213\275\276x6>\351J]\2764\233\205\275\202\032\270=_\311\323=%\212\204=zu\271=o\256\234\275\306\345\220>d\353*>\037\251Z\275*\266\204\275\364\213\025>\335\023\235>\210\225\006=\345\316\213\275\345\315\023>\356\t\210<>\r\013\276\332\257\366=\367\357?<Y\023\206\272\204i5=V\022\013\276`\330w\275\366\233\017\276\367z\302\275&C\353<\202w\245\274q\372->\206\002\201<\316\216\006=\337\'Y\276p\334\207\274w\316\350<\t_\236=9\225\224=\215\016\t\276\323\371d\2750\024\353=\311\375\275\274.+\016>~\312\224\275\200 \016\275~\331@=\220\350\\\276IA\365=z\213\232=\322xJ\276\275q\256=\213B\\\274N\320\340\275\217a\316<C\212\000\276\254\347)\276y|s=d\356]=#\366g=\357\375\240=\203\310\030=\027C\256=`\313\346=9\032\224=\013\002\334\274/\016\177\275\245\004\274\2754).\276=\222)<I\323\230<>\235\232\275u\256m=\305\253\300;\367\234\263=;U\003>\257\207\003=\325\251\n>U\306\200\2769\3434=\227a\224=\340\225\247<,K|\275\247\327\364<\263\270\177\275\254\363F\275\367\306\362\275\306\276\016<c*$\276\260\013\205\276\276\211\336\274\037\261\245\275\263\340*>\304\257\013=\033a\206=R\361e=\3002b\275\3279\275\276\020\014\326<\354D\243=\302V&=\337*\016\276 \224\203\273T\357\006>\240\tc>\324\314\376\274D\303\211\275\026<\201\274\000\013\201\275\010=\010\276\232\237\016\276]\030\361=\025\206\t\276!\3736>dU\321\275\033z\317<\375\353\003>j\341\217\275|Q\222<\320\'\333=\371k\211\274\333~Z=\271\360/;5\322\301=\305\352\036\276\234\346\310\275N\246\027\276\332n\332>\237!\027\276\335|\203>j=->5\241\232> \363\206=\336Sl\275\017\275<>\034\205u>\235\374\013\276\225\266U\274\263\326\014\276\372\337\014>\302\327<\276\n]\032;\210l\301\275k`\235\275Rq\231\275\361r\271\275\277\362\021=b\215\212\276\023\311{>F\365\026\2763\306\236=S\354!<\335\340\205\276\261\311\023\276N&;\276\232\3731\276\"\024\n>\353\r\325\275\357\371(\276\231\374K>\371X\221=u\224\320=+&\306\275\207\213\006>|^\275;,z_\2757\201\325\274\234j\260\275-\333\227\275t\251\201\276,\004\000\275\335\377(>\375\372\002\276\276C=\276\307\237\004>\370|\002=\216#M=\270\205\007>\2635\260\275{\332\375\274n\033!<\027\355w\276>b\244;m\221\255\2755\362\262=\027\224\317\2754\334\000\273g:\233\274\311\332\327\275J\034\232\276\373\325\275<i\267\330\273\025\374\005\275\346K5=\370\212\202\275\263\221Y\2763\377*=\024,Z=\222\321v<R\245\307=\330(\016\276\023\346c\276Y\350Z>\272\r@\276\315\333\323\271\222-n\275&\264\213\275\031V\214=\177\'i=I\023q=\303A\026>\024\220\202<\236@\023\275\370Nr=,\021\022>g\212\206=\017Av=\277aB\276\225\0053=\034#\342<\021\270w=\330\272|\276\267\270<=\342\016\023>8~,=!\367\254\275\210\267@\276\243\351\221\274\227\254*>\017\337!\276\201p\344=\031R\373<S\237$\275\321\270\234\2757\000-=}\267\320\275\325\341\257<\000\243b<\246E\000>\362\217\210=v\221\014>a\353\372\275\274%\344=\203\266\372\275Y\260\216=\220\256\t=\036q\250\276\235\362\222\275\234\355\346\275\032^+>\346\230;=\311R\256\275\216.\223>h\033\326=p>+\275\212$\026>5\201\033\275\322\230\211\275\006xf=\246\231\216=\343KM=>\245[\276\220\304\266=\330l\204=\337S==[\225\205=\241K\226\275Z\n\224\276\227-3\274\320\341\352=\274\255\216\275\022\233\355=\272\274\033>\206\322\221;\265\005\250\274\267\225\016<\213J\231\275\245dN\275I\315\303\274\352M\236=\274v$\275@\013\224=}\354\013\276\236(\277\272\212s\177=\303d\033\275;uB\276\031\020\240:X\361\340\275\026\312\250<\225\247\203\275\263\331\257=\260\204\301=\301\377\022\276\201\215\317=\305\266F;p\024\250\274\223\267\272\275\306o\024>\203\250\231=\022G\010>^I\336\275?$\300\275/\020D\275\311K\000\276\356\270!\276|N\330;\272\352p=\216<G;?3t<\367\215\027\274\rK\262\275\270\2348>\233\340\r\274\271\337p<\353\337\234\275[\273F\275\030IY\274B\371\007\276\223\242\004\276\321\222^\276u\360!=c\005\347=\320\306\024\274\272tw\275vzL\275\3107\306\275\362m%>}C\300=\343y\304<\177B\205=!\205\230;\010\253\346\275Kq\327\275\350\216\203\275\321\"\330\275\005\214\224=\000\320n=\221\316\r\276_\214F>\333\243k\275\037\225\322\275-\300\005\276M\344w\275\003\013\223\276F\270\224\276\211\366\364=\255\361\006>\216\311\\=\263\260\217\275(\3648\275Q\254R\275\177;\327\274+\326$\275h\3014\276\006\336n<O\362\204=\216\213\255<aD\312\274\r@F>\027A9<]\314\024\276\2110\257\274\204[Q=\277\360\031=O\375\206\274\003\302->\252\3710\274\016\347\026\275\344\007\236=\251+\333;UP\003\276\362\352\002>^\232\310\275\246\020\223\275\353a\003\274\373m0\274\326\005\305\274\340\340m\275y\253&>\301\322$:a2\205=\366\306!\276.L\320=\371\316\325;J\347\000\276\250\000;\276\367{U\276R\236\227<\243\021\002>tT0\275,\354\204\275\341&\207\2760!B\276\235+\032>g.\242\273\374\034\001>\\\'^=\010\267\n\275K\334\340\276\223 \032\274x5\332=\266-\206\276\240\3722=\302j1\275u\245\265\275U\221\316\275\276$\344\275\355\030\317\273T^\017=y\234\213>\265g\207\275\235\302\264\276n\335W\275\357\374#\275=I\276=Q\220\256=\246\264\277=\275\034y=\277\022#\274un\214\275s\327\005>\371P\314\2747\352\271=\327\320\272=\362\227\256=\365\333u=\2637n\276\355X\357\275\261\024\242\274\351\335a\276^ut\276\373\227\305\275\204b~\275@X\243\275~\024\203>F\177\010\273ie\r\276H\355\003\276\n\014\226=$\244\017\276\005\375\372<\252Tq\276\2607;\276\236\010\036=\337A\014>v\242l\275KA\332\274\354\223\266=\\\332f\276\001(K\275\035\016\301=\006\\\030\276\316\330e\276\237\205\010>\243\312w>\236 \021<)\322\3359;\337B\275\247\037@\276N\302b\275N(\200\2740+\n\276+W\310\273\245\377b\275\375\036\272;.os>\004\203&\276\032\3113\276M\000\225=h\240\300\272\216\037L>\230@)\275\277\263\232\274:\325H=\370\371[>Y\235\222>\021\334Y\275A\300&=|Q\206\275\213T!=\267\223\025\275\'\270\353\272{\261\271\275\270\010\202\276\307\210<\275\2171\311\273\"\257\002\273\026&\204\275J\n\260\275\275N\362= O\217=F\301\221\275\320\227\356=\362\274\024>\374\r\251=\323\355%\276w\301\317=q\371\257\275;RF=\217\316\311\275P\263\030;\310\034\027\275\317\001\313\273:<\026<\236G7=\325\371A>\366\357l=\200\347\343=S;\003\276 \364\017;\317\000\360=\217\264\320\2732m\231<]\276\014\275\242\331F>\030\207\315\275^\373\000>\004\3256\275\270\303\356:Qy\331\275(\361\r\276\367\261&>+<7\273L\243\355\275\001\025-\275^\315\225\275\343#Z>;t\006>\245\205\373\275p&%\274\242\203|<\245\257L>\014(q\276J\327\267\275|\277<\275\220\260\013>\3323\316\274\240\215\271==E\037>\244\271\'\276\370\217j=\206\003\325=B\027{\275W\273u=\020\000\356=\337\237\025=\205A\2779\024/N\276\tE>\275\213?\357<\3356\376\273z\272\214\275\034\364i\275\034c\263\275d\256\200\275\214LY>\341\203W=\"g\014>h4y=+A\373=\272\216\026\276aP\312\275B\205\271=\336\032c\276\372\326\017<\323!G=\363\251\t>;Z\000>\027\312\022>\"\312\207>\201y\007\275\2738D>\210\343\323<7N\013\275~\255\274\275\365\000\227=_\346\230=v,=<\251^\210=\306=\243>\037?\031=#7\273:\307\307\024=-\345\r>x\005\272<+\315\325\275\301$}\275\0214\3049G1/\275\320MH=[\371\247<\227\032\220\275,\332=>{6@=\212\231A\274\225\237\240=B\276r=\245C\221\275\231\371\206=\031\375\004\275\032\211\271=\221\337\007\276\321x\212=\017%k\2760LK\276h\3115\276\237\206:>\247\000*>bf\227=_<\347=c\003\325\274\010\343\357\274\027\267\026\27694u>\301_\020>\"\202\005>d\257\312=\321K(<\304\227Q=S\304\335=N}!=\'\321P\276jq\366\274\003\"\271=\237MU\276\002t}>n\370\216<:\310<=\234\324,\275\030\242@\2761GX\276\000\rQ>\\g\237=\n|b=\225\231\203\274\355\354\376\274\020gm<\243\350j\275\203\360m\275\212\340P\276\211\251\217<\022\353\364=k<\200<J\256$>\335w)>\014\023~=\373\031\320\274\333\242\276\273\2208S\2755\n\251=\374\204>=H\036I=l\330\244>m\252\222\274\271\270\013>\353\360\r>\360r\226\2765\371A\275\254^\035>\230\303N\275\376s\334=\321\360\004\276\256\362\376\275\036q\003>\253~\331=\201\330\033\276\340\025\235;\240\305\331\2752.\242:\265\314?=Qt,>-\025P>\373G\000\276\224\230b\275\217Oy=\245\347\352<\242\204%\274\324`\\>\352W,>DY\230=\243\033\206\276\277qw\276a\226s>\364\274\201=\207=6>\251\247\013\276\222\224\346=\233\311\220\276\344\203]\276\014ar\276;\320e\276>\016\006\276\300\016\020\276\336\200J\276\362/}\275\'\373~=\225V\202=\327\001\010\276\264\3651>\'C\367\274\037\373^\276\372J\320=(\204\023\276\276q\305=\"\2008\275\333\035\330=P\245\242\275\027\251\216=\227s&=*\202\245\275.$q\274\372b\265=\\8\363=\'^u\273eko:\232b\014=\022\340\200=\262\245\375\275D0\\>ZFD\2763\260\346\273\2323\215\276P+Q\276\200\016=\276\271\366;>px,\274\'N$>\007\210\032\274\251WT>}\377\271=\356?\247<\031\351O=\t\277\033>\354&h>\032g\321=\336\351R=\027j\320\275\303\352p\275c\216(\276\266\254\r>#\220+\276-\025\206\276\033\257j>-P\t\275\373\221\003\276\226\216z\274\371\205\022>H9\334<@\231G\275{\344\211=>\360\261=}\263\213\276\">\347=\263\215 >\3448\322\273#B\206\275\204\"\033\276,\200Q\276\350\332\026>9 v=p\214\037<\026\234u\274\345\373\232=>\215:\2755J\312=\304<\001\276\320\373\324\275\252wr=\000\316\'\275\243\201\253\274\365\312\n>C\214\010=\373\"L\276\023)2>\303hX\275c\372j>\\\323:\276\014)\220<\366\353[\276\220\312\214\275\315_\033\276\023\205\241\275\360-\261<\022\342-\276\335N\332\275\324\027B=U\227\370=\267\033\032\275\247^\252\276B\207s>n\353$\276\333\'\342\275+2\315\275\004\311\177=\036\0327>\342\324\247\275\321\233\035\274pc\022\275\267\034n=\300\227k\274\322\004f>\223\267\003\275L0\334<\361n\274<O\374\203\276q\301\373==\000\275=\235\030G\276\214@\205=\320\355\302;\350\026\257=\250\226[\275~T\262=2\374\356=hn\312=)\030\236\276\316s\316=V\313\306\275\272N\031>5;\204\276xP\224=\312\030\031\276\316\275\235\274\352\\j\276g\345\252=v\363\177\274e\n\036\275O\016\234\275\374\354\210\276\231\017\020\276FHy\275\210?\214=\225\323\034<\014\005\026\275\202ga=g\302;\275"
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 8
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/w/Assign"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/w/read"
      op: "Identity"
      input: "model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 8
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi_fc1/b/Assign"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi_fc1/b/read"
      op: "Identity"
      input: "model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi_fc1/add"
      op: "Add"
      input: "model/pi_fc1/MatMul"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_2"
      op: "Tanh"
      input: "model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
            tensor_content: "\350\360\242=\326Y\314<\275\265\336\273st\320<\005\361\310<\370\333\237\275{1\263\275\275}H;R\347d\274\023F\250=e\274\022\276\222P\261\275\261\266\334=\300]\227= \252y<\330\177\353\275\014\245J\276b\033\022>\205\324\213\276\177\010<\276\247<\350\275&m\350\275{I@>\374\203N=\357\372\307\274\002\213\253<\"\022I\275\230\275h>\357\027\257=\326\231\214=\200\324P\275\037!>\276\301\202\327\275\374e\030\276\025\346\226\274\213\376s=<\036\214=\364\317\361=\\E$\276\347;\255\275\022\247\034\275\261X\275\272\231\021\266\275\370X\016\276\252a\002=\240\377\r\275\314i\037\276q\343\206>\200o\376=K\266\330\273K\036\020\276\'\331\306\275\010\360\223\276\214\001P>\255K\023\275\327\330\210\274\251\000\277\275\371\2260\276\245\237*=\nyc>\017)\272\275M\'\020\275\313\352\231\276\306\014\336\275=\276\300\275\334B\330\275\327}}\275P\257\371=\336r\013>\206?\027\276D7\217=\225\246^\275Rn\036\276\273?\256;\315\362\330\273\256\245\022\274\267\3513\276\303J.=l7\350=\224\246\014>a\206t\276\361g\277=\356nE>n\310)\276s%5\276(\260\365<|\304\027\276\341\313P\275v\212\243\275\013\217+\276\245\336\307\275\307e\210\274{7\010>\231\001\221\276\032i%\274\262\003\004\274\256\370\n=\202\200\217<\277l\361\275\376\003==\226\324\316\275\270[\261\275\031\352@>Bu\343\274&\032\206>p\211\000>-\'\201=\231O\027>u\250\266\274i!\301=\324K4>\352\231@=\0170v\276\210j\n= \277\n=\231R\310\274u?\364=\313\237\"\275\351\305\363=\312\223m>\222\255\215\276\202\014\333\275\344\t\030\276\037W\024=\014\240\002\276\327\266\346=\n\0224>\320A*\275\361\223\201<\372\024\225\274#\265\342\275y\263X\276\'\220\200=\001\022\312>\206\364\271\275\230e\233<\275\353\271=nS \276\262\257`\276\274\271\335\275\224\000\370=A\203\233=:\0044>\263\307\204=o\342O\276\264(\001\274^\265v<\032~\257\275\370\220\350\274\210\373)>a\335>>\363\333\023\276\032\310H\2751\200\220>\035\020B\276R\214\301\275\301\035\n=\202Z\265\275\317\331R\275\376k\316=\376\344E>\017\014\323\275#\253N\276K\375N\275\221.\003>?\t\022\276|\261b=\271\337u\275\243^h\274\327\371\n>\362\350\241=\254\302E\276/\221\313=u\240\r=k\034%\276\304\241\255\275\2349\032\276\274Y);g\203\377=\350\014\210\274\347w\302=5\345u<\247\036E>\004\225v\275\006\220\233<\265xl>\340\267\270<\346s\223\275\320\226!>\261|\246=\013\225&=\013\231\206=\210\355e\2757?\353\275\222X\360<\007\344,=\207:\020>\r\237M\276\353~\231=&\226\271\274\331\034\272<0\273\312\275\326;\000\275W7\221=\013\211d\276B\036\201\275\201\201\r<\325d\231\275@v!>\340\341\026\275\177.F\274\313\204)>\254\337\361\275|\024\230=\262R\363=\365[\244;\256\305\320\275\022By=d\240g=\247\263[=\021v\203\276\361x(=\221\376\177<\265\275\333\275\372\037\034>\316K\370\275\0357\304\275a8\206\275\025\317\375\274/\177q=\230\316\316;ay\177>~\277\223\275S\237O=%\025\223=-\001\031=\312\032\342=z\0267\275<A\246=2J\370<\312\262f=N\034n<d\024}\276\257l\206=\337%{<\230\372\"\276\023A,=(\245\302\275\014\020\024>\301\272\200>\241*N=\002\335;\275\351\001\306\275\276\355{\275\254\241\231=~\0378<\212\2309\276a9m\275\010\367\201=W\267\211\275V\273\216\274;]i\275\013\335`\276/\026\257=ua2=j\\d=\264\224\205=\013\205W<\237ra<4\014k\276\250\254\226=r\036?\274\365\315\314=:Z\306\275\277\245\323\274\270\2361>\ngO\276\357r\215\275\010\226\302\275E=\257:H\233\206\276\245L\026>FL\'\276?V\231=\242a]>\317s\200\275\354\335\206=rW\362=\215k;>\364X\247<\240\2749\276\\pK\276m\203X=v|\002\276x\021\336<K\317\026=\324\024\016>\345J\215=\367\245\205>\0164\302\274\352,\334\275\257\346\352=<\256\377;\321\214%=\013i\266=\032\203\257\275\340\202\362=q\016/\276\344\354\024>3\220\032>zt\327\275\212\353\244=LBX\275\rF\n\2760\306\304=\333^\234\275\254\214\027>\242\3723=\357\331R<\035C\225\276S\306\206=T\261Q>\026i\323=\324\315\221>\243\277O>\220\365\373\275\277\030\242=\346\216\352=i\003\330\271\333]I>O\177\225\274\255\030\005\276f*\265=Q\232\035=J\"\r=\357\225\375=\263\235\205=\037d8\276A4%>A\347\342\274*\234\374\2756\223\243=mD\242=\357l\261<\3643\005\276_\206\247>8\022\023>\310\3239>\254\246\353\275 f-><~c\275]\366\370;\234Y\006\276b\366\310<\251\255\271<Yv\252=\024i\222\273t\007\017\276\371U\371\275\014\324\365;H\246\313<X\330\026\275\007o|=\311\261\256\275\023,P<\267\250:\275\010\343U\2769\356=\276\201\306\326=\246\231\014=\321\312L\276\001g\225\276\355D\021=i\211\367\274-\210\321<\r\000\273\275\034:\"=L\255\214>\350.\257=/\000\032\276-\363\036\2756\017\371\274\'Z\200=\250z\363;\357\206\000>\010$\233=\330`\343\275T\361\230=\325\301\307\275G\013\031\276\340\337\222=ai\026\275\032T\020\276{\2148\275\023\366\351=^\262N=9}d>\016\233\350\274\225ub<\357\006\373<\024\256D>\375\303:\276 \3315\275\274\250\222\2752\\\323<qkn\276\031\372\315<N\266)>A\346!<?\303\374=\024\2037>\\\257\306=8\014w\276\234h\242\275\206\363\242=\230)q\275{\014e\275U\242a\273X\232C\276\310\005\314=\"v\002\276!\021\234<\265\307u\275U+\372<u\315\331=\227:\340\275O\031Y\2762],\276,\034\246\275\332\tW\276\370\236\366=\347q\036\273L\263\n\275^\0247;h`%=\023J\213\275EQ\372=\340\003\240\275E;\014\276\354B\227\274Zl(\2766\370\022>\240\264\367\275\265\227w\275\326\215\243\276\334\323\217<h\251\031<r,\200\276b&:\276s\374\234\275\234\0271\274m\003\3049l -=\316R\337\275\"\215\214>\344/\231\275w\242\007\276b\336\037\276\270\247\006\275;\2606>\276\034\016>>\213\024=\267\360\002\275m4X\274\026@V\276\361\267\212\275u[\327=\357\354\r\276\215\342\214\276\203\243\336=\211\223\236>\326\032\201=\\&|=CA\367:\305\277\365\274\323\366C\276\013.\021;\206(\365\275Q&\334\275\347z\005>(6\224=s\245\235=J\233\335<\324\036\204=%\002 \276n\226f\273F\275\014;\220\331\207>\206\013\245=\340\031\334=V\031\211\275\326T\003>6\026\037>\020~Q=K\377B\276z~\016\276\222Mu<n \244>\003-j:\213\322w\274\207\032z\275\tK\220=\017\005\016;\351%Q>\216\363\267=\2308\013\276\206~\014\2736y\373<\354\254\024\276Av_\276\313\003\332\276\304\214\347=tl5>\267\307W=&}\266=\010r\250\275\276\022f\276\327vt\274:\275\204\274\014\325\367\275EK/\275_T\274=3\256\">\202\310\025>j\306\224\275D\206\265\275)\337\333\275\214\341\217\274}\202]\275z\310\255\275\300%\206>\205\226\032=fu\247\275\304\303\024>\n\225\002\276\224\016d\276l~Z>\222V\237\274^\335\'=\265\0370=\006\2000;\326\303\276;\354\204,>\033\tg\275\326\325R\275\217\367\266\275O\204\017\276\317\346\255>}\266\014>\023\301U>\007\202\340\274\004\332\233\275\275P-\275sub\276\302F\363=\210V&\275$E\034=\250\266\013\274K\261w\275\275]\224\274\177\034\204>\031\341}>\313!]\275P\300\273\275\021\022#\276`\240\016=l\263\016=\261\205\337=\0020\030>\202\255\207\275D\343\'<\316\253\201>{\357}\275eB\227=v\252\372=FF@>Qd4\276\311\276W\275\324\334\026>\235[i<vy\033\276\207\335\222=!w\276<\006\304<>^\'\362\274B\262\037<\323\257\204>oo\225\2732\246\r=\005m\264=\346CC>\r#K\275_\"\017>\242\021\243\275\257\217p<\230Q\242\273\335\326\017\276\216\227\326<\202\256\036\275\314\366\200>\270\342?\276\020@n>W\n\367\275\\\360^\274\271\240\250\274F\322C=\246\340\206>\303\341\306\272\2163\214\274s[\213\274y\r\004\276>V\023=\315\177T<\337X9=\241m[<\232)D>\241[\372\275\331\215\010\275\220\333\025>%\321\003\276\nL\237>\222\035\232\275\207m\212\275\014\217\037\276n\020\306\275 fg>\374\3153=\360\305\326\274S\325\000=\340\254\206\276\251+\275>\237@\216\276\035W\317\275Xj\321=\017W~=5j+\275\023n\246;\220\024\252\276\261a?\276s\274\336\275\255\031D;V\324I>_\365_\274\251\324\276=\226\3337=k2\033=\014\274\305\274\002\326\357=Sd\037>=9\263\275\376\037|\276c\265\366=\2126`\275x\341\225\274\257\317\273\275\221I@\276\234H\202\274\0003-\275\264<\245>\273\024\333\275\262\314\233=\201\200{\275\365q\240=\227\311\227\2758\024:;\214\243\010\2745\033~\276R2\310;qZ\016\275z\355\331=\241\333?\276\242\\T\276\320o\001=\016H\240=9>=>]\307\270=\024\255\266<\212F\037\276\006d\001>\207\252\022=S\233\254>e\237\327<\327W,>\002\364\344\275\3043[=|q\304\275\020&\t>\217\013\340\275l\351X\276\324\337\202\2760B\261\274\357\260C\276\242\203p\275JW\003\276N\263\214\274<\300<>W/[;V\351\302\274\"E\030\275\337\375\034\276K\362V=>&\311=3&\363\275\360\205W>\037\3123>t0\303\274C\271p=K\014\205<\246\\I=\3677D>\345\032\007\276\335\220\222\275\330\034\247=\253\221\013\276jd\203=\370\255]=\334\364\016>\022En\275Jq\234=\246\370\034=\224\2714\275\\\351\372<\372\223c>\374_u\276=\375\212=\236\017\373\275H^\356\275f\237*>\353T9\276\332\335\373=\202_C\275\2449s=\217\317\005\276\223FQ\276\353\300b\276\010\236\327<\236\237\016>\206\235\002>\356\264^>/D>\276\250\217R<\002j\027>\240bi\275A\347\323=\306p\220\275\300c\355\275\373\343\026>J\3679>\307RQ=[\333L=\'\367\017\275\200\\(>{\225@:\230.\237\275\263A\322=\275\235?=\212;\316=\323\315\";\r~\021=\224\021\026>7c\334\275\321\021\002<\006\026\216\275(\272 >\255\302C>fP\014\276\315\021\233=\242h\300>;\322\261\275\254\006\241\274\0006&\276\335z\002\276\362\215\221\275L\344\340=X\024\201<\273\255\014=~\217\016\275\274)&=\006\374\331\275\247\016\026>V\240\332\273\265y\224>{G\312\275\340g\274=\023\030\307\275\247\277m>j+x\2754V\013>\303q@<<\027\206\275\311\274{\276DJ\216=\177\006\255\272\342\213,\276~qG\275\256\330/=rd|\276Z\202\224;LZ\006>\016\030\235\275Y\246\014\276\037\250)\276\247\";\275#\254:\275<E\313\274s\262+=P\333M<\330\t\246=\203m\314\275k=A=P\366\245\2749\n\'=\246\264\200>\274\260m>\216\332\000>\244\265\002>\037A\250\274\321\3663>)\016\227\275A\270e\276\266k\215=\337e\357\275\033\221X\276\223U;\276\216\255*=\217C\000\276E\272\222=\202\316\'\275\274M\322<\211\261\315\275\301\312\300=\200n\024\276\302\245\327=Q\246\007>\240=\247=\260\243^>6\376.\276\267\366\206\275\017Gq\275\016\273\362\274\217\017\245\275K\211x\274p7\273\275R2,=\257\361\206\275\270\257\267\275\330\371\220\275\234y|\276=\303\221=3L\200=\014kU\275W\021N>\003\317\246=5H\301\275\325\273\003>\271\213\277\2754\302f=\265\320\346\275M\246\206\276\213,\244;pS\205<;\353d=\002<\306\275W;\023>\035\237\214\276Y\0034\274\323u>\275O:\276\275\376\177I\276RI\314\275\215.X\275\275\036:=}N\n>y\271X=@\277\020>\330E\010\276l\221\302<Z\026\r=\260\366\343\275\227+\366;\364\242E=\270\3668>\'\021\031\275\002G9>r\307\222\274\036-8<\371\026\202<\227\010\007\276\340=\255\275\310(\316=\315\251\005>R\255\251\275\313I\344=\251-\311=\2460\010\276\315-r\275\344\357\246=\007\251\312=\010\323\213\275\242\223\224>\340\330\250\274\222\307\004\275\324\376\263\275\035\206\370\274\n\036B=[KG\275\276\311N\274\026\260\324<\320\246\002>\267\334v=\256\235\037>\213\355\030\276z\256\216<2Q\227=\014Y\005>\261Pz=\205+\323\275B\262\200\276\360`\277;\007.R>\\\007\226<7l\025\276}\234\235\274\300\277&>>\377h=\362\210\337\275\363\007\267=\235\300\016>5\342\037<H\000\261\275F(\216<\310\254\321=\t\020^\276~<\277<GV\323<\324\272z>\220^a\275n\177\001\276kN\021>^\r\331<#\343I\276\022\223U\276N\334j=\315\311\016\273\033!@\275\214Q0>\035\302)\276\222\017\302=\347\204\030\275\356;\005\276\375Ku\275\215\224>\275\223\347\253=X\026\363=\372\265\305\275\341\202\340\275\374\"\002>\357m\253=\037#\230=\037Q\357\274\216v\365\275\372\271\204>\345\013k\275\006\313\355=\356KI=\354\321\026\276\274v\023\276,\306\340=\321\355\217=}\257_=\236\344\354=\274\322\222=M\001\265=\023k\364=\235\300V\275I\357>\275f\223T\275\340-l=3\367\215<\272\2455>Q\330\030>/\340\022>\253\022u\275O:\232=\320\245x\276s(v=4\203Y\276&KB\275\305\204\326\275\3658\234>g\276c;\357\3240\275p`@\2733\014\177=\354*.=89\347=Z\203\024>3\236\n>Q\306\223=\262]\003\274\244\352B>\037\273\263\275\314\206\253\273X\000p\274\256\322\226\275u$7=\240\305\214=\357z \274+.\032\276J\252\230\275}9:>Y\207\277\275\262L\003\276\370d\337\274\366\212\334<\002\342\002=\035\346\007>6\325\006>\361\\\323\275\337\177?\276\177&\243=\373\337\353\274\211}\352\274\253Z\332\273"
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 8
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/w/Assign"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/w/read"
      op: "Identity"
      input: "model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 8
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf_fc1/b/Assign"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf_fc1/b/read"
      op: "Identity"
      input: "model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf_fc1/MatMul"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf_fc1/add"
      op: "Add"
      input: "model/vf_fc1/MatMul"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Tanh_3"
      op: "Tanh"
      input: "model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\253\274 ?\313rT>Cq \277@\017,\276\\fE>\326]\365=Sw\353\274\352\r\231>"
          }
        }
      }
    }
    node {
      name: "model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/w/Assign"
      op: "Assign"
      input: "model/vf/w"
      input: "model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/w/read"
      op: "Identity"
      input: "model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/vf/b/Assign"
      op: "Assign"
      input: "model/vf/b"
      input: "model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/vf/b/read"
      op: "Identity"
      input: "model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/vf/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/vf/add"
      op: "Add"
      input: "model/vf/MatMul"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
            tensor_content: "$\3274;\317p~\272\247\334\361\273\363\211\344\270F\353\002\272={T:\370\221\267\273\036\200\r\273"
          }
        }
      }
    }
    node {
      name: "model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/w/Assign"
      op: "Assign"
      input: "model/pi/w"
      input: "model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/w/read"
      op: "Identity"
      input: "model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/b/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/b/read"
      op: "Identity"
      input: "model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/MatMul"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/pi/add"
      op: "Add"
      input: "model/pi/MatMul"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/pi/logstd/Assign"
      op: "Assign"
      input: "model/pi/logstd"
      input: "model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/pi/logstd/read"
      op: "Identity"
      input: "model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/mul"
      op: "Mul"
      input: "model/pi/add"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/add"
      op: "Add"
      input: "model/mul"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/concat"
      op: "ConcatV2"
      input: "model/pi/add"
      input: "model/add"
      input: "model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
            tensor_content: "D\236\250;\3607v;F\371\211\273\\iJ\273G(h\271\201\322Z;X\233w\273\0060);"
          }
        }
      }
    }
    node {
      name: "model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/w/Assign"
      op: "Assign"
      input: "model/q/w"
      input: "model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/w/read"
      op: "Identity"
      input: "model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "model/q/b/Assign"
      op: "Assign"
      input: "model/q/b"
      input: "model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "model/q/b/read"
      op: "Identity"
      input: "model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/q/MatMul"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "model/q/add"
      op: "Add"
      input: "model/q/MatMul"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "model/split"
      op: "Split"
      input: "model/split/split_dim"
      input: "model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "model/Exp"
      op: "Exp"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "output/random_normal/mul"
      op: "Mul"
      input: "output/random_normal/RandomStandardNormal"
      input: "output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/random_normal"
      op: "Add"
      input: "output/random_normal/mul"
      input: "output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/mul"
      op: "Mul"
      input: "model/Exp"
      input: "output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/add"
      op: "Add"
      input: "model/split"
      input: "output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/sub"
      op: "Sub"
      input: "output/add"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/truediv"
      op: "RealDiv"
      input: "output/sub"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Square"
      op: "Square"
      input: "output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum"
      op: "Sum"
      input: "output/Square"
      input: "output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "output/mul_1"
      op: "Mul"
      input: "output/mul_1/x"
      input: "output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Shape_1"
      op: "Shape"
      input: "output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "output/strided_slice"
      op: "StridedSlice"
      input: "output/Shape_1"
      input: "output/strided_slice/stack"
      input: "output/strided_slice/stack_1"
      input: "output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "output/Cast"
      op: "Cast"
      input: "output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385175704956
          }
        }
      }
    }
    node {
      name: "output/mul_2"
      op: "Mul"
      input: "output/mul_2/x"
      input: "output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "output/add_1"
      op: "Add"
      input: "output/mul_1"
      input: "output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "output/Sum_1"
      op: "Sum"
      input: "model/split:1"
      input: "output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "output/add_2"
      op: "Add"
      input: "output/add_1"
      input: "output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "output/strided_slice_1"
      op: "StridedSlice"
      input: "model/vf/add"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/input/Ob"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 30
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Shape"
      op: "Shape"
      input: "oldpi/input/Ob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/strided_slice"
      op: "StridedSlice"
      input: "oldpi/model/flatten/Shape"
      input: "oldpi/model/flatten/strided_slice/stack"
      input: "oldpi/model/flatten/strided_slice/stack_1"
      input: "oldpi/model/flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape/shape"
      op: "Pack"
      input: "oldpi/model/flatten/strided_slice"
      input: "oldpi/model/flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/model/flatten/Reshape"
      op: "Reshape"
      input: "oldpi/input/Ob"
      input: "oldpi/model/flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
            tensor_content: "\202\020\000\274[\305\331\275\246\211I>\007\t3>\352\305q\276\376$\360\275\005c!=\347\251\216>\255.m>=\003\356\274\014\227\223\275\367\020\214\275L\016\313=\\\275\250<\274I\253\275\323v\'\276\265h\036\276\342\200\014\275\004\214\242:\200\322[\275\367\242\226\275r\322P\2741\275\204\276\241&s=\3747\351\275W\351\034\276\240\270\026>_n\221\274\204`\333=6}\016>\211I\265\275\247*\346\2752\256\230<\210\032\242=\330oJ\274Z\356\013\276\263i-\276\270\200i;Z\225-\276\204Q4>RT\241\274\360\233d=\021N\321=\251\237\036>[y\212=(\261\217=Z\215\003\276\317\360&>\324\251\240\274\215\374\244\275\366\313\364=\346\372\316\274rK\203<9\353\205;\255h\202\275U/\221\275\337\316\366\275\010\033\">\313\020\230=F\021\201=\236&\265=\227\\\353\274w\230\'>\266\260\205\275\356:\272\275&\217\305\272i\276\200\275\244I\241\276\317\324\235\276\243\3630\276\305M\032>\304\300\017>\003\005\206>\211M\010\276\206\226u>\230\305\307\274\311\236\316<\377#\361\275MO\325\275\211A\331\2748P\221\275$\241\310=Z/\257=\353p\033=\303\036\205\275\330\206o\276\200\0032\273\204\027O\276\225\035\034=\025D\344\275:\'\235>+[\005;\r\211\023\276\246t\022>\2701\014>\362\210\365\275\204\244\001>~\330\345\273\004lu\276\265`\226=y\374\311=\024\212N=c3\311;\262\017\010\276\205uW=D\305a=V\364\037\276\205\341\207>\252\025^=\324;\014\276\013\0036=\304\351\225\275Sk\021<\232\217\376=\366\367\215=\267\277\317<\3271\213=\266V\270\274\026 (>\035\247\031>=~\373<\323\2426\275\375\225M\276\336\236\222=\335\221*<\020\275\241\275\225\245\005<w\370u<<\014\261\274\277\260\n\276\030#\323\274\345\312U\275\210\215`>}}\240\275)\251\036\276\271\316\026\276\221\300/\275G\223`>d~\220>*a\031<(=)\276\362e!\275M\\\224<\276\246\226=I\320\330\275\031\025\355\274\300\250-=\034n\031>\030\300\'>\354>N=@\215\'>c\372\014>\354\332\027>[oO>+\322\007>J\234\370=\221\270n>\001<\204\275]\275w=7.d\276\355:C>W\026M\276\"\353\031\276\320P\374\275\240\207\211\275||\341=\013\214\006\276\327w\014>\r,4>\025\254u=&)I\276,V\031>l\332\275<i@\305\274\373w\377\275\016\272=<\365\235:\276\311c\n\276\264\236\222\2756f$\276\232\252\334;\360\2748\275\313m-=\023s\271\275kQ\003\276sN\261\273\205\337&\275\366\203\337\275\216\206;\273M\207\352;.;\002=Q\315\021\276\363U\004>\3506\311\274\244\301\021\276\304t\240\275\353\353o>DT\347\275\177\2329\276^#\315=\213\320=>\341\023\311<\212{\331;\363\263\364\274\017g\227>\232X\032\274\211\304\265<\217\275\313\273\213\243C\276\002\317\210=\364\255u\274\025s\254\2758~T;\307\253\034\275\244\337\034\275G\200\270\274\364\326\253=|K%>\034\350\203>@y\005=\273jU\276\250\033G\275k\321\372\274A\372\261\275\374\370i\276\337\234\254\275\022qM=\334\246\252=\270\335s\275\207\250B<\303l\374\275\241\231\216\276Q\014\010\2749#\267<T\344\263\275\032\306\307<\204\250o\271n\030\363\274\315D\351<\236\347\233=d1Q=\033o)=\350\237d\276\310!\215\275^\376\007\276\315\3319\276\205\361;\275\232T\307=\375>\204=t\310\242\274\032b\310>\032\340\211=p\220\020>fu0\274GI7<\371\252\002\272e\317\211>^\360\355<\327\326\340\275\322R\237\275\262\227\275=\007\200H>\366\203\356\275\357 #>+\310\027\276\224\000T\276,\314\365\275\375\360\201\275-\302:\275\273\030\n\276\315\337\367\275}\257\337\273\006\374\225;\177\300\220\275\312\332F=\320\335\216<\367\n\337\275\177\\M\276C\367\010\276\312\331\010=G\224\242\274\004\210\377=58\201=\362\255\027=\302\250\267=g\202\374=\'_\201<\211\335\026>\'_=>D\024\213=\3518=\276G\2035>\3241\000>\257Rn\275\311;\035<\016\261\r\275X\320\305=-\213\302=\272\223Q\276\203\300\222\274\360\356.=\220E\310=\024\\+\276\000\317!\276\276\321\024<\356\007\316=\206nD>u\257\250=\032\021L\273\016{\022=\\\375\370=9g\274<P{n\276:gV=\371\244\001=Ve;\275*\220<=\252\005G\273\033E\347\275\317t\333=Q\211\246\275\215+T>\244\360\210=l\364\305=\202\3328\276\234\374\310=<<\330={\342%\276\rvO=l\241\022\276\224\330v>\221\004\251=\243\2415\276\266FL=\210\266\265=\000u\025>\204I8\276c\225\021>\"\001C=\230Q\t<\302P\370<\256\243a\276\006,A\275\205\372/>\321\352\210=\000\304o>(C\363\274\3268Z>\237\004\236=3\315\001\276Gq\326\273\204\344\020>RVY>\035\356\001\275K\327\313=u\273\220>B\350v\276=\243\331=\0137?=\000\002\251\275\010\256{>7\210\330\274P\005u\275\272\313!=\267\211\235\275p\001O>\247\207+>o4\\>\017,\371<\316@\'>b\243,>\305j\202\275\250\200\220<Vg:\276j}\215\272\204\335\203\2758\001\014=\262\001\357\273\320J9>k\320\251=\274?\333=\371\342`\275\232\200\021>~\313\361;\360\235\314\275\274Z\311=I$\347\275\270Q\274=\374f\361<E\344\272\275\240\020\245=l\270\237;\327pX\273\023k<\275WN\000=(\273\016\276\264,\307<B\006\r\276\206\327\325<\322\216\315=\003/H>wh\004\276\352F\227=\272 X\275_\266\036>\210\227r\276S\254\022> \273\002\276\024\241L>\005\375\345\275\310Q,>\017!\216=\003\360h=\234\236\207\275/;\007\276\"\310e\274\332\251\224\276\325\022P\275\310\226G\276\313e\301=9\273`<V\033\214\275e\333\007<\301\007\246=f\031\220=Nh\315\274O\276\243=\257\266/\276\"fn>\3112\370=#\257\022=\350N\242=|K\023\276\244\005\232\2768u\222<mT\t\275\316\262S>\007\302\316\274&\034\332=.\320\247<\217\007;\276T\363\341\275\351\020\224=^\271\212=\256\207\251\2742\305=>P\365\016\274\304\027R=\360\315\204>gA5>\251\324\344=OS8>FId\275\305\024\030>b\265<\275\333\355\'>\267\025\340=\360t\256\273a\n\261\275L\352/>Wzo\275\323\241&\275x\304\021=\246\260\212\2765:\023\276;F\207\274\377V\026\274u\326\301=\026N\245=u\326%\276\312\203T\275CR\331\2750Av\275!l7>\032\245\267\275\242*4=\340\361\217=\357\255\327=\366o\364\274\302j\215\275\370\234[>\312\313\342\275Ur\333\275\332\274\260\275\347&\234>\022I\020>lj\212=Z\233\211>q#S<}\252\217\275\360\217\204\274\215\371\261=\246\362p\275PV\270\274\033[\302=\363\276\207\276\r\215\223\275\362\262 \275R\241\2039\250\223\310\275\320\263\345\275C\345r=\333\221\377=n\037\023>\325}\226\274P=Z>\206\014+>\345\240E>\203_\217;\361b\204=\337^\262\275`0g\276@\316\021=\036\313^\275\336\364\324\276\222\007\272=4\324\260\275o\213#>\257\336\214=\367\327\\:\335\263b=C\032\377=\003\372\336<{\201\010>\343&\217\276S\220\254\275\300\211J=\2730\246<\245\222\210=\030\227\027\276:\266\232\275\251\331\">H\207\314\275\252\225V>\032i\245;\265S\376;\033f\244=\277?\211<\356V\317=\215\030\211>r\t\250=v<\370=\232\301\003>.\373\232\275Lp\275\275b\351\224=v\360\262\275\205W\020>\003T\035\275Mt\364=\303V\016>&\231\303\273\231\332\023\275\223\261\250\274n\240N=1B{=\314\005\203>\033\255\245\274\217\237\237\275R4\003>\021\363\034>\320\020\252\275s\266\311\275\221\024\256\273\271\273\205=\346\3738\275\252\333\275\275\ri\336<\226\256\203>\243C->m\217\224\275|\\\210=[\324\204=\315\363X>\356\373\266>J\357\361=\236\346\030\276\351\235\274=_\004\263=\324e\215\275\232O\373\274_h\351\274\204~\025=C\267\000=\t\247i\276}\365\\=\224\232\'>\347ng>\361\247\306=)\2573\2754T\300\275x\251\252={o\206\276m249\006\230\264=\235\317\303=\275\256\027\276~Y{;E\221><\262\235\337\275Au\370=\302:\336=:\200A\276\322\'@\276\256\202\257\274\263y\373\275:k\217\274\367\004\022>j\272\237=^\0302>\320\263\334:I*\331\275\231d#>\270\317\005\276\332\322v;\016y\241\275\230i\256=\235wu=\340\246\233\276\037[\025\276\025X\317\275\220)\351\275\266\222,<\312z\302\274%\304\235\274 f\014\276\234\217\257=X\247|\274K\014@=\217\033\"<\356\313X=\262\007\240\275F\200\253=\263\310\356\275k\314\t=i\224\222\276\2117$=b\206^=\254q7>`U\217<\347\207\t\274k\221\317=\363W\355\275j\243`>\264\2676>\317\010\341=\360\272\036>\227y\356\275\252\2169\274\2212\270\275%\250\006>\230\336\204>\211b\226=U\213\332\275=H\022\276L\024>=\001\322\027>\274l\216\276<\023\313=YK\022>\337\225\225\275\275Y\005>\323\214\365\274\334\330\225\275\313\020\031={\367\361\275\314\233\366\274)\346&\276\2701\000>\263h\277\275\357\355\222>\316v\304\275\274\262\246=\305\233\217>\232\363\271\275\257XJ\274\374\3126\276c\354\234=\017\343=<\327\225\251=\311\036w\275N\207X\274\'p\367=\316+\n>\255\324\254\275\244-\376\275\263\344`<\360\007\256\275\315\305\232\275+\344\013<s1\020=\030js\273\226D\314\275\003\003\235=#}K\276\021\270\322<\td\261\275\016\336\334\275X\275\n\275.\246\377:7\'\321<$\t\365\275\251=\202>$;\234\275D.#>N_.\275\000\257\332\275[yA>u\345\237=\321&L\276\266\n\307=\334l\000=\371\217Q<)oQ\275\302\351\363=\342\271\265=o\240\203\2762C\207\274~\267\001>c!\010>\242\235\030=\250\025\302\274;jd>\317\234\305=\332\203F\275\332\320\031\276\222\021\247=\247S\375=\202\247\237\276{I\320=\3256P>\006\344\031>\025$\024\275\334\333\212\276\216\352\n>Z\365\226<\301\013\365\274\305E\222\275Pi\204\275_h0\276\275\207\257\274\204\373\344<x C\274I\247(>\334\\\311\274\374\032\205\275Z\003l>\363\311\344=\214\231\241<\226\323\034\276\016o0\275\032\243;>\027@$\274\2107\311=_\345\003\275X(E\276\343\254\312\272\376\326>>\006\304\223\274\207\374\314\275\374\243b\275\013pc; (\260\274IV\205\275,\203\270=\372\004\372<8\035\224\276\310\264x\275Q\235\026>\343\312\033\275\2278\205\276\335\251\235\274\360\266q\275\215Q\321\275\342\354\260=\020-\037>\300\310\035>\273\370\272=\304\335\320\272\224\344)>$\361\235\275#\257\253=Y\277\332\273\034\214L=\374\302->\264c\243;\016K\222\275(\277\345<\327\274\371\275]\033\234\275\365\270]=\227k\324\275\002\035><\302q\177>\3359K\276\327\363\017\276Y\010\273\273\030B\356\274\177,(;\252\327\333=&#\003\276\202g\317<TD\001>\323\265\330<\363\324@>\227\311\203=L\325\013\276\332\347\343<b\301\004\274[\316\005>\250\266\262=0\240\250=\270\272\004\276\256b\264=\215[\002\276aUo;\347\352;\275\034N\365\275\334\020L>}\330\237\275\247\336D\276\320\"f\275\033@\301=vi\r\276\202\273\033\276\030m-\276\034\316\013\276 \017\240>$\257X=\203\227\304=\214@\205\276e\032\227\274\262ZH=|\027I\275\334\r\346<Dt\236\274^\035V\276\247N\270\275a\235$\276\027i\347\275y\356a\275\025\037\234\275\260,\306\275\'2c=)*\030>U\353\275\2755\232`=]\237+>\320\344\214\274\200\353\244=\317\003\301\275\263\257\013>\312\312\260=Z\005\343=\224\020\014><\022\364\275\263N\003\274\362\307-=\322\0354;\312\2206\275\335.\331=;\272\224\274 ND>$j\337\275\345=v< \272\357=5\325\215=uwr\276\300Y\031\275\245\257\016=l\3009\276*c\346\272U\356\246>\324\202\274>^h\036>V\306\243\274\227\257y>\304\3551\276\211;-\276\221S?\276j\375\023\274\372\315V>w*o=\223\036\301=y\334-=\231\335\202\274\334\244\241\275&\345\374=n\347\">\316\337\361\275\236($>\367\240\000\2759E\013>\016\241<=$\234\327\275\274 }\275\254\373$>\350\3300\276[\275M\275[\266\251=\020\305\002==\314\200\276\257\241\242<~3\025>\323#\265\275\276\247\237\276\214\033\242>=Z\215=_\263\364=\316\362\211\275}&P>\005\223I=\220\300\202\276+o\300=\206U\036\276etd\276\327\243\017=\210\265T>\322\371\323;\273\263\370=\223\014\214\274\033/6=%6\266>\235g\">ep\256=\254\371\030\276V\340\202>\331\241\\=o\013\341\275\270\230\231\275,\245\243\274y>\273\275\372\277\n=\rV\016;\007\371\235\274\245\230\244\275<\035u=\307q\204\275\266\203\205\274\375\350!>\317\271\214\275\365\230\035=\363\0320=\t\336$=\274\201\034=\323?`>O\004\235\275R\032 >\356F\211=}`l>\373\261R\275\361\230\003>J8\240<Q\246\227=\230\311D=\254\261\305=}\n2\276\000\227\014=\334g\274\275\322\222\351\274\216&\316\275\336\352\020\276\305;\250\275B\266I>\332d\342\275[\240\276\275\223\210f\275\035\265~\274\027_%=\336.m\276\340\035\216\275S\350\016>\342y\366\275\321\222(\275\353\327V\274\342\242&\276e\006\267=\004T\221\274Y\247\350\275\r\231B\275;\017R\276D\201\005;*e\311\275\264\"\310<~)T\275\222\226\376<\215\231c\274\350\320\303<\265\300\320<eM%\275U\273\224<N\307\315\274\364 \224>\216\265\031>\247\234m>s \256<\007\347N<\2205$\276RI\020\276[V\032\275\343>\311\275\016\020\347\275\010a\206=w\243&\276\305\301\212=\246,-\276\365\345N=\324\2377\276\254\204\375\275\245\035\326=k=\n>z\346\251\275q\007\262\275\"\242&\276%\241E\276\255e*>K2r=\261\037\206=\0204\r\274\003*\241\275\000|b=;,|\274\232\376\237\275\315\327\005\276\371\221\035>\234\017_>\310\363D>?\314\206\276tp\026\275%2\010>\223\252\235=\326\373\323\274\370\274\340\274$\302\310;\037;\275\274\233\3321<;\267\346\275p)J\276_\026L>p\027%>\244P\217\274|\211\214=j\244I<t\311\036\2767\234\001\276\266\345$\274\230k?=\337\277\214=\256{\025=rT\005\276,6j\275\314\334\373\275XF]>p\002X\276\027S\244=@\332\201\275\266\340\243=\265]\">\3657\217<R R\274iJ\033>\356\037\335\275J)\207<\212Z\340=\355\371>\275\016\237N=\322\265\360\273\337\251j=\276\371P=.\2021<\260\214w=\374\233D>\331YP\275h?\213\275r\005\311<\247f\202=\304sm\274\203zT\275\316\216\202>w\223\032=\324\307\313<,\351\221>^s!=$\326n=\345\014!\276,\312\301\275\034\200\003<x\3567\275\203\214\346\276\354\367\352=c\311&>\207\313\343\275\244\"\220>\237\032\001\276>\265\375\275t%\237\2764\215\030>g\371H=\203S\275=V\375Y=\3311P<\200\366-\275So\216\273\001\271\326\275^\241\002=(Z\231\275\020\000\202>\245o\303\274y\251\362=\347Il\274\rh!>X\312\374\275\022\273@\275\266\250\232=\212.\254\273f?\004\276\203\223\010\2762\006P=\362\247\276\275W\232M\276\301\326\322=\332>W\276n\261%>{e\212=\340\253\274=\350\261\177\275z\251\360\275\030\2212>\027=\305=Tb\262:\324\307\340\275\201~t\275\212#7=\376f.\276\332\346\210\276W\004o\273}r\227\275G\177\355<\341\306O=\253\335\240<\t\234\312;\021\t\226=\317)\212=\037\324j\276\332\363\320<\276\007\002>\342qL=78\030>n\317\236=\323\205Q<\\\363-\276\307\272\217=\177\255Z\276\307\214p\275%H\353\275\227\370\352;\013R\222\2752\371\211\275t\3229;\320\215\014;\305\340%>\350\370\006=\354\000\232=d\367\307=\277\336.>\223\2011\275S\277\247<\252v\020\273\014i\010=j\364\334\275+k\n\276\265\345\310\275U\010\003\2767\312\000>\007u\201\275\356F\244\276\024\004\377\274\212<B=`\361W\275\203\237\300\275\024\302,=\004\200\212\275\242Y\247=\267\202S\275\344\002z\273\241`\014=\277\014\264\275\361\010\020\2761\236\350=\n\027t\275\223\3026>\374;\247\275\034\034\224>\237\307\336\275j\033\254\275_\310\205\276r:\005\276i\351t>3\251\001\275\t\242r>\'\354\276;Y\3379\276\312\266T=\226V\247=\230\302\202>\251\274\022>f\300k>\277\024\270\273\332B\263\275\337\014\201\274\031\324\034>\360\\8\274y\337\n\275<\257\026\276\n\354\037>*\216\341<jf\321\275\231\261\340=\365%y=f=\203\275\261\226\006>\005\240\345=\222D:=qi&\275\373\031o>\371\251\236\274\233\t\261\275\361\231}<\260\257)\2769\027h\273L\245\272=A\362\026=\222R\030\275<\231\367=\320\030\204=\270\346\002<\215\250{\276\330\331\247\2750\343\342=\3471[\275\224,\325<&*\375\275\005\207\274\275-\262\360=J\330/\275b|\232<\030Y@>\034\315N>\241\376\255\276\355R(>\274\r*>\220s\334=S\375\262=x\220/>\243\034D\276\336\036\250\275S7\215;M\016\266:j\317C>\246g\022\275\223)\032\276\250<\263=.\206t\275+t\034>KOM\275\226S\261\275&\337\371\2746>\303>\033\275\247\275\021q\262\275\340r\236=\372\241\334=\235\2170=E\355\027\276\203\205\364<\316\335 \276\227D\217\275\331_\317\275Q\234l\275^\007\027\275iiT\275\020)=>r\022\200\275\2055\367=\322;\326\275\267eE\276\216\223\003=\327\222A>\357U\323<\343~\032>L#\227=ly\007\276g\266\214\275\322\205\212=\255\244>=\023|\253\275Po\006>\177\244\037<q\250\263<$Qt=`\363#\273c\303\212=\276\024\201\276\240\226@>\361\237\205=& \244\275\367(\301\275\224\330\265=p\356\223\275g\307\321\274{`\240>J$P\273Z)\330\275\314\325\024\2763b\034=\360\272\026=\025/\232\274!\354+\276\376r\235\276\345\263(\276\266\315\237\276\264\262\026>w\237\374=L\314U=\362]\252=P\244=\275\223\253\006\276f\352\010>_\370v=$\351\354\275\276w\354\275\347\r\001=\231Z\266=\347\330\264=\006<\202\275O\206\305\275=\303`\275FoK>?\252!\274R\361\310=\342\313\244=\262\n\\\275|\370\244=}da\275/\r\301\274\272)*>q3X\275[H\231=\007\274\276=\010\236\242=e\315\370=V\231\025=\340\257N>y\222\241=@\n\224=\314\217\036\276\237p\207=b@\023>Z\327\206\275\201\365+=\016\375\210=O\342L\272T\353_\275\353\321\007\276\036\261\007>\252\2324>&\342\223=\014\023\207=\025\016)=\256B\215\274f\312s>\233\277\257=8\361y>\226G_\275k\322\263;!\207\225<\262P\020=\010\241=>\313\320\216>\001>s=\213~\224=\036e\005>T\332\007\275\272G+=\311\230.>\241\021S\276ib\272=\242\320\201\276T\216\022\276\343~\247>\261\371\t\274N\366\022=z@\026=\344\002\221=x\025%\275\'s\362\275\305\253\356<\025\300\226>H\365?\275\316\301Z=\206\322\023>B\276\036\274}\305k>\331A\241=\376G8\276`\313\013=\300\n\274\275\353\302)=\317\251\232\275\307\247\277=s~5=T\264N\275\334\230\013>\316\277\326\275\333\373\001\276J\203\366=K\205\t\275i)\213\275\355v\020>S\014\226=3\'\000\276\211J4\276\221\225\211\274\325=h\275\266\271Z\276[H\022=d\253\232=N\014\316\274\272\252C=\234\336O\275\236\230\347=\313\262\373\275&6\246<\351\013\000\276`\305\222\276\265G^\275\367\033h\275\255\331?>\277\020\201\275\010\020s\276\226\0234\276\323\315\024\274\261\272%\276\276\373\035>\030\370\363=\347\363\027>\370\307d\275\245\355\351\275\241(Z<\267o\227\2737\235j\275\235\325:\275y\215\325\271\310y\276\274o7\335\275\372@\000>\177\351\232\275\246\322\023>\210\211\256\275\316\005_=zr\210\276\345\344\343=\243\321\211\276\301\256\207>\353\347\013\276\347\275\275=x\257B\275h\311P>T\030\232\276\231\226\256\275\257\233\025\276&\302\013>a*\237\275\332N\235\275\241N\302\274\366\320\360=#,\227<\253\013\246=\022\307\253\275\313g0>*NW=\235\220\365=\300J\017>@L;\275F\346\320\274,[\341\274\351\035\312<\363\371\211>\340\027V\276\230\2760\276\246\211\202<\271\260\350\275\264\270\341\275\352\363\002>\372(\317=\013 \300\2753\362\016>\267\3658<\361\035\204\273b\215\025>SW\245\275x*\200\275s\3040<lq\320=\255\250!\276\267\215\353=c\264\337\275(p\217\273\256\330>>\3018\210=\026\007I\275\020Z^=pX\376=\254s9\275o2\317\274fZ3\276H\344\254\275_k\275\275\334\021\230\274~X\251\2755\177\252>\266\230\316=\223m\326<sI\177=p\214\311\274\016\277\302;D\271\026>\351\023\254=#\227L\276\331?\024>\275W|\276\001\002k>\324\3529>#/x\275+\244t=\025\237\344;\216\242\351=\3025O;\'\367\202<\020\000\275=\264\277\241=qw\217=\272wx>\t\t\221:\347F\253\272\363\371.\276\361\364\\\275^\360\217\276b\213\337=\021\034\215>\266\374\336=w\021\256\275s\345\020=\344\335\'\276hF%=+\333Q<\004\021\263=\004\270\005\276\376_\'\276A\271G\275#C\336\275\357\330\210>\341\204\027\274T\377\362<\224![\276^}\231=l\200I\275s4\021\276\214\310\n\275\270B\301=\177\t\006\276\267@Y=+\3031\275b\310\216>\315\365/=\0002P\276\372\337\207=\006@r\275\213\223M=\301\0236\275\\\205\330\274O\374\307;h\2464=\200k\307=3\311\'\2769y\033>\270\246\360=\334\211B\276u`\007\276\010\342\321\275v\234\r\276\217\017!\276\037\024\024=\014\020u>\323\034\313<\377Om\275]\206\251\275\240\315\314=\305\273\227=T;l=*|=>\t\313\247\273\370d\201\275\222\223\241>\014nJ>\033\2234>\264\366\023>@(\234\276u\263->w\0176>-T\215=MK\206\274\216\310\344\275\302\024\272<\337G\304<\215\353p=e1!\274\315\336^;\3055\003\274rM\037\276\3163\244=\300\305\200;\032/\336\275\223\207\364\275\231b*>\312:\001\276aK\007>\017B\261\275\224N\244\275\017\340\337=>\007\310=\020I\335\275B\017\275\275\331\026\005\275\363\263\205>\177u\301\274\337\365\252=2\330k\276\212\305\014\274l\334\241=,\313\363=\216\371u<BX\036\276\251\254\023>\206\244\177\275\210\250\206\276\224T\020\275\177\037\334\274Ce\207\275&i_\276 \334\361=\014\3272\273\007?\333\274\202\227\024\276\213W\244\2757\312\372<a5\260=m\376\001\276\2416\273=\r\305\010<\242+\037<\367\370\257\275\306\330)\276\311G\352\274\211v4\276\275\377V\275qT\223<?5\241<v\263\234\274A\363\"\275\2713\223;\267\177\224\275\345\305\201\276\201\221p;\225\033\'>[\224\007>^F8\275\356\243\200=4e5\276\214#Z=\347\t\210==\324/\274\313f\213=\267\211\366<qU!\276\245\215\302=\271(\024=!\241\302<\352%\030>\201\244\032\276<\001\\=.\215.>Ul\037\276%\352\022\276\350[\223\275\3543a\275\215\340L\276\331\t\255\275H]\252=-\010\262\275\331\227\\=\215\003\220\274\033\376\251\2757\310:= \313x>\255\347\017\275\247z\311\275?\301\360=\315\366\235=\315-\356=&9\251>&\023+>\003^\236\274;\202U>?4\020=V\331\007\275\354\027\371=\301At\276]\367\204>-3;\273e\362>=\036\032\242\275\255\330\223\275t\273:>\210\035\325<\217\311\'>\233\205H\275\340b\221\275\322\233\206\275\215\337\264<g\233\n>\243\234\233=\265\257\027\276\207\213\361\275\276\272/>\277\367\344\275($\301\275\316\026\025>\225e\026>\246\256!\276\273\260\034>\013A\334=\337\n1\275\031\244\232>C)\266=K\220B\274\332\364B\2730\243\032>\3016\007\276]\216\256=\034`\334=l\335\374\275F>)>d\n\025=\360U\233=\331\334\263=\'\350\211<\347\310\302\275\006\014\260=\266\006\035\275{PL=wU-\276\374}\214\275\215\255\212<\347c\216\2734I\241\274w\226?>\020\270\333<[\207$\275\255\376\220<.\264:=\323\036\377\273} 2\276\347!\232\274\t0\205=\223A\222>6\357\251\275\241\355\360<j\304^>M\350\351\275U\205g\276\237\253\257\275\227\343\300\275M\256\370=&F\276=h<O\276\0256\002\276\353)\261>\n\203\030\276\364\327\262\275\347\216C\276\220P|==RX\274\273\231\023=\330r\031>\244\025\265\275=\261\201<:\236D=\245\266\221>,g\'>\266,\235\274\206.\336;?\\\243\275\345V\256>\320\270\021\275\335\304\244=\217\203S=\016\212\353\275\254\351\241\274L\202K=Gd\203=(\0260>\252\250\216>\336\200K\274I\001\361=\253\021\210\2751\3520\276\035\272\227;@(\355\274\016\217\207<5\013\261=3\345\242<2sB>+6\326\274\337\007\035\276Mq{=\020:c\275\255\363\201\276\024\223M\275\227\330\031>N\226\256=\236\242\361\275\362\223\313\275l\240@>J\"\332=\022\223\021\276\355*\244=\250\014>\275\376\204!=\201\237C\276O\273<\275O\3700\2757\006\345\275\373\205=>s\257M=\354\3521=;XZ=:)\371=\375=\353\275>\006i>P\377\013>s\n\273\274\'\021\227\276\306q\223>\264\0274=U\344\007\2769\263\340\274\340\370 \276\244\267\351=\023m&\275\304j\231\275\355\177\203=\231\'%\276\215\305\010\276H\270g<\261u\007=J/\253\275\213\235\271\275\251=\227=3?\200=\230M\377<xe6\275\221h\227\274\314{\257>g\022g\273\357.;>u\3713>\200t\016\276\234\002\254\275\351\376b=\347\340+\275t\223\004>\024\217P\275\371\332\211\275\251_\233<_p\200\275P\023%=zh1\275\300\220.>\330\247\203\275\367\305\227<\030\0167\275\235\356\302=\356\236\252\275;R\250=,R\215\276=jZ>\253\354\262;\324kg>Q\224q=\274\324\330\275\310F\024>>G\241=\237\341\346=\362\205+>\335\3653\276\023g\201\276r\203B=2\022\261\275\300\006r\275\371\200\016\274\327\377q=C\303S<\230G5\276\033\361V\276\027\013\343=\304\244\357\274] \220=w\326@\274\255;\233=,0\306\275\226K6\275=\261f\275\345\2464\276\366\330n\276\304\017\320\275\303|\357\275$n\222\275\377\302\203<\"\306\365\275t%\"=7\334\226\275\027\346\373\275>\264^=8k\212\276\020q\256=\r\251\274<\262\334H\275\026<\333=\210\336\005\275\227}\007\276\355-t\275\\3\332=\365 \361\275\202\242\327\275\322\031W\275\363B\223\274\306\351\370\275\332D\223\273\003\206\235>\016\263\t=Nr\351\275\265\221\023\276\231\366\243=t\200\366\274M\342\200\275\374`\257=u\1772\273Z\271x\275 \313m=U\303\024\276UN\\>\2445>\276%R`\274\322<O>6\323\025\276\327\037+=\341\342\361=\213\022i>\363\025C\275\2418\235\275Z\264\003<\236\347W\275\236\273F<\226\036\006>\r\3470=]\263\337\274g{>\276K\017m\275W\306\217\275\317\235P\276\213/X>\316\263\274>\242~l\274(\220E\274z~\323\275\262*\035\276\3415x=\307<\001\275\220\000\002\275k\217\253=\002v\211=Q\032\200=L\363\334\275\321\346\206\2752\235l\276\355\254\013\276\227X\317\275Vo\230=\227\1771=\226\244\032\2744\3247>o\347Q\276\035\235\004\275zK8\275J=\215\274\313\240\261\274\302x\373\275#XY\276n\234\017\276\362\216\010\275h\002)\274\356|\255=\022\276>>\256\331\270\275\036\017\202\273\rV\027>\334\010\000\276}\240\347=\340\362\020>>q\337\276v0n\275h\346\000\276~\213;>lB\244\273\310\341\343;\014\005\211\275\031\263k\276\332\213\307=$\031h\276\277\246L\274\266\207\214=\002\017\003>o\nt\276\305\234\330\275.\331\320\2747\350q\274O\310\245\274\340\3238\274A\377\200=z\324\000:\010\265\240=\005?O>\352\227\232\273\306\017T=\302\332\n\276\3051\317\275E\346&=\001x\241=s\323\226\275\373\363u=\313;\030>\223#l\275\255\220\357=\202\345\200\2723B\315;\371\006B\275Q\365B>$\251/\276\364)\222\274\347\377}<\221+\302\274\022Z3>\0378\216\276\277h2=B:c=\323r\375\275m#V\275\342x\342\274\303\252[\275>Y\345\275[,h<\256\t^\275wY6>^\205\014>K\302f=\016E\323=(\366\240=\367\300\000\274\311\203\343\275\222s\244<\340\250\206;i\360b\276\306\255\202=\311\217Q<\3161\221<\206i2\275 \275\010\275\030v\235=Z\210\031\275\"p5\276\0365\365=x|\"<\253\226\212>\235\371\252\275\337U\303\274\024\265\352\275\360\016\212<k\247c\274\004\224\203\275\007\220\'>\375\366;\276~o\t\276\005\313\210>\326\314\224\276+\324\307=\004\202\250=6{\255>\014ha\275\004L{\275P\253\000>\205\245\013\275\356\247\326\274)\317*>\\\302\363\275\304\252\342<\246n\255=$!\202\276\324\267\376\275>7:>\206\234\005\276\306\202\221>\356\340i\275W\344!\275\377\211r\276\323\370\305\275\277\326j\276\311\212\315\274\227\257\231>\320\212\233=\242\203M\276\364\336\331<4\r;>oS\334=\227hS=\254\201\000\275\266\320\313=\033L\"\275\333\333\222\276;\236(\275\005\244f=\267\027\326<\265.\017=:\275\204=n\335\203\274\021\272\200\276\002\357\243\275\225\264\267\275\035}B\276\236\334\255=@\270\225\2750$\314=\225`E\275\270\032\374\275\017\016\262=\027\207\275\275\']\022>\257\242\255\275N6\306\275\024\002M>\222\252\014;\334p =}\266\020\276\312&\001\276\265\361\261\275\337\360\255=O\203\365\274\251\246\236\274\370{\323=\334\004\310\275\337\245\251\275\307\017F\275v5\215<\246*\341\274<d\303=\363\3021\276\344I\253<y\354\274\273i\024\010=X!R\275\245\262\026\276\021+\323\275n\177&\276\r\023\032=\t\250i=\020\341\215\274\246F\216=\032\000\217>Owy\276\022\006n=~\326\006>\3025f<k_\221\275\202\206\n>\273\275\006\276\261\371u\275Yl\010=\371J\246\276\002\317\343\274\262\345\035=4\243b={\311\027\275\214cT\275\036\'\000\276\360&\334\275\305\034;=\216D,>H\222\222<\327\261\350=\350t\367\274`\303O\273Wu[>\250Z\270\275\363.\274\275\237\220\'>\242\027\200\274\314\370\257>\026\017\326\275\014\tH=\250\r\">\013P\220=^\3601\275.\252\202=]|6\276\317;\212\275\375w\'\274B\370\202>&Z\255=j\t\371\275\345\234\363\275\256Q\262<\323H\351\275@\345+>[y\245=\254\225\034\274\363\317\224=6,\270\276b\314\233<p\016\024>l:\000>\371\345a>\r\373%>q\n\014\276\267V\274\275]\253\023\276\227\216\221\275x\373@\275\260\335\233\275\207\3415>C\262\211=W+ <\2238\277\274\321\313\303=(@\303\275\251R\250;C~\200>,\326\227<\025F\262=\263\325g\274\364r\333=-NZ<\316\331\246=\300\351\247=\027\224\273=\301m\237\2756\321\220\276\242H><\333{n\276\305\264\232\275\356\272\225\275O(:\276&\020X>\334\370a=g\211\231\275\303\\\307=quN>\201\035k>\206\362a>\356\350\320;\2058A\274\007M\017\276\306g\200\275\t{\314=\007\272\370=V|9\274\345-B= YE>F\014\231\275s\232\001\276\0359\306\275G\031\252\274\304Q\036\276(Z\320=F\363\351=l\344h\275Q\032\250=\303l\263\272\206\262\330=\274\"\235=\000\321\001\276&\314\277\274\275o\251=\242\371\013\276\005G+\275\026\372\341\275^\202\233\274(r\261=vH3\276i\374\271\275$\231\260\275\010\320\250=1\354\">\r\002l=\330N\244=TB\323<}\335\004\276\357\314\246\274\331gd>b\2508=\353\024\t>\230\343\203\275\0140\245\275\344\201\003<Z\245V>\013\311\205<\266\345r=\305\352\325;o\017\216<W\247w\275\016\353\027\276\t\254v\276w\313F=Q\360\022>Y\020\021\276\315=7\275\274G\n>t3\343\274\302@\207=\313w\'\275\324\267[>\006\322\241\274\177\362\236>\315\307\335=Zy\275=7\305\\=\277\021j\275<4\213=\362\334\245<\233a\225=\264\272\307\2739\201\244={D+\273\3426\327\275\277\004\322=\332Q\255<\351\027,=#l\206\275\323\336\226=\237\242\375=\371w\202=\030\264\213\275+9\206\275n\321\030>\2335\344=\2218z=\313\341A>U\006-\276\334\254\234\275\035\254\352=\367\331\030=\220v@>=\365\352;M\276\023\27562q\275\370&\322\275\202}\301=\224\266;=\')\326\275\221\263\206\275\207B\224=\343\346\000\276O\364\247\275\257\314A=\214\017\353<\342&/=c(4\274\275Z\273\275\303\310\204\276^\226\326=7\221\375\274\231\031\303\275\016\376\321\275\214ZD\276\355\234\214;\246N\244>U<@\27657\334\274\276\204\325\275\311\371\215\276\275\3026>\334S\340\2749d.>\232\r\247\275\201\256*=a\232\020\276Z\242\013>\304#\223\275\227\375\254<\235\235\327\2743\233a\276v\203/\276\233i\374\275i\231\361\275D\327^\2766n\001>\005\357h>g\257\027\276_!\035>\031\202\021\274\373\006|>)\021&\276\234\234\371=:!q\275\0178\204\276]\034\222>\302\250\277\275\375\024\250\275\301\006\274\274\224J\253\275\206h\037=\2063\'>\241\271k\276\231\245\016=Z]e\275\304b\232\274\016\302\230<\357\356\250=\312\202L>+\tc\276g9\331=\325\213\267<\0104a\275\333\365\336\275x\2062\276\357\267\335\275\251\265\r>\276\372\035\274\362\326\334=\204\350\013\2767\032U\276\304\354h:X\211\006>u\217\023<\323N\001\2758\023k\274\377\032/=\353\243\017>\2633\335<^\327\302=\233\001\005\276\304\023\005>\241\275/>\007\177W=\350N&\276\342\276b\276ECL\275\250:\212\276\024\027\007\276\230\014\364\275-\'\"\276\316\247\254\274\020\031\220=\230\261o\275\277A\231>\013+\317\275\231\337\003=\345I}=\252\3572>\210s\247\273 YI=B[<\275\277\334\027>\252\343W=\005\031\350\271\242\016V<\245\3361>\225CM\275\335\306\261\275\212\376\201=\005y\023\275\317+v=Bf \276|`\211=\321\352\342\274r\201\214\275\221\032?=\007\357+\276\317\377@\276K\325\244>\331\260]\275\022\207M\275\314\220\205\275\221f)=\214\355\007\276|\1771>\224\335<\275o~\274\276N\026\226\275\2667\322<\372/\321<\315\003{\274Wj\332=\325\317D= J_\275\306\271(=\037\037\220\274\013\236\217\276\000\331\243>9\226\306\275\036h\016>zh\243\275\201N\035=\266\371\323\274g\2216\276\332\331#\276\275\022\327;\376\350\245\275\353O\027>7I\321\275\201\004\024\276#\"\020=S\241\006\276\017\371\261=\347\303O>\024\323%>\004P->\343\201\375=\241\317=\275\362\016\022>\202\235\341=\363\314\237=)\252 =\0042\221\275z\213M\276\352\350\306=\244\227\215=k\361\210<\005G[\276\201\330\230\274H\225L\275s\364C<\021\000\343\275:\025\327=\347\201l\276EC\254\275s\037\316\275>{\031\276\344fE<T\007\225\274\366O \276e\257Y>\276\002G\276\262YY>\036\234\337\275Ts\354=\216\240\334<\270\265\210=\020\327r=\336\304\007<L\032\232\275\222\010#>A$\005\275\022\323L=/\272+>B\334i\275\372\313\371<\376\277&>h\252\207>?\272\203=\254\337\245\275\0027\361<[\014\324=\037X\241>\022\265\214>\334R\032\276$\202_>3\017\242\275\221\253\333\274YN\020=\204N\034>u\365\260;\3762\321=\305\341\315\275\033\013\321=\272\010Y\275\030T\026\276\276\303\203= \265A<\371\026h\276\rH\207\275T\031\312\274c\2417\276\020\314>\27629\016\276\\\204\031>V\177\337\275$b\311\275}\006\307\274\340\361\217\275uO\234\274\223\203\037>j\313\325\274)}f\275O\257\016\274;\333\312=\2562\005>U\246o\274\235\303\240=y\246\017>}^^\275D\327)>jZ\223\275\347\323\235>\231O}=W\3328>\203z\006\274M%5>\332>\300\275\215^\303\275\'\tm\276o\005\025>7c\277\274\256\253\r>sRB<\000\305C=\334\213\220<\362M\276=\324\023\246\275a\236`\274\261\205\314=y\331\271\275\311H\272\275\363\022l\275@(\245<\325:\306=0&w>\256\001\346<\346\347\026\276\366\243\202\276lb\277=\345\217\037\276VH\025=\317\003\276=og\313\275\265\354#>ff\223\275\344\"\275\275S\321\371=\332@\214\275\302\332\016\276F\343\204>\014E\034=\035 \250<\374W\375=\305U\345\274\271\261\\\276\307*\020\2756I\222\275\275W\346=i\215g>\3532\021>\372\371\325=\347g6\276O\311\367\274m\265\016>dy\002>:M\220\275\353\356\231\2755\223P=\262D\344\275\271\235\024\276WH\200=\342\375&<\014@\320\275\331k\277=\355\317\030\276onl\275\233\312A<N\2425\276vv\240\275Z\363\241=\223\247\032\276\021l\340=\275\007\201=\\\023E\2765\036\272=6w\305\275\274\317\326=\365\344\033=W\215p\276\341\215\000>\261\006#>h\304l\276\274\n\322\275g\037\377<\235\016\010\274\337\274\251>\024\307\206>\365C\350<\027\013=>\'\345-\273k\232d=\201\375\373\274\243G\346=\306\033\354=\265\301[\276]\361\031>~\340\360\275\361\034\353\275\310{\317=:\3729\275tk.\276yD\344=\202\203\266\275U@c\275\271\005_\276\257N\t>\340n*\276\264 \232>\317d\324<>\277\021>\322\327\345\272[\200\r\275r\314\021>\360\330.\276\276\336\030\276z\355w=\255)\253\275\265\235G=(\355\323=\235\021\234\275\036S\227\275\321\033\035\275\353tv>\313\303\370=\030M\202>>\274\314\275MU\263\275\320\265\366\275H\257\211=\2502\247=as\364=\026\255\376\275T\365n>\315U+\276\217\013*>cc7\274~\n5<\301\315\034=\304\217k<\230!\223=\275\350`=\366\016\037=\251}\235==\013x\275{\351\036\276\001h)\276\207\313\200\275[\222\377;B\200\207\275c\235W=A3\t>\310\334\207\275\325\376\r=5\214\353;\336-\177\276*\340,\276\327\035\232\274_U\r>Vl\271=+6\325=\322\370\022\276\005\354\224\276%\002\216\274\003\006)\274\315\260\362\272K$\301\274`Ua\276>f\312\275\227\026\255\275\211U\301\275J\266\274\274h\215\211=5\217E>UO\020>)[i\275n\212\016\275p\'\240<\246Ja\275\031T\216\275\346#\032=\215\016\213\275c\320+>\272\025\375<$\310\023>c\302\'\275~V\004<\3229\252=\177\021!>\021\351\225=\036cb\275c\220\351<Y^7=\205Iq>\234\307\007\275\325\334\000\2750+j\276\254\013\251\274yo\"\273l\273T<\216\263\341=\251\265\"=P\265\276\275\333\243N\273\272I\271\274z7\214\276P\202\204\275\200\311\\>\356\246\003>/v\017\275<$\\>\247ZS\274fN\345\275\035\254\003>\301\003y=hW\032=\213\204\355<\204\321\344;\304M\332\275E\350\000=\225_\226=\3070&\275L\3142=\233\313/=\306\355\236>\221\227\021>k\357\251=\004b\037>\271Zm\276\3152*\275\367\262\227;R\205\345=u\277\226=\214-\343\275\0350\325=zx\320=2\373g<_\251\213\272_/\376\274\316\264\026\276\257CX\276\2541\364\275\302\232h=\372\345\253=\206\234\241\273Wn\236\274\033\214\247=\001\212\010\276w./\276WY\243\276\315\3556\276\233\250r\274\327\220\230;&\355k=R]+\276\321~\272\274\250Mi>\371a9\275E%\n<1\036\356\275-\262\264\272e\033\016\274\377\203q>\260\224h\275\2144\245\274y\241\203\275j.\333<r\0164\275\261W\233\274w\035\221>\024\026\341\274\246\n\221=\255fC\276\204\377\373\275\031\271\311=\027on\276x\210\244\276,V\023>\253T\013\276\335\341m=\325$U=\2627>>\r\250\322=\274\2361>\301\027\315=\237\263:\276\364\276\237>\271y\032\276\037)\004\276u\235k\275\375\033\013>8N\302\275\320Q\373=\263\363\004;\322\'Q\276?U\312=\344,\002\276\324\036\222\275\270{!\276\254O\275=\343@~=ty3\273\361O\034>\333j\006\276\254\216\270\274\006\232\344=\324\340\304<\345\371\001={-\332=\333\376<\276\225\267\000>~\006\212=?~!\276\236\0368\273R\033-\274\335\330U=\365=\221=\n\326\006>70\006>\030\031\202\275\313\331\002\276{\276l\275cT-=\320f\365<\340@|\275EX\333\274\277iU>#\014\030\274C\204\023>\350\022\021\276y\335|>\212t\367\275\"wQ>u-\r\276\250;]\275\346\264\275=\343\340\206\276\212{t=\"\340%\275iW\362=\305\315&><\360\316=\327\340\000>p\t\322=m\305\201;0\024:\275\212\247I\275\006\222M>`\241\342\274\261\\\337<t\375\027>\003\022\360=h\021D=+\355\227\276\314q}\275\377\276X\276\032^W=\374d\300>_=\033=\334\333v\275\304(i>\276\016\212\275\207%\002\276\313\"O\275\266\304\">%\262\223=\177\276F\275&\223\315\274\240\210N=\257\273\010>8\374\222\275\034\317\033>\337\216\251=g\337\214\273\357\277t\274\207If>\351\266\250=\325`\027\276h\210\243\275\333\177.\276\346@\213>\311\3370\273n\330\002\275/\244*\276d\336\036>v6\331;\372<~\276\240\\\274;y\236;\275\3735\032\2758\256(\276\025G\216\275\236\352\345\275\275M\036>\r\345\377\275g/\322=\337Z\213=Q|\232>\214c\025=!\231\021\276\001\332\202\276#\231\211\275i\025\271\275`2{=u\222\220\275g\245\265=\333\010q\275#\321a\276\215\321\356\274\3237\025\275\366\036e\275d\252\244\2741\253\206\275\206T4>\'\376\022\276/\235\017\276\033\301M<\372:L\274\241\300\275<\250w\271=\331\2274=\3751\005>DDS;n\235\337\275.\370X\275\025\251G>\335\203\234<\240.\305<O\223T<\341\303\206\275\371\344\232=\224qZ=\300\252\342<=\035$\276\177\244\214=\346$\322=0\335\203>\244\272\273=\033\332Z=Z\303\213\274R|.>\312\267\306\274\307+\242\275X\347\024>/\251\014\276\363y\302=\374\222D=\213\367\010\276\367\r\305\275\357\341\300\273\372\350\232\274\321\237\037\275\305\264\243<C\322\202>\316l\013\275\224\341\240=\364\301E>\205\273\034=\020\215\214\276\236\300\007\276y\346\372\274m\373\013\276\222\205\302\275\232^\246<\273\240b\275$\245(=\331\274\315\275\246+\200=\240O+\276\252\301\260\274\362\365\243=\326\031\t\274\215\246\\\276\360E\304=\307s6>\252\327\022>\326\234\251=&l\005=\'\256\037\273\211aG=\310\363\206\2751\007\366\275\226\272\340=\020(\316=\031\231\257\275\301\262\256\275\032\203\313\275$B\000\275\234\3750>\347>\021==\021\213>T\321\022>\207O\262<\303P\207>\000\240y>\241\206\355\274c\313\345=\360\336\033\276\234\231R\275\377C%>\226\337?\276\335\030\036>\325h\225\275x\260\326\275\252\335\024=\271\356f\276\367\343\251=g\263\'\275\235\233>\276XX\205>\304\373g=\366\352\320\273\224uj=\214\'*\276$y\277=fM\215\274 \301\224\275\357\007\242\273\n\027?\275\017\374\265\275k\201\263\275\342\306\247>\345\021\264=]\226\212=\313X\303\275\346\373&\276\322\304\207<B\'\325\275\\\274\356=a\301\367=\002\366D\276\027\366\233=:\026*>\371\035\336\274f\0146\276 \360\341=\225\3039>?C\342\275\213VA\276\375C\005=\2547q=\034\226\034\276iNP=L65=\244\305m=\021\"c=\346\226\344=\243\261}=\013(\301<f;\310=-\236\221\275\311\"\246\275\262\232\r>|/\260=\020\251-\276\273\230\230\275J\016!\271\007|\216\274kt\262<\265*\375\274\243\300y>o\225\353\275Y\247\267=M\204\">\222\247d\275\322$\203\275\315\250\306\275\004\343\n>\020W*>\274n\254\275\200o-\274l\200Z\275\t\257\020\276L\002\356<\325\037\304\2741k\260\275\264Kr<\345\221\305<\234\357%\276\361]\276\276\320\213\331<<#N\273\023\033t\276q\351V\276\261\2533>\375\\\310\275\303h\027>\001\323\371<\265{\363=\021n6<\205\207 \276O\337\336=\361Wz=}b\032>{\273\020\276\236*\017\276X\240@=\376\362\326:o\307\'>sn\214=7\177\305\274\023:\220\275\344\005\214==\034\022>\300\"\203\276,\3176\276\347\264\035>\351\305+\275\226\277\335=\376\325A=yZ/\274B\026d>\360[\271=5w\366\275K\265\003>+\3313>C\374\206\274C\365\253=\375f\363\275\334\226\306=\316\356\321\275\243~\246<(J\367;hi=>~\201/=[w\010>y\323\277=\231\236Z;\301\330z\275&#R>Z<\203>\245\340\214\274\0069\352=\r+\023;n\003\214\2758\002\241\275\325\234\361=\217\330\351\275\313\010V>\231\366^>\252-\347\275?\354Q=\275\270V>\252\\\264\275\240R\245\276\234Z\247=\022H\233=7\336\221<*7\245<\261\366\020>\335\252~\275+!.=65\244\275z\257\232=_\357\275\275\226q\036>,\252\033>\315\204\347\275a\037`;G\311\317<:\203\257\274\326C\005\2767\206\206\276\032\352\277\274VC\255\275z\355\010\276\355\311\004=\261j\260=/\261\007=\217\034\350=\350\250\216=\354\304\036>\"f\205\276\246\360\016=c\r\217=j\325\313=\351\313F\276`+\307=_\026$>\0011\375\275\364\'#7\214d\303\273\\\334+\275\317\314\037>}-n\275\006\225\003\276h\323\377<\3761c>\330i\257\275\353\330\027>\020\024F\276BU\376\274+vv=k]%\276\333\324:\276\211\260\242\274\232\260\177=\353\362\265\275\343\300\365\275j*\260=GF\n<>\265\234>\331\016\022;jf\336=\233\327\372\274\006XW\276a\335l<v\317\325\274\315m\365\275\327\355}>m\n\035>}?l\276\362\213\364\272\237H\300\274\254*\222\275U\232\325=%\352\250=\363b\245=\334\300x\274_\264\035>g\227\323=\030\214\233=\337\267(\275-\266R>\377\305\344=\204\315\034\271F\361\005\276h\276\212>P/\227=ztd<\370\316|=\017m\307\275w-\\>\331/\020>\\\370\206\273\302\346Q<Z=\374\275\250\352\241=4\343\300\275\313O\034\276\2122\354=\315\r$\276\272U\202>y$\304\274\021c2\276\031\016\"=\021\361$=\014\345\220=\321\243\261=|\230\323<\340\253\267\275e\241\201\276\307\337\027\275\300\200\330<\326\376\260=\373r\242=\315\202\266\275V\031\022>\021\355\346<\007_\234\276\373\0001>m@\n\276\"\307Z=^\035\236=\332\217\201\275\002k\302={t\226=\307P\376\273\261\252\334;(j\006>#\032&>\304\2567>H\272\371\274\272GI\276\342\377\354\275\t3K\275KZ\325\273\231\257\"=\331~\036\276\263\005\002>\234T>>\341f\001=|\t\004\275\017\331\014=$\003Z\276\242L\300=\021#T\275\357S0=4TF\275\014z\"\276\266/n\275\307\024\200=\215z\367\273\264\034\227\274q\r\340=\357\371}=C\300\336<\215q4>\247(\022=\024\330!>\324\373a\274\226]\007\275\023)\022>\335\250\357\275\031\240\232>\010\2760>j\346\377=\002l1>\214Z\237\274z\365G<\347\277V\276\241\331\205=,\227\260=i\234\361\275\265y!=\264\232@=\001,\270= X\023\275:\002W\275\356\313\017\276\220\207\021\276\036\031\364=\220I\253=E@\223\276\227\230\r>Y\270\325=_r(\276\036\311\353\275\024\2728;\330Ej\275|\370L\276K\202D\276\024?\372<z\262\365\275\\V_>\326\3623>\345l\272\274\263\010\313=\374@&\274\236=\023\275\027?\027\275\336\363F\276w~\204\276\316\311h\275\300\377\006>:\246N\275i\260\220\276\016\335\343\275\303\343\030< \252\231<e@0=\312\037\363\275\246\371\312<c2g>\2631\024\276\302\320\351:\352\334\303=\004\316\031<q\216\007>\035\033\362\275\220\253\237>iPt\276e|\367=05\277<[GR\276\316x|=1\357\317=\004_`<\246\027\364\275\307\332\212>b\272\246\274\270\310\023\276q\224=\274f(^>\340\237\310<H\n\202\276g\242k=p\007\205\274\227\220g\275\326\021\237>\025R\316\275z\200\357\2752m\200\276qS1=\363\017\007=i\325>>\263\007\037>\222t\035\276\000|\211=\223\037\370;\324K\217=C\346\322\275\236\321z\275\223\r\230=^\221\007>\226\271\357\274\255\227\246\275+54>7s\260\275I\370\r\276\275y\367=\243\256r>\234x\226=wa\007\275\252\347\244\274\223<7=j\272\013=V0\013>\227\226u\275\200\247\026=\206!\016\275\004\214=>\320\337Y\2756\3468\276\021\2110\276\221\333\276\275\263\030N\276\234\0029\276\3640->J\210\331<a\001\212\276^\245S=\202X\227\275m\313\355=\"B\034\276\232b\021>Z\320s=53\016\276\311N,>\301\276\300=w\317\210\275\024\316f\276lO\242\275\351\277Z:\2372.=u\346B<\250\364\227\275/q\266\274\272L\023=\266\2760\275nf\257=Pf\305=3\341\001>\267\321\\\275\325\034\016=S.\245=\350\250\"\276h\033\220>\0354\245\275+P[\274c[\340\275\316\250u<<f\367;\310a\003\275\266\317\034\274\324\322\213\275\312=\004\276[\201\177\275\324\214\215\273\270\200\r=\236\263&=)\017\250\274\363B\260\275WE\344=r\345\203>\360s\016<(\353\230\274\211Z5\271~BF\276E\204\024>9\273x\274\026\2601\2762xM>\222\352\013\276\340\213S>\325\326c<\373\t\n\276\244f\017>Vh\317=#BF>\336\023\242=Y\005\377=fD\311=#\353e>&\2328\276\335\267\214\275;\375\037\276P)\240\275\361)\210=\203\261\313\275\202\207V=mx\312\276\324\027\t;\364\213\022\276\320.3\275\022\360\257\275\270\0335\275#\376\374\275P\202\227=\212y\273<\374\226\354\275\251y\225>\016\205Q\275\241\372\235\275\267\376\331\2751\002z\270\023c\274={n\377=\273#\000=\224 \346=\t\256E=\346\177\265\275[I\332\275\024\264e\276L\001\020>\330\245\230\275\355\341O>\264\234\020=i\217\227=I\217\200>\331\367\002\275\270,F>\0169\'\275\265\301\334\275\310\270\235\275\000h\016\276\200\362\033\276\205Z\214\275\237\257R=_\313\350\275\'\214\271;\322\212\205:~L\017\2764%S\275\371\362i>\275I\037=\205\320\017\276\217\250\202>D\364]>\223A\255\274\342k\225\275\263\016 >]\2179>Ai\335\275W\320o\275*\247i\273:\326u\276\321\313\222=J\rq\276Mdw=\237\220\366\275P\3116=K,\201=\376Y\001=\354\242/\2758\370\264\274\306\340\211\275\200\211\017>K\205\331=O\2537=\244qS<P\201\333=\267JB\275\225\202\252\273\212\346\001\276\235\207\250=!q\010\276q\025\037\27553\340\275\334\204\010\276\235%\274\275\214\242\377\275\311\037\211\273P\0040>\010v\212\275D\270\347\275\231\225\267\274O5\014\275\032\200\345\275{u\215<{\314W\275\320\273I\276q\3737=C\316\321\275.:\331\274kM\324\274e\213\026\274\004\017\352=\232\364\210=T]\213>\306\231\276\2752\030\224;6\341\371=\301w\312\275?v\376\273&\310\310<\214|1\276\367\0000\273\272Q\202>\331\276q\275\253\003q\276\355\010\002\275\177}3=\265\305j=]\252\314\275\330w\234=oX==\344oo\276\231\320\024>\225l\317=.AE\275\020\357P>3\004\025\275\232\023b>\274\304\001>\310\341\204\275u\335\217=,+)\275\352\220\264=\362\255p\276\317\247\227\275\247\340\331\274\251\267+=\265s\223=\220Eh>{S\020\276\010\263\235\275\002\325\207\276nZt=v\253\320=\203i\221\276\'\223y>\262\'&>A\304H>,U\016\275-\376\222\275\\}\326\275j>d\276\305np\275\037e\226<\252q\017>vGq>\326|\312\275\023\347\026\276\244T\251\275\010F(\276\230\231\013\276Vs-\275\022\357f<W\322\204\275\305\036P>\037\322\033\275\\\0231=+\327\200=\372U\361\275\301\333\343<\361C\026\276\232\307\214>Ck\246=\373\300\206>+|\327\274\t\353\323=5\207\312<\324\t\035>\337~3\275\275\177\243<;?\264<\203o\267\275\0370#\275\001\2563\2762\364Y>D\n\027\275\261T\354\275c\006=>\014J\361=\2469\314=\037`+=\326\030\034=9\251a\276D\333\230<TQ4=\025\205x\2756\334\233\275\226\020\263=Q\263\210\275\\\354&=X\240\226\275\366\277\036>\317w~\275C\002\315\275y\014\225\270\270^\207>\275\025S>z\314\006>\266\261\201\275}sw\273\000\362^;\350\335\312\275\363\245\300<\322m\251\275+\376\005>\353\260\333\275\246\220\337\275;Ld\276/K\002\276a&\226<\321\306\271=\326\027\275=:\221D=\2148\037>\013pJ>g\314\027:6\371B=\320\2362\274;)\261\274\014^\330:2\306\343\275\254C7=\363\333\254<\261\023\027;"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 30
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc0/add"
      op: "Add"
      input: "oldpi/model/pi_fc0/MatMul"
      input: "oldpi/model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh"
      op: "Tanh"
      input: "oldpi/model/pi_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
            tensor_content: "\317\345\366\2753K\034>H(B\276\227\254\027\276\223\303-\276\236\2219<\216\236\226=B\362\220\275\343\'\001\276\273\216\037>4@N=\276Y\007>\373Z\312\275->F\276_hr>|gp>\"\340\325=\331\207I\275\346\260\244=\337D\375=S\316&>g\236\371=_4\021>\325_Q\274a:$\276\361<5=\333\205\t\276\330\r\017\276\3170b=\305\242\307\275\325L&<\'7>>6d\270\275^\365\210=\345SZ\275v \276\275\022\2158>\177|\222=\260\023&\276y\234\017>\027\230\234=\314\231%> \254h=\251\206%>a<q\276\010\005\221=\347\370\204=G\243\231\275\030\001\201\273\221\204\027\274`\370\266=\021\213\212>\221;\377=\274R>;\033\n4=\342T\350;S\3107=\200\363\261<\"\010\275\275y\000Y;h\334\223=\344\244\252\276\016S/\276\345\265,>\"0\016\276\007\352\226>\230\322\t<0\255\002>\032\020-\276P\226\211\275V\367\205=\0002V>\263\256%\27541(\273\264\206\265\275\300\247\010=\241~$\275\234)\000\276\255\0240\276X\n1=\260\3105\275p\201\307=\332\206_>?f\n\2758\346\267\275$\322\007=\344\215\311<\343\346\022\276K\254\202=9L\336=\377\227\262\275\272cp\276\026o\317=\251\323\263=\310\0213\273R\213\376\275\254i!>\023_\214\275c\237\002>~%\021>#\020\314\275Yn\312=<\335\247\275\204\270I\276mB\220<\371\211\241=n\225\310\275\031\327#\275\246\3579\275\370g?>\\\275\007\276&(\326\275\023\246\265=)\021)\276[v.\276\225\231\351<j\341\036>a\001\214;EDW=XK\207\275\317\220\371=r\311\203\276\345,V\275\344\243z=\230\246\t>t\026\211\274J\3673>\\\250\006=G\354\002>\265\024\001\276[\235\317<kA\347<5\3744>\235\030\327\274\322\3101\276}G\226\275\316\307\215\273\356a\310>M\371\246\274\246M\233\274\177\236<=JQ\240=\331[\377=xN\231=J\350\363\2752\251\235=\021\004,>\272\274z\275F\177\236=x:\222\276\3770H\274(\027G>\210\022j\276\256\276\177\275\304\276\016=\375)\002\276^\303\246\274\344\260\031\275\324\227\363<\301\204\370<G\202\354\275U\222\377=\234\343\246\275\030\263\246\275{\027\033>\256\035\240\275]\305\210<\235\270\034\276\233\200?=\270s6\274\356~\001>\"\346\312\275\300#\241=\236\215\242\275\333}n=\261y\006\275\225%A\276\022\251\010>\233BS\276\343$\326=\301\250\337<tK\035\276\254!\267<a\327\215>\251\265\346=\310\356\223;(\021h9\020\321\361\274\222\215S\275\210\200\203\276\036^~>t\241\\\275\260\240\333\274\354\227\236=\r\031\351=\260\342u\2758t\247= B\270<\023?\331\2759\235\025\275d\177\265>S\2746=\207\377\211=\234\314\252\274\263\326\246=\235[\315=R\345\312\274\247\256X=\261(l\276\245\300\007>\256j\002\276M\261E>B\300Z\276\005\003\212=#\324\211:Q\3619\276\2452\362<S\216\232;\024\026\337\274\372\341?>!\275M>W.\316\275\314\r\253\275\014\245\014>\270\351\322\2752\304C;?z\355=\307S\223\275|\001j=\320Z\221=<jE>\027\273\375=\310!\034\276\234\377\336\275\337\275\006:\257\222X>\273IU\275\025\022 \2758_\030\274\026=\376\275\254\226\013>\313,\001>\372\3514\276\374,\001=?\220\333=t#\312\275\371\3230\276\351|v=~\313\271\2759\261b<\224F\034\276\374\010\243>\376\301\007\275\033\327\311<e-\"\274\257Dj=\030\210\202=\236~\n>}$e\276\342\372z>\346l\221<\203b\304\275\003\246\300\276\330\232\252\275Y\265\317<\262\216\365<\t\233\203\274VR}<\356\177\364=%\341\226=\316#\206\275\276\324\003\276M\037\222=\376}\031\276\306\\\001=\345H\213\275\361\340\026>\370\007\005\275j\032e\276%\002\305\275\376,\271=@\242\373\275\r\251\244\276<#!>e\313\030>\270\013[\2751\276\256<\360GY\276\204^\306\274\220}n\276\0046\200\275\000\266\000\276\002\347\251\275\361nK\276\270\353%\276tA\030>\014\334\000=\264\362\004>\333\266\035>8z\347\273\237A7\2763\244Z=\010\345\007>\321hW\276\214\342h\275\221\301\221=\263\323\036=\211;\214\273jX\245<\314Q\274\276\334\207X=N@\217=\r\025\321=\341\200\241\274\3442\264=\361{\022\276\205\266J=\314\210\026\273q\200\202<\005=\237<\356\256M=\313\006\302=\311\202\252=\356\372*>\317\331u=\246\033\016\276\353\253\232<\020\265\007>\200 \240=\241\235\214<\377\301A\276\273\364^>\356\330\271<IF\247=\227\275#>r\200\001\276\301\357\002\276Y\337H\276k\353\343=\250}\344=\006\267\021\274\305\274\301\274{\206G=`\365\207\275\3268\252\274\367\315S\275\263\240H\275:\n\211\275-\177\237=N\206\250=\344\334\242=\313\352k:\365[~\273\275\360\213=9\223\027\276\225\310D\274\023{\317<mK\272\2758\261\352=8\205\004>\303I\013\274G\030\245\275\337(\">\004\017T\276\266\312\227<0\327\200\274Ua^\275\203\206\250=\254\242<\273U$\355=\232aQ>a^Q\276\275\022T>\372\357\020=\203\204\020\276L44<\036\374\216=J\001M=\320,\003\275t\274\245\276&\275T>>!\021\2758\003\n=\337\275\367\275k\014\002\275\237\244\247\274LJ\367=\r\230)\276\360\332/=\265\342\261<\277Wk=y\335\350=\202\243\201=\353![<n9\\\275\241\353\265=\305Zw\276eA\013>\026\027\207=\201\241)<\305V\230=c\203\027>t\215M>_q;\276\357\232Y\276\327\026\351=d\321\273\276&\217X\275\320A\356=4@s\275\262OQ\276\254g|<rW)>\3019+>K\355\353<\211\357\210\276\334#\030\275\274\370\270=\217\036\222\274-W\376=\264e\236\275\n\205\331<\\\313\346\275TVR\276\333\320\220=#J\376< h\000>\376T\222\273K\317\352;\366T6\276\263\264`<\203\377\325\275\207\242\222<\232\266\023\275\266e@\276)\315\237\275UDo>tJ\324=<Y\264=\232\023q\276\2139\355\275\244\232\340=\021\014\013\276\202\274\266=\355\212e\274P)\317\275\204\240;\275\264\212y>\375o\331\275\375\222\321\275\316\266\217=\332\274\247\275y\376\025\274\025~\215\275U\t\350\275\361\307\243=\252Hi>:@\243\275%*\007\275]6\032\276\225R\036\275ZK!\276\247\205v=\277=\236=(\215\367\275W\241\020\275\316\356\234<\226H\352\275|\313\325=n\034O=\370\242\347\275\207\332\361\275I\037\307<\337 +>\034\254\301<oT\264\276\311\214\024>\310\267I\275N\023n>\005\216\035\274\300\335N\275\267\254/;\206\031>\2765\313\226\276q~!\2765b\020\275u\270\247\275\252\211\017\275|\351\021>9\324\014\276\231R\026\276\004\352<>\275`@\276!\343A=\263B\340\275\255\250D=\220\257\002>\315\310\t\275\177\3750<PY\375;\372\315\351=\267\033\252=\316\036\021\274\306b\002\275s\265\241\275\237Q\313=\270l&\275T\376\336\273W|{\275\014\331\207\275\215j|\276j\310\240\275\260\224\374=\307\204\257=k\334\202\2753\022.>%H\241=\317\254\r>v.<\275L\004\213>P\302h>\201Q\031>=zB=\212\346x\275\274>\025=\016\212\000\276\312Lb=\360\356y\275\365\241x=M\315V=\031M\304=a8%>\201\266\022=\304ZV=\370\001\000>\322\220\265=\036\234\235\275\027\363\177<,\352\267\275.\216\003\276\214\304\272\275E\177\265\275\n\313\232<\347}\366\274\254\021\313<H\332K\274\3238\330=\003>\021:\024\'\234=\276O?>\206\314y\276\276\270`\276\216\344\241:\254@y=!<\025>\245[\027>\031[c>;\200\302=\304\206\342=\240\376\004\276\300<\327=\007\361\327=eJ\r\276\315\351\323=vRN\276\213\341Z>\032\003P>\260\026\200\275\224m\335=\230\031\304\275!9V>]\250\334\275X\224}=?\216\252=\tXI\2746\204 >\367\205\177=\310\331\241=\016N\201>\234x\320\275\344\3438=&+\004\275~A\315=\247@\352\274\232\034\023<\351\002\034\275\217\213%\276\3470\016=\2715\235=\260\310\313=\351\227\010>\360\016\353\274\311\361\213=\'\303\237\275\241\302.\275\347y\331\275\3740\004\276P\355G>\303\2349>[Pj\274\210\274\333=\231*\337\275~\360\267\275\250\247\210\275a\t\'>\240\036\203\276\247\205\336=\274\213\323\275\212\021\'=PF\013>\273\335\t\276\270\001\2018\347\274\000>\206\256\313\275\322\352@=E\270=\276\351e\207\275\3174P>\313S\"\275\246\331\202\276\342S>\274\000\252\320\275_B\021\276\n\367\272=\340\324L\276\251\362\336\2754S_>i?\032>3\226\031\276\241@\337\272\352@\237=o\303\305\273\336\2414\276<\002\375\275\001g\317=\030\375\n>\340\352\234\276}\356p=\317\031\361\275!J\017\276\016\254\007>iJ\312=\214\177\337=\220\237~=Y\271s=\242v\235<\344\304\270<\331\214\374\274\035\026\301<\254\177\355\275\t\311\207=\223H\345\273\270\230\033>\242i\336\275+\260\221\275\315p\"\276\247\327\320=TP\021=\312\231\241>\213\366&\274\010\301\237=\210\223)>m\250\216\276\351Q\213\275\325\246S\276w\226l>:\013\276=\037\376\220>v@)\276\300\246\212=\275u\001\276\206\325y\275\000{!\275\276\033\233\274\371X\275\275U\304E\274-h\020\276\003h\254\272\032G\"\275\310\273\335\273\307\030?\276_@\231=G\017\211\275\010\376\321\275\237Q\270\275yZ\243<\310v\033\276>~\316\275\2476\265>,4n=\346\202\201\275\267\324S>\210\335\325\275;\031>\275\363`}=b\250\371=T\330@:\256\2049>t\266\237\273\r.K>\201\237%>My\230\274h\276`\275E\275+\276j\226\227=n\204X=c\263L>E\320a>\242\266\016=F&h\275_\263\242\275\234\220%=\234\326\336\275\276\355y\274\202\332\264\274\007LH\276\277O\252=B*L;\233\304->\252D}<\267\014\201\2752\037\264=*\273\014\275\\\316P>#\2257\274\334\300S\276\273T\346\275x\3021=*\260\007>U\347>\275\025@R\275xYJ\275\252\210a>U\307\240\274\221\355\254\275\350\302Y\274\3577\026>\353\020D\276\236\250\214>\251>N\275\312O\007>\005#\313\274k\323\253:\020\362\010\276\027S\216\275\2541\223=f\357\242\276rY\'>\356\001\320\274\350z!=\270\366\304\272U\302\271=\320\233\273<\223u\324\275\342g\267=\346\024\310\274W\r\230\276\326\364-\276\226\324\375<\310\006\202<0T\020>\330\365+>\232\246%\276J;\266<!\336\345=l\363Y=Q\314A\274\265\355!<\267\252\204>\277y\023>\343\273\017\276(\033\215\275\035\350\t>\024\241\247\275\246v\022>\363\327\200\274\277\340\276\272\331T\234<\373e\000\276\211\335s\276L\326\276<\320X\212>\253\032\350\273\305\271\364=\025\274+\276\205\223\022:\033O\205=\367\036)\276\351\205!\276\241i\244<w\201I>\267\356u\274p\344,>\30624\275p\030\343\275\20127\2753\313z<:\320\325<]\t\202\275#7\360\275\276H\003\276#V\213\276\331t\322\275T;\324<\002Z*\276\245\007 \275=>\370=\277\035<>dS\347\272\243\014\220\275\345v\354<\351\206L\274y<W>\032\343(>\352\315\215=\025~\242\275\r\246\210=\332u\217<\301\354\234\275\226\217M=\301/\365\275\177\r\364=g\304\222=j8\332<m\324\017\275\310#<>N\227\301\275\003\364\r\276\361W\017>9\205<<\365\232\311=\253w!>\370\330K>\311p\327>\224\203\010\275\301\302\360<I\370\017\276L\307&>b\257\003>]\374\250\275\207q\357\275\337\202\022=\352r\226\274Sc\367=\026\206:>\330\014i\2765@\034\276\265\210i\275\005\267\025<l\265\271=\001\250\221\275\210}w=Z\232b\273\311\335+=\267X\232\275\246g~>ve\353\2755\375\250<F\337`=q:\t\276.\237\261=\310\3516\275ZG\001\275\367\234\034\276\243\246\204=\212\316\204\274<\\\320<\020 \024\275p\206\207=\016N\327\2737\234v=\337\023\336<n\220\241\276\027\277\006\276\035`#\276\377\330\302\273\201Z\034>\016\001R>\027S[>Fv\023\276\204\3522=\301&W\275!\023\037\2764&\003\275R\317\273=\2413a>N\230\317</n\221\275\221\241\216=\337\220\027>\216\263x\275\211\320\237;\207\217#\276\306I\365\275c\210\035\276K\'\013\275\3360W=\3436\204=\003U\247>\2229\365<\215}\014\276\003\312\200\275\231^\032=N\t\251\276\273\255=\276M\363S\276\340=%>\325\024\307\275r\"\262=8\320\352\2751\373q<:\345~;A\340\037\276\332\2101\276\375\326\341=c?\235=\347\307\244<\370\256\241=\274=@\2746Xj\276\225/\361<\366\247&\276I\227?\2763\252\230=B\362D\275\352\004\t>\035[w\276!\004\324;\026}p\275\237\001\346=\374\256\001\273\200\372?\276$\226\213=5\236\034\275\344\331=\276\244\t\020\276h\005\021\275lSi>j\360\215=\263\243\222\275W2\035>\255\255\342\275\346)\241;\322q\266\275\335|\202\274\010/\005>\256\221\212=\250\257\201=\234\3430\275\340\324\267<\001\255\036=xr\255=\014\222M>\371f\014\276ip\217\276\311\267\250=}\215\327=t\275\311\274\346#t\276\000w\320=b\\C=\261\253+\276I<a\276\033T`\275=\177\035\274%\246\017>,\333Z=\247\324\235\275\355\277?>7e\337\274\007\322&\270\345S\337;k\331~<+\n\223\275U7\017\275\333\rl>\"*\336=\245\223\226\275p`c\276f\177:\276.\221\234\275+\306\206\276\206\330\344=4\326W\275Z\370W\276T@V\276\005\263\364\275hi\243<\220\000\346<\212\3019>\316\231\314=\242l\213\275\256\357\t\276\020\014c=1\201\346<\020b)\276\371\242\260=\345\306\245=\307\322\031>\000_!<\024,(\276\021\216\256\275\354\214\324=\341vY\276\036\260\252\274\212,@\274\343\277 =\271\003=\276\177\333x=\255\374\311\273\275\334\213=B\330W=O\n\252\275C\353(>r\314\215=\203\006\017\276\323w\002\275P\322\222\275\201\302:\275(\231\361=\222\253\237\275\216%k=\226\226z\273\333\212\025=\375\341D>FeW\276`\331\021\275\0054L=\250\035\372\275\001w`>\207\316\007>\037.\016\273\320\340\234\274\r\204Q>\335zv\2766\226&>:/\273=\344\276~=\215\236j>\347\t\320=\275\346\265=T\245H\275t\215\236\275\267\034\310\273UD1>\261>\356=\355\005s\276\030\322\326<`8)\275=\021g=\006 \333\275#\205)\275\256c\335\274\202ZU\275@\344\014\276\270\177\202\274\276#\005\276\250F\340:\272\215\362=\215\005\024\276\212\217\261\276\234W\301<A\261\025\275\010\340\262\275!\366\355=;\200\007\276\236\032\213\275=\272M>\267\003\236\275\3274\214\276\371\331M\273O\010`>\037\344t\273B~\026\275\233Q\267\274\233\265\014\276\345\251\253=YtX>\342\352\371=w;\254\275\242\023\014\2762\211\017\276e2\227<\276V3\276E\324s\275\320pL\275\033|\205\275\353\345\034\276l\2340\276\352\350\202=8Po=S\305\241\275T+\316<Ph\233=\260%\363=\036\253\231\275\334\307N=1\035\337=\310\352<\275\177\224\274=\231W@\274\027\'\302\272\326\277,\275\364\002\377<j\347<=\2757\246\275\033\326\'\276Np{\274\362|\273\276\344\367\273\275\333\335R\276\220\"\350=\265C\327=\025\364\022\276\364\243\360\275\036H\273=<\004\343\274_\312\221>\255\313C=\271\374\030\276\334\036G>x\312\273=\342\016]>\025\003l;p|\002\276.`\006\274\303[\373=\037\243`=,\220\375\275\240N\013\276pG\200\275\360U\027\275m{\213\275N\352\203\276N\261-=k\250\363=\026[\373\275\003\031\'=\345\261\253\275=O\300\275nBG\275\247^N=\223\263\357=D\262\315=/\350\006>;\347\212=5e\224\275\322e3\276\266BH\275nv\226\275\232\264k=.\017\003\276(\242#\275E<\201= P.\276\344&K\275\014\\\t=\205w\352\274#\205\202\274\310\0346\274\353\321_\276I&\276\274\267\200\013=\225\263T\276\014\207\360\274\322[$>M\262\023>\377\010\212\276\\\330\330=\321\004\272>\307!G<\207\215\\\276\231\023\027\276~\222Y=UN\000=\2672\351<\222mn=&,!>X\342O={C>>g\352\236\276\352\323,\276~G\311;\240W\277=\351\021\365\272a\345\\\276dC\250=\363\324C=Y\036!>\360P\261>\000\304\374=\002^(\275\241T\302=\327Q4>\200\017\347\275\231C\373\273=\2244>e\261\366\275l\244\252=\021\255*\276V\277\372\275\365\311N>5\022+\276m\347\322=\362O\230<H\030T\275\217\242I\274\340x\267=\240@\337\275\256O\t\275IDM<\311\362\"\276\037\032@=\235\262\211\275*\236&\276:g\003>\375\347\216\275\330\301\027\276\216\037\330=\214\304\022\275\377\264\003\275\322\231D=\312\265\342\274\03235\276\2545}=l\274\002>\364\000\353<QC}=\316\221\356\275\353\330\036=\233\0303>=!c\275\025\252\332=C\353\031>\347\210\032=\023g\326\275\177\201\372\275\224\347V\276\307\035\014>\315j1<qN\243=\224\231\264=f\0325\2759.\031\276\234\350f\2757\233=>\204;\034\276R\306\200=\010\357\226<o\312_>N\247A\274\334\304\000<\237\3027=\242.\331>\245\234\270\275FN\237=|\026&\274\316i\211\274I\255T>g \204=\255\325C<7x<=\025Pq\2757\302\021>&=\252\275\016\371\250\272h\010\013\273.\217\217\274\363\274\025=\t`F\275\345\201\234=\303\310e=\035\243\323=\022\244\362\274\017\335\022\276\272G\021\276t\214\252=\r\226\357\275\262\324\006\275^\312\035=pj\233=\226\331N\276v\001I\276p\021B\275s0?=e4\322<#9\205=;\321\026\275\301\231\265\275P\364\370\275\227L\025\276\324\264\203\274#M\325=\260\354\226<p\252/\276dy\215\274\251\366\r=\220\376\003\276\312,\361\275\334#d\273*y*\275`\247\214<\002t\237\274\313\373\t>%\244\304\274M\226\331\275\031Wr>\210\020\217=dU\223\275\204R\221\274\007\342\263<@\324\213\273P\200\223\276\312:3>\336#\000>\223\313\231=\205\r\371=\364Q\317\275p\177\026>[!\001>\232\2060\275\250\204\\><(j>p\362\307\273\336\032\"\276G`\223=\356E\222\275 \025\023\276\225:7\276p\016\006\276X\331+\276\2159\265=\326\317O\276\020|\023\276\211p>\274\223:b\276\276\3549\275\344\367\000\275NgL\276\264\374e=\322\223\306\274\017v\037=\0370\021\276\005a\013>\2008*<\334\370\360=\261y.\275Fs\253\275:\243\267\275\335\255\200\275#w{\276\026of\275\214\323\002\276U\374\262<\003:\254\271\200K@<V\014\310=^+w\275\207\024,\274WE!>\237\267\303\275\023\247\301=\311\275P\276p\324\010>+$\r>\236\000\201\275\032v\304\275\262\001\262=\206\031\202>l3\274\274$\227\216\275\030\201\313=\322\210]=\366\002\013\276\274:g\274/\360\226\2739\231R=[\241\373=\246p\016\276\310\341\276\275\312fp=iK\335=\013\226Q\274AW1\276\204\374\266\275\0067\002\276\2652\231\2753\273&\276\016\272\233\2764Ez\276J\032\302<O\270q\274\350z\007\276\223nD>\220\266\001\276\361\351\">\271\337|\275\t7\0039W\025p=s,\235\274\332`\262\275a\377\232\276\333\257n=@\314\t\276/\221n>\242\024\023;_\020\347\275P\000\230\276t=\252=`A\335<\322\'\361=)\331\333\274\265\223\"\275\367\0330=\376\310\304\275p\376Q>\023\0167>\243\350\'>-%\320<\270O\325\274qP\214\275\367\274\227\275\024\035V\276\014\007g=\022E\021>\231\311->\005\226\366\274\2061\250\275I\307\001\275\001\001\333\273\263\247\004\276$g\305\273{\007\312=\351[\300\275\007\234]\275\'\213[\274\312N\226\275\220.h=\276\0207>I\001\251=V\256B>\207f@=*\327B\274l\367o=\327\246\024\276o\006C=\025~\237<\033\032\263\275\310F%\276>\327G=0UP>\317\273>\276\353\331\207\276I\217\005\274\024?\334\275\237\014\306\275gx\t\273\357\241\001>5%f\274\230\243D>#6L\276\257\264\371\274|\023\334=\225\352l\276\221H\341=f\342\212>\303%E\275\272H\213\275Q\2663>4wE:\205\341\351\273\267\374\001\275C*)>\316#\243=\035\240\340\275A\236h\276\243.\357\275\201b\253=\256h\352<\251\001:>\272~==\216\335\237\275\376\351\026>\t\212\341=\322P\360\275\342\305\260\275)G\371\275\325\363\366\273)\315\021\276\024s\205>Yd\271=\224?@\276]\200\352=\215@h\275\034\243\200=\023\247\000<\336\315\377\275Oh\037\276\310\204x\275\241\177\372=\307\001\361\275d\213\205>M\204\030\275!\324!\276Xn[>\343?\253=\353\0219>\223\332\037>~rW\275\t\263\236\275I\0103>I\341\033=\205\226\237<L\260Q\276\270\306\255>\366\246\014>9J\206\275n7\236\275\014\010\346;P\261a=\\\026>\276\363[\302\275)\335\n\275\217\357{>\023\307\303\273f\364\006\276F\343R\276]:\352\274\321\276\307;\367\036\306\274\032\210_\275\3116\266\275\373\251\r\276\005.\213=\0073A=\3743\007>\204\322\350\272\r\350(\276r\260\031=\021\366\030>\233:\213=\367p\225\275\323N\270\275$\220O>5\257L\2763I\353\274P/\202=|d\326\275\224\rE\276;\305\004>\204\003\010\276\364\023\016\276\203q\204:O*\337=\254-\026=v\033\306<\315^\017\276\0241\235>\267\'\272;\373#\305=\006G\274\273P\017\205\274\264\204\245=\313\306^\276\262V==Xf\002=O\370/\276 D\007\276\325\323\211\275\220\3667>)\266\341\275\364\300a\276\333\337\254\275g\302\335\275\201\030\244\276[\3552\275\n&\227=\361\365\210=d\017\354\275\021<\367;\370\010\013\2767\343v<\273\033\331<\370\315\020>\252\315\255<\361r\016>d\256\\=\337\266\337\275@\347\340\275$\343\207\276\003\217e=\\\363\250\275\037\252\320\275\345\231*>\252\377\324\275\342\002\021\276\325N\301=Y\300g\273-\225\356\275A\372\007=_HH\275kn\227\275U\357s\276\3008\340:{\0261=\332z\330\275\271\017\212\27520\035>s\017\372<]\364#\275\236\230\032\276F0\332\274\232Y\205\275.\331^>\333s*=\030\252\263=\001H\314\275R\210e>^b\274=!\207\224\274\371<\265\275\2026\307=1\032\221=\2459\014>M\311\257\274\217\337Y<<\342\355<=DI>\374\374N>\270\331\230<\022-Y\276AT\322=\260\2544\275\250\214\026\271\266\r9=2ft>\377\016\r\276QS\232=`\227&\275\341\321\235\275\nY\216\275\246\352\302>.\000\245\275EZ\001\275N\022\005>\353h\213\275\343\252V>\2418_<\004\211\356=\225=h=K\004\332\275\227n\224=\025\360\237=J\004@>)pG>C\352+=>\014\014\276\221\337\220=\364V\341;\3217\313\275\026H\017\276\226[\207\276\365\325\201\275\304u#=\276\350\024>\020\355~<\r\320\336=*\215\325\273\026\3227\274\361g\021\275\001\345r\275u\223\224\275\305\357\352\275\245N(\275\371\244^\274\234\374K>\206>P\275\304cf=\346e\273<?\304\022>\237\3268\275\3367\344\273\371\325\342=\221Q\200=V\206\034\276(\202\271<\240\243\000>\255\367h\276\217ev>=\034\260\274\007V\036>\272\232\371\275I\236\252\275n\246\225\275\350p<<\375\341G\276\334\322\360\274\263i`\276\222\315\261;\252\020\326=\000<\003\273\3058\253\275\277\366\027\276\007\257\356\275\003\202\037\276\352\321\000>\320\006x>p!\315=\3652R>\002\241\t\276\372\227\350=\326]\233=\036x\317>8\342_\276oQ%>\317\325\271=i\256\324\274\254\237\004\276\351\316%\276]\006r<S\210\004>\205\306\342\275m!\r>\000`\'\276^K\013>!-\353\275\035i\032=gp\340=\005\371\301\275\327cM<v\033\023\276S\3715\273\316\233\250\275)d-\276$\200\027=kx<\2750@\336\274\337\232\366=1\373v=+b\005\276\344@\266\276%\350\360<-dJ=\217mU\276\254\241\014\275\370\260\237=\241\270\213=\206b/\275ds\354<\221-\273=\302\351\334\275r\214\231=\350\332\264=P{\345\275\245\253\202<D\355\022\275\376Sv\275\3230G<\210\341\017<\004\345\331<\240\352\t>L\014\037=\2422\026>\246>k\275/hH>\367\017\277\275\241\255\346\275\311\231|>\332w\242\273\362\241\000\273\027\033\334<\036(o>\265a\260=un\213\276\233\206\'<\214\244\244=\020\215\351\274\313,\021>\033\270f\275\300\013k=Q{\363<\305\362\311\274\337B\312<+\233;=\372\320\256\275Z\001_\276a\346\274\274G\222\213>\2603k>+@\321\275\013v\037=\027QI\276\2450Z=\r\006%<6OT\275O\253\360\275\250\235\025=\032\370@>_\306\031>\034\352\247=\265\3540\276\365,\013\276\340\355\370=\273\035\362=\303\000K=\321\340\037\276\370D\006\276\304\'C\275\317\246&><s\243\273\330Jg\276\332\367\026\275+\337\276\275\342\213~\275\326y&\276\350\177&\276\010\230\221\272\373\376\024\276\324\210M>\003\345d\276\306x\021\276\",\204\275\363\275!\276#w2\276\332k\326=\311RH\276\356\271H=Nj\260==bf\275mQ5>\320\240\032>\255$/\275\215\274\320\273\213\016L>\0359\240<W\246\336\273\236n\243\274\177\3206\276\035\tG>^\004E\275e\276a\275\2241\031<\032\333N\276\017\225\177\274\314\264\336;\216\202Q>\366\031\327\275\372C%>\035A+>\265\232\246\275\267\324\340\275\244R\203\275s\266\020\276W\302\007>H\262\004=\226xG\276J\306\200<Q\317\322<\322\0248\273\261\034\362\275\363\310$>u\236@\276[\004a>y\3015>5\'\230<\241\023-\276\007:\267\275\264\267\326=\002w\021=k\353m\275\304\320\001>\252\372\021>H-k\276d\370\321=6\317\332=fQ\273=\332TJ\276\342\235\t=\366\212\006\276\202\022\252\275\261#\262\275\276\317\302=\362\264\317\275\227pj=\315\345\000=P\010\031\276\025\221/=\302\037\226\275\220\244Z\274\013tS\276\302\205r=\214@\002>j\033\006>\303\237\225\275\267\342\256\275\200\207\210\275\036Y\241=`\242\212\275\177\271\000>\3062.\276\307\344\003<\006\346A>\346\226\242>Zl\222\275/\263\013>R\270\243\275\307o\311<9\266P=\177 y>\223\303\352\275\251~\371=|\351\030\276\356\346\013\276.\217\300=\347Q5\276\205\226C<\007Q\264=\272\023\205=W{\312<\221\301\t\276a\\\203<_2\027\276\203\213L>)\035\314=}\223(>\361\202\006>\344C\353\2759/\300\274\032l\256\275\014\345s<\023*\225\274\020g\220<\200\304\010>\246\\\254=\222\223~=>\267B>9\"D>]\304\027=\007e\216\273\004\\\211>\242\0203\274\n<\232\274\364}\006\276\332\313\033\275T\357\303=\377\377\321;\344\316*\275w\312!=Nuc\275\344w\332\273\235:k>hex\274\r\353\246\275uS\344\275\243J\233=\304\220\326=C\2733\275\346\344J\276\322\025\375=;C\231\276l\311!\276\332\177\221\274\360\361\021>\313\277\350:\316\006\227:qz\020>\326\330\352<v&\215>\214\253\317=\017*\371\273\031\3031>\031\\W;\345\265\335=n\201d\274\257HU=Th\366=\355\262\343<\302w\307=u\234\273\274u\314l>\037\265h\276v\017\250\275\277\317\214\275A+\204>\177\371\363=\237\202\320:m\374\212\273B\026\233\275\315\332j\2752\233[\276\324=\205\275\276\235n\275\"H\321=\310\316\216>\250V\013>\216\006\207>8\037W;+\241\005>o\353\244\275t\361o=\300\033\306=\365\344o=p\204J=\202P\033>b\000D=Y\r\247\275\212\346T>\200\217\034\275\230\363\227\275\356Ue<.I\205=\rI\315\274\032\242\303\275\234p\233\275\221+N\276Jq\224<\264\337*=m|W\275`\360\362\275\321\020\216=M\216\350\275\224\021\257=\355]\253=\007\223e\276\276\036%\276\217\017\344\275X\346\003<r\303&\276\346\301 \275\021\033]>\375\263\303=e^\244>i\272\"\275\341\033V\276}\031\220\274\250b\025\276\256\226\327=\271z\236\275\310\304\267>hqh\275\251R\004=\226\243$=\306\273 \275\022_\021=M\013\277<\221)\356\273\006\335\n\276Y\207\243=\264\320z=\343v\t=\031\322\307=l\364\207<\200\254\216\274\264\350<\276ZN\246\275\020\216\326\275N\341\017=z\225I\274{\243\006\276K\311\r\276\202\364\306=\023E\203\275\2567\241=7\2701\275\313#!\275\222?\256\275\331?\316=\330\234\024\276B8\n\274\304\331Q><\'%\276\006/\226\276\ng\276\274\314\246\247=\365\225\333\275\244^\261\275\360\207\033\276\316\031\013>\242\240\031<\222\373\253\274\010\303e\273\256/2\275\004\323\326<\324\2251<\020\032G>Dy\036>\323\266\343=\276\376\371<\376\332\222=\204\2716>\027\314\215<\ry\t=\"\201\244\274\305\202\024\275\371\365\002>\241`\036>\254\026\352\275O>\341\275\200\014\374;\032l\201\274l\021\263<Ab\311=\3368\277=YK\226\276\306\311\n\276\304\206\002\276\241\365\007>\240\035\'\2758\220/\275\004\207\216\276[\035\215<\330\364\335\275o\341\205>T\367U>\240\034\321\274\343\354P=>]\303\274Sj;\276\334\276\246=\241\330\215\275X\035f>\232UO\276\"\315\300=\035\t\001\276{}\207\274\r\\J>\372\333\007\276H\024H>\267\302\177>/\260\014=pXt<\242\3175>ER3>\363n\271=\226\211.\274Y\277g=\232\372\267<\346G\347\274\010\257L>\007\251k\275\212\033\232=\344A\330<\271\271H<\274\002;>\244m\234=Lg:\276\002g\347\272+\230S>zC\363\275\242y\235=\250i\013=\301T\026\276T1\276=w\223$\274\024\321\024>r\205\007\274\260\277w>0\261\240<x0\352=\237\301G\276\327\022p\276?\t`>\224\023S\274\000f\356\275\033\334L\275\037\017\036\276\013\244\214\275\253\014\215>\355\331\006\276V\r\200\274b+\305\274\314\367\001\275u\020\311\275`\004N>)\203\275\275o\325\010\276\254L\010\275E\225\271=\270\343}>\231\237\023\275\217\177Y\2763\032w\274\346%\216>&: \275qR\204\273\002\344\276=,\333\216<\t\267z<\032q\241=}_>\276\220\276\254\275\"\312<\276\3264\207=\241 \240\274c\353\326\274\372n\024\276\304\230\317\275\037\211\021=*\032w\275\342\022d\275\000hG\276\230\3664=\315\212\345\275\006P\001>\204\014\243=\277\322\022\275)\266\315\275\242\346A=\t\256;\276\332\277U>M!\024>Q\036_=\375\276N\275EG>\275\246\304\223\275LX&\276I#\247=/\325G\276\334\252.\276\305%\014\276N\026\002>\354\244\251=\264\257,\276\363Bc\275\232\025\311=Q\324;\274\370vx\275\275\227b\275\034X\227<\235\234;\275\277n\217=\214@z=s\205r>WB\345\275\363s\357=\032A\"\276\314@_\275/\265x\276D\3407=\220\327\265\2742S\302>d6\233>\030\200(=\213\222\317\275\272>\370<7\007\275\275c\006/\276i\331\315;ElN=\302\206\326\275v\201\271=7b\304=\206[!\276\014\241-\276>\210(>\237GS\276\352\224\237<Q\237m\275\034\315\341\275\"\275\242\274\204\no\274\2210Y>r\374o>\2721U>\244Dn>.\274\227<(\352L\276a*-=\356F\002\276\335}\320=+$\337\275\310\271\201;l\264\256\274b\253\003>_\207L\276\006\357\302=0Y}<t5\355\275\202\3514\276\375$)\275C_\307=bf\264\275h\270u<\354U+\275\363\321\004\275\306\367\301=\362u2>\313\362\200=0j >F\tR=\357\276\027\276\333pl\275B\270\271=\376N)=\030\020k\272\236\203\037<\255J\022\276\006]\261\2746\235\037=*w\306\274\001\177T>\323\326F\276\230b<=\345&\002>\314\034\226\276[\347R;\007\256\2129\031C\003=A@\204\276\256\t\365\275!\304\221\2757\'\215\275\370o\\\276;\277\207=r\205\232\274\237\347\320\275I\227\255\274\310\177<=Z\223q\275\027\303\t>\241wN>\201\026\257\275\234\212\356<>4$\276\257.B>\022\227\210\275\n\372\212\275YA\206=\233\005\270={\302\350\275}\377\360<=\235\210\274\2310q\276_U4=+K\245\275\347u\271=\257\2548>\215\353\003=\017\257G\276\216i\032>\376f)<\333f-\275,t:\274\320\203\'\276\305\037]>Q\310U=\323\tB>\267D\\\275\221\3747\274\224\023\224\275\253\020$>A\014*=y\204\361<\332V\271\275\342\307L\276\tp:>\250\341\003\276\311\367\024<\367\274\006=;\274\037>\225\222\n\276\022\217>\275\226\304\371\275j\200\306\275L\3202=\213\000\275=C\353,\276\223\302\342=\326\311\334:\256]\366=Ty\260\274\212/\243\275~9\027<\201o\255;\241Y;\276\206\322{\276\222\306\340\274\341\217\241\275t\205\320\274\320\331+>\\\316\013\276\034\2527=\001\234\000>\266W\223\275J\231\273\275\367:\225\276\355\214d\273\201\200\261\275\306Df=\325\346\227\275\260\356\313\275\035!\276=a\361\363=\277Z\032>\3031\035>\017\027\343\273(?\001\2752\346x\276\025\255\356:\237GE\2765\320\204\275\346U\207\276A\320\263=3j\261<\270A\233\27658\205\276\003\347\020\275_\034\003=q!#\276\247\'\277=\226=s=\263t\t\276\337\340\371=\005\332\033\274\023\352\016\275E\220\033>~Q\207;\324\216\230=\030{W\276\224\377u\274\234t\217\276\033\341\204\275$\232\025\276\204\205\246<\020\207\020=R\324->\245\313\253=\251\344\300=b\257b\275\276\216\364\275\332={=Eo\372=\327\303\262=7*\\>\232\246\327=N\\}==\345\323\275\032$t\275\341\375\216\275\375\2334>\253\354\270>\367\334_\275\024\036 \275.\024!\275\372\216\016\276KU\363\2749\002K=\222\361Q\276\2334\205\275\005\232\260\275\377/I\275\177\362e\276\024SE>H\035\201\275\351f\265\275\344\020\265=E\036\025\275\031g\245=I\217\322=\276\036\034=\214\362\004\276zY\013\276xWC\275{2\222\275\230\017=\276\245\002\334<\236\245E\275\213\024\r=\257\272\t\274u\033\214\275\007\245\245=\223*Y<\320 \355=[\000\251=\326D=\275Y`\273\275;\223O<\263\374\r\276g\024\201>\365\304\331=)*\210\274\007\373\352\272\305\245\336=\203\222q=\253\3320>\277\343a=2\037\211\275\227M\200\276T\265\312=\331\356\351;ES\243=\243sJ>yw`=\303d\356;\214\350)=)P\270>\216\3353\276\033\000,>A][=qX\200\274B\256\313=$\332Z\276\331\030H=\035\026V\275k\325,\276\002\343\220\2757\016 \276\260\215O>f\255\002\276\253\226\016\275\317\303\022>\207\027\376\274+\364\332\275\371\n\'=\331mF\276\243\357(\275\201/\341=)\254\246\275\257%`\276\240Y\272\275\263\270\t\276\237\211\255<\332\343\304\275g\236v>\220a\364\275\337t\327<\253\316(\276\255\334\020>+\n/<\222\230\240<=\213H\276)\214\357<\3335\351\275\341\307\206\274yb =\337\207\006<\000\312\374\275\373J\314\274`\345\342<:/\277=\263\343\252=\365.\233\275?\344F=w\357\203\276o\035\017>\200\005!\275\020\225\334=\007\220\251=TUE\275<\344>=@\031\237>%\255\305<]S\213>\302\266\357\275\237\331\200\275\007\003\031>\316\3235\275\240\312\311=\037Z\250=,jX>\240\242\020\276\230\237\345\274\022g >\21712=\231D\207>x]H\276w-~=5\251\003\276\352P}=,\211/=c\206\211\276\361M7\276\003=&=!\260\207=*\352N\275H\016;<\261TI=)\324\316=\235\320\033>\035p\203\2761\n!=\\\273a\275\214`\364<3]x\274l8\236=-\352\313\275M|\213\273\232q\236\274\230V\002=\347\312\232=\n\324A\276n$\026>\362Q/\276;<X\275:3\030=f\332\200=E\376\017>\217\2044>\335o\242\275\000\346\204=\374\3606>\022b\210\275\301\323\214\273\032`\007>\223\327\014=\014\313\234\275\220z\206\275Xf\214>\227\025_>\007\272\262=\005\320\006<%\362\000>7\033\311\275e\244\204\275\031\017\243\275\2715!\275X\361\241\275\213S\201=me\246=4\253v=\204^\327\275\010\317\262<|\022\036>\271o-\276Q\307/\275\302\262%\274\030\237C>\374\230\376\274[|\337;\014|\201<L\3579\275\266\244\312=o\000\313\275\273m\031>\315\005\026>\2031\374\272\345\205\335=\357\243\303\275\243\3721;\300\rP\275\344\325h\275\262\324\205<I\254\243\275\264\225T\276\312\266\303=\351\341:\274.\036z<\312N\\\275\221M\220\275\367\231==(\376\243=52\'\275i\311\347=[`(<\037\352\327>\301F\r>\324\253c=\333\031%\276\001#\263=\204\313w\275\0333\r=\366i\003\276\331\221\214>\350Q1\276R\2128\274\177{D>\336VI>\264\224J\276\213-\337\275\277\267\013\276\212\2352>\224\333\256=\337L\303<]\245\214\275\036\345\306=\204\356\013>\215Ds>\2553%\275~\277>>9\252\327\275\007\241\007\275~\345R\276\246\3736\275\210V\363\275\260NK>)\365\032\276\355\035g>fv%>\305m\364\274\016y\026\276\301\357\262=\"\365\247=\003\225\330\273\333$\030\276#\301\037>\263\346\205\273\003\275\026>\351b\006\276<\226J>=u\336\275n\376\223<\322L\033>\370\235u>s\364\020\276\311a\356=`\031\213\275\356Q^<\016\000\247<\037\316\235\275\'\226\347\275\346\203&\275\030\213\323;I\tm>\226\324\237\275\3704\344=4\312\002>\n4\365=d\025\'>7&*\275\362\251B>:`\257=~y;<\023\232@\275\201$\r>\005#e\2758\265@\276\206\336.\275<+\354\275x\035\211\275/\356\246\274\304\026>;;\231\226=\376\272\222<\223h>>\247\\g\276b\304$<N\217\234;=\000\033=\254L\276\275s\n#=\036\321:>`C\367<U\227\213=\342\262\030\272p\341\035\276Jyj\275\305\316\272\275\251\317\n\276S$&>\020F\227\275G\271\021>\006\273\021>\2768\224\275\243\t\301\275D\273!<#U\211=\325v\313\275D\354&\276\221\302S=\340\014\034\274\026K\001\275\311\2466\276Hi5\276\314\270\277>\2139@>\224Z\344\275rNc=\365}\354;\016\010&=\032\034\347=HM4\276\352}\303=\023\r(\276\204\227\240=\023v\340\275{\324\017=\376-\255=\264\350\266\275\035\275<\275\372\026\271<\005T\312=j[\372=\207\373\016>`9\022>\337W\225\275\025\326\014=\253\247\016>\255\357\\>\354\361g\276\313\246\304=^\361\335\274\016\027`>\353\360\013>}\304B>\233\r\252\274!\246e\275\2021\303\274=VE>\370\300\211=:\373\346:\214\271\260\276\203\263\210\275\264\221\212=\004*)>\376\312\247=z\240\320\275\366\034\000\276\323\013^\275\242|\251<\023\244\202\271W\010\343;\342\032\232>\250\rQ>{\257\307=\211\340\322=h\'Q\276\350\020\371=\030PE>I\226{=\032\264H>\240\305s\274l&\364\274\240\002\360\275\332\025\374\273FE\037\276\325)\000\276\270\322\035\275 \363\232>\213O\222=]8\005>\034Ob\276\006\206\333\275\217p\375=bx\017=\025\301b\276\211\001\242\275T\357q=\346\036\225=4\277\257=\024z\021=\313\267\361<`\304\240>\223\325\016\275\n\264\347=\032t\005\275\2456\017\275\304\370c\275\016\332\010>\341\207\275=\t\252\220\275\220\343\r\276\273[\n\276tH\024\276C\267\306;\357\204\033\276\3233\237\276\253\224\322\2729\320\353\275\374\344\003=`\300P=x\206\227\276d\373\354\275Dp\022:\352U \276R\025\215\2745\021r=;\3003\275\024\351|>\033R\013=\236\202\r>p[\374\275~\203\211\275\312\345\201<+\020/\276t\016\020\275*3\025>\321Hs\276\245&\203\276s\230*>Ro\367=\3148\001\276\025wX;\250\026\236=\211\357\010>\031\275\254\275U_\315\273\344\t\347\274\370\000\243\275 \316\017\275\277\360U\275G\300\233=\271\177\206\275\366o\021>y\035\343;\224\216\010\275r(H=9\032\313=\313\\`=\221-\300;\261\261\304\275h\351\215\274O\0339=\304\304\353<\342\024p>\224\260\350\275\016[\032\275\024\355m>\313\005t<\031\216\366\275\246\206h\276^E\271=\200D\021>X\2721\276)\233,\274\0238\317=\367Q\270<\322N\261=\221\202\256=\356\266\034\276\"4\241=\201\273\037\276;]6\276\330\2601\276\270 \240\275\363\356\240\2750$o\275g\256\006>[\200\337\275u\252\220\275\260k\231\275\364\307+=]V(>6\\\211>\241\253=\273\177\265[\276\035\253m=\2344R\275)i\306\275\332\320\031>\260_\222\275\247]\007\276v;\005\2764=_:\376v\242=%Y\227>,\266w\275\322\224\306\274,9|\274\356\344\224\276D\032=\276\344\202\326\273\022hi>\3436\020>\033!\"=\226E+=\326\377\216\275\262\232+=\215\265\274\275\347\370\'>\222\367\023=\241\274g<\275\004\266:\241\274V\276t\376\232\2748U\210=JX\007\275\372\316\304\275\273\031\271\275j\341\003\275\025\346;\275\021\227B<\260\t\240\275*\211I\275d\034\032\275_+:=\320\312\203=mwL>\271\017\235=u;\351\275A\277\346=9\302\221=\351\365S\276\251(]>\245\235\t\276oVC\275\245\211\341\274\023\2371\276iQ7\275\225i\376<-\t\031\276\005\270\026=&\371\255\274\256Q\262\275 \241Y>\177\031\n>\305>\237=\342\204\002\276\277\260\"\276\343j\202<\257G\207\274\023F?\276\337&\001\276mP\335\274\374\2657\275\263#\210\275P\252\014\276~\240\220\276D\351m\274\361\331N>\257\216\321\275MLB>&\177Z=A\177N\276\177Y\350<N#r>N\0042\275\2162/\276C\304\005>\232\202\353\274.A\254\276\254\253\222=\272\266\026\276\224\001\031;L\374\307\275\373(1\275e\031\257\275N[\007>\005\265\230=\207S\262=\036G\024>B\304z\273\3461\'==\243,\276\217\340\247\275\222a\234=+\230\200=\021\245\230>W\3425\275\342\237\217<\3436\006>\333\334\032\276\210\3229\275K\211\316\275q?\267\275(\3512\2757.H=\333\003\220\274o\351\036\276{y\200<\223\360\357\275\260\020\251=\320\374\273\274\315\357[<)6E\276\010\351\225:\236\303X>J^N\274A\350\214\275\210y\207\275M](=QeT=\2008\217>\317\274\257<6>T\276\326\212\356;\'\363\336=\374IG\276\347W\036>\323\231\025>\231X\031\276`f\027>_\372\343\275\235\203!\2752\\\371\273(\303\225>\317(\237\275\005\017\226=!n\214=\273\252\215\276\010FI>\352\376\304\274\271\214\224\275l!\372<\211\350\304=rc\003\276\224\024\223<8\2736<\310\220L=\210\206g;V\336\177\276\353lQ\275yq\336=+\301\301=\037h[=(\265]>\363r\246=\242\007\330\275\022\213a>`\263/=\323\251\002>\273\343\267=\233\362\035\275`Q%\276\002\313E\275H~N>?-\003>6\2335>U\373\201=\n\203\250\275b\311\356=\376x4>\257\216\331=\234\202\257\273J\300:=\025\303\002> &\021>\253S\265<\354\033\302\275\303r\224<\272\337\037\275z\t3\276Y\342V<!x\030>\032\366!\276\263\306\206\276\344p\341\275U\325\341=I\271b=\343\247\t\276\n\246\252\275dL>\274\333\232\002\276\017\321_>\213\213\021\276\\\217\345\274\006\335(\275\255E\234\275\343\266\t\275(\344\006>\224\260\210<\316W?>J\204q\275np\034\276WYv\276\226\341\336=q\0354\275\002\232H=~N\203=\024Ai\2754\371\334\275l/E=)FX\276\205\211%=\343\361\034>\250\261\364\273\333\n\302;\213\031\345=\236\306\371<\232i\020\275)\204\005\276\222Uh=\\\017A\276TJ;>\221\3373\275\317\3039=\223\253\361\274\352\271\251>\001\231F=\363\250.>\374\325x=\307\230~\275\253\341\022>\357T\233\275)\220\215\274o\255\332=!\335\">\032)\221\275~\257\031\276~[\013\276\351W\370\274F\316\236=\210\327\210>o:T=~\356\004\276\177j\333=\177\220\024\276\347W\340\275\351+\351<\025\220\306\275@\356\266\2750j\373=\034bx\276-\361\017\276(\365\223\2748\013\203\276\255\0001\276\334\315\206=\302\035\371\275jO\302\275\352k\270;%\321\267\275S\327\323=)\273\270=\275 D=#\372\232\274\241;>\276K\370n>&\014\030>\354k\373\275\272\352\236\275\231\243,>R\030\206\275C\340\305\275=\003M=\006\006\272<\201\030]\276\306J\365=\024\\8\276\t\244 \276\'e*=\302$\211=\227\246\'\275v8\177\276\240\237\225=\021\177)\275%\212\305\274\220w%>\232p\t<!\302_\275\005\027\223<K\"\225\275\301n\305\273\020\026\234\275\337\030\327\275\312\250\266=yQ\315\275\376FZ\275\332\372{\274k\331K\275\247 \353\275\300\213\370=\244>>;\036\266+>b\275X<\325\256&>\223\240e>X\272\203=\223.<>\317F\371\275kt\020>F\215u;\267\177\356\275\217(/>\':\214\276\312G\213\275\022(\270\274jp\374\275\305I\013>[L\215=\340\302g\275<\344\352=M>\210\276\356N\220>\370\235\263\275>Y\375\274\201\014\014\275M\221\262=w=\027\276\201\346\256\274\333\0334>\217Y\026\274\360~\335\275%Z\245\275\340r`=}\367\323\275\2315\200\275Y\275E\276n)D<0Ek\276\245\246\227=I\265\342;\027z\240\273\240\357,>\027\2432>\250c\307\275ay\206\273\304\230I>\276\004\224\275\255w\211\276\266M\016\274p\213\262=M\213K=\005q+\275\235\035\327<+\0139>\270\177\272\276U\031u>\255\241D\276>f7\276\263\315\030\276\344\"^>g\276\215<\007=)\276\033\274\000\276\344\221\002\276/^\226\275\036\257\202\275\003\354[=:\000\321\275\270\222C=\020\324\253\274\260\330\234<\024\205\357;\027\307\322=\250\0055=h]$>\245K\006\276\372\326T\275\\<\250\275\242\030\247=\362y\366=\034i\270\275\001\331\243=\317\233\267\274T\267\245\275\255E\337\273\262\031\365=\354\277\023\276\307\225\037>\314\226\326<\247\361C\275\025\373\366\275\375\374\320=b%\004>\t\335\356\272$z\263\275\300h\275;\255\375\242=\326\013\013\275\214\310\003\276\237\201\325\275 \033\343<|P\347=\215\335\274\275wsN\276\244U\332\275YQ\230=V,\276\273\257*\006>j\223M\2769\177\305\274H\353\331\274\230b\177>\222\363\n\276-\316\220<\226p\212\275\366\264,\276\236\006[\274\227\032\246>\372\212\376=\250\025\326<\312\320\275=\350v+=\3023j\276\334\244\215\275P7N>(0&\275\222\242\234\275\310\023\342<\234q\250;\203\314\273=\324\325\206>:R\006\276\255\323\310\275\212.z\275\213\236\n\276\362\374\215=\336\326\027>\271\262\251>\337P\333<\266Vg>\3511\254=\370\341S>e\224\024\276&\273\010>k\312\206=\330S\203=v!\020\275Q\310\331\275\014F\007>\341\001\241\275\207c\210\274\357|\024>>\270\221\275\324\223\t>>\2431>\364/\242=|\260\301=\014\026\317\275\266\271.9\"C]\275\n\'\224\276\374\226\224=\377t\003>\220w\004\276\242\271\002=?\300\016\276q8u=\300c\223\275\357q==\237K\017\276\244\033\207=]\307C=/\370\353\275f0l=\220Tv=f;G>\026\274\023\276\303\346\247=\333\346\235=\245\nI=\305#\344\275|\232\r\275!\206f=\2559i\275\000}E\276|\263=\274c))\276hpj=\246q0=\363\374{\2765w?=u\214\221\274C\345\207\273\316)\256\2743\006\200=G\013\340=\034\313l>\262\016\231<\216\234\025>\3367\030>\216=`>\022\346\230\274\263A\206>[l\017\275/*\215<\354\211\377=\361D\275\275h\340\371\275\326\336\021>/%Y=\216\014\007\276\263\342\265=\206cN\276\255\305n>\t\212\235\275\341\204\213=\303VD\276B\'y\276\2709\005\2767\361\261=\307\315\270\274\312\241\275=\356r\240=\222\244\320=\215\376\215\274\252k\256=B\330\201<\253\216\205\275Z\377\033\276\221h\345\275\310\302\201=\021\376S\275\353\016\211=4\372\312\275\3441\314\275\234\263\320\275w\034/>+\237\271\274\325\247\361\275\225b\"\275kuK\276I.\252=\273\t\320>\3414r>\321k\230\275\330\265\332\275\r\244\211=N\332\345=x\0147\276\263\367\345\275~\370\252\275\356;\006\276\302\303\004=Z\255\225=\237r\203\275\341O\023>\364\222\234\275\210KH>\r\034\275<xJj>\245j\250<z\264)>4\303~=b)\021>\033Q\366\275\315yx>\322N\004;\3778[=\253\257\311<\246\222\330=\006\214x\275\342\000E\276_z\010=\016\325\206\276\322\244\321=\263\304\254\275.\251\214\275p\230\202\275\271\251,=hF\210=\203\035S>\023\370%<\311\313$\276\363\026\035>\216r\247=\256(2\276\3048\264=\322\251o\275\221\206~\275-\'\255\275\234\354q=\024\312\331\275\234g\020>^\255\321=d\252~<\345\346\271=A\365u\274\204Z\372=U\350\303\273R\334=\276q\321\213\272\322\234}>\223\226\313\274\233$\025>\234\327-\276\026r\">>\202w>w\032\242=\255\000\312\275~\376+\275M2u>\211f\334\275G\334\271=\360<Y>/\003\207\276\216\344\034<\"\325\326<\0373\305=\331\367\302\275m\017\021>\272+7\275\323$\243=\303\250u\275\300X\235=\342\022\302:\364\332\032\276\022k`\276\340 \263=]\236P\276\341\343i\275\215\017\200\275h\245:<p\2714\276\256\246\356\275E\0071=\\\352\302==9\310\275\034\271:\2756_\200<\352A\"\275\340\202\234\275\006\r\343=\026\0032\275}f\201>;DN\275\363L\010>\327\345\236\275\313\377\010>_,3>\237\037}\270\'~\222\275\320\3447>\262q\021<bjT>\312 =\276\320\365\201\274\004\302\277=\032\376\n>\214\2504:\306\005J=\032\351\220\275\253\036d\276_\006\034<,\222R>\237\203\037\275Tj\037>\\\2244\275l\305<\276\252\324\215\275BT\325=\216f\240\275\305\205\320=M\370a\275\316\236@\276\317\010\364\275\361\322\325<\014\267/\275dIv=\222\"\024\276\227\226p>\226p\240=j\357\002\276\371\305\010\276L\242D=\354ut>p\310\217=\301\213\341=n\267%\276c9\276;\336N\202\276RF\214=\0358\276=\337=\223=\321\027\245\275\236(\224\2751\237\271\275\214A\336=\ty\241\276\345*\373\274\341\232\027\275R\004T>\230\254\r\276\230e\251=\031<,>\000\300\317=\036\361!>\216u_=\252\252\274=\355l\323=7\326\317=\031\301\244=\305\033\\\274?\266\246<\314\327\n=\370\370\221=R\016^>\336\021\221=:#\220\275(\"\217=\223\276\227\274\363l#\276-\336\365\274\3438\017>\247\361\254\273\306\026^\275\021\276s<\373\232F\275QhD=\303\253\265\274,\322\343<\365\313m=\311\033\003>\322\262\371=\001`H>5\204\202<w\313\200\276~\316\217\275\202\376\210\275}K\375=y\352\273=%\036\302\275&\305>\275\370\t\"\275\302\337\203\275]\037\235<d3\n\2768#\303=\010\203k>\326\254\320\275V>\201=\245\221\004\276\327W\322=\343N\000\276g%\246\273\276\273U>\270R\352<p\327\334\2752\345\032=\242\1777\276\214e\031\276\276!\201>\035\257\\\276C)}>\010[\005>_\220a\275\300\252a\276N\227\222<\037r\200=]\324\\\276T\017\270\275S\320\007=\313/\014\276_G\004=)\016!\275^\343\360=\300/\367\275\223\346O>\007^\206=\240<\211\274\310R*=\322\316N\275\032\311\006<\242T\312<\346\261E=\234.\240>\220\253\270\275jR\245\275 K\177\275\361e\207\276\354-A\275DB\332\273\0326K=\261\370l=+\2644\274\336hJ>\215\316c\276\206\254G>NnH=\246\177\375\275L\334\306\275\230\331\001=1*\353=\311\316\343\275\275\276@>\264\005d\275\010\322\241=\tgO\275\231E\030=\032\204\234\275_\262\255=8o\304\275\357\363\t\276\246i}=L\276k=l\270\206\275\343\360\266>\262&\331:\302kJ<\037)A\276g\021H\2749\227\323=y\217\253\275m\335X\275\264wC>\314\210\200=\245\207\r\273qe\000\276,b7\274U\010\204=\":\207>V\260Q\274\r\247\306\2745\223\376=0\373\203\276\366]-=\007\271\216=\215\006\346=<m8\275\253\025[=\232\247\037;\214\312m=[\313i\276`Y\316>\\\004\002\276\250\342\014>\tJ\256\274\036\354\014>%\177\027>RC\241\274\251\216\254=\225\231\002>\315\302\210>\253\023\227\273\203\262\321=\366n\313=\004F=\273\267\253\024\276%\221\267=\235\221p\275\025\206\031\275\216\360\265<\247\320\251=\2743$<\021\035V\275i\\<>\343oy>\274\215\207\272\307P\262\275\367\232\034\276\3062\211>\341\"3=\224\345\364\275\3672\374\275\354=\006>\262f\300\275M\257p=r\327\'\275V\3279=t\017\035>\npJ<{&\330\275\364\277\'\2754\010\267\275\240\322Y<\336\343N>\305Yt\275}G$\274m\211\024>\256L\250<M\223\256;BM1\275ew\376\275\233\365\374\275\261\344\251\2753\325:>\260kw=0@\233\276\375\202\204\275\222\'g="
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 30
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc0/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc0/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/MatMul"
      op: "MatMul"
      input: "oldpi/model/flatten/Reshape"
      input: "oldpi/model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc0/add"
      op: "Add"
      input: "oldpi/model/vf_fc0/MatMul"
      input: "oldpi/model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_1"
      op: "Tanh"
      input: "oldpi/model/vf_fc0/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
            tensor_content: "\312\274)>\0134\252=\257\206\007\276\010E]>OF\335\275\377\332\337<(\330\270\275e\037:=\235C\237\275?\223\023\276\334\356\">\\\270i\275\333)\005\275\036\314\244\275\016d\275<\r\020>\275\271)B\276d-\204=\301\275D\275\t\355f\276\200\260\351\275\212\205n\275\005\370$=\222\345\233\275\013\210\026>g\000\216=\357\201\017=o\2522\276-\347\000\276\177m0\276u\357]\276\205\242\014\276%\322J=\316\302\265\275\276k<=cg3\276m\357\014\276\000@u\275v\005j\275wR\204\276$!x\275\253\023\016=\362\367\260\274c\245\t>=j\361\275:_\340\2749\340>\276\243\224\224;\276\000\304;m\322A>\353E\326\274U\322\277\275\337@\031\276\356\222\305<*R\266<\353\356e=#^$\276\212\001\245\275hx\344\274\377T\217<\356\364\020=\357\370\002\276\354\230\336=\'\017\000\276\244*)\275?\017!=\275\333K\276<\247\364;\rS\272\274>\266M\275\022\233\241=\rSK\2753y\033\274\270H.>A\3375\275I\373\014\276\307\2425=p\353h\275\355\032P\275R\222\347=\370\006\264;\220{[=\261\031\274\275\022\033\310\275\002\n\210=7P\355\275\"zn\276! \375\275\220\177\250\275I\331Z=\350\365\300\272\'L\300=\324?&>\370\311\333\273\336\225f=\267\021\333\274\333\021\355=9\363\315\275\274f\001\276\t\231\002\274\343\267\273\275\2659\037\275^\214x\273\242W<\274\333S\225\276\355\375\235<X\214\363=\177\024\220\274\261\035\304=\021\271\230=\334\001\026>$6\231=\256\325j\276\200\341\262\274_\336d\275\217\244\034\274\304W\315=Q\320\255=\315\207\262=\266\321>\276\320\327\335\275\314\273b\276\323F\341=\034o\311=\241\370\036>\027\314V<\225\000\277\274\235k\032>C@<>m\032\013>\204\316\217=)S\220=\305\231\332=\265\330\241\276l:T>\343k\242\275 T3\276{\372S=\367N\222=.e\376\275NQV\275[\030\003\276U\363\023=\237l\031>d\215\017\274<a\307\275\206\272\236\275M\001 \276\245J\327<\356f\r>\354\324\232\275h+\322<\337\242\036>Fs\302\275\312\224\260=\351\320\347<Z\204f\276\237\322\033>m\023&>\243\216=>\233\374\266\275\000\004\360=\225\311(=B|\232=\235\375\215=\351\267D\276\322\276g\276 _\"\276\210\240q\275Y\245z\275$\025z\274\034\013\367\275~\253I>1M\237\274\322\274\356=5\177I<l\377B<\031\256\246;\037\271\020\276h9C=\233\302\204\275ea~\275zV\333=\217\343m\276EV\205\275L\000\256=\336&\244<7Z\030>\\\257\215\276bT\242\275w\3604>\337\322G\276D\211<\276C\301$>\230\336!\276\031\017\344\275<_\300\275pC^\275\321\364\027\275f\370[>\267hp\275F$\343<\357|\234\273\202\223\232<\314\014\345\275%9\'\275d\2430\276\222\256\202\275\326\305\252=n[\276\274\006>5=[\225=\275a\354\376\274c\013\006<]}\337\274:\001 \276\255\232\306=\233\036L=0\013\207=~sT\275\313\207\323<iQJ\276[\212f\276*\352~\275\300\244;\275\177,\272;\253\330\375\274\024\201s\276\272\342g><\245\002\275\321\223\237=\306Yk\276\321\202\270\275D\360\211\275\354\304%\275\360\304d\276|\252\006>\222\351\251\274\350d8>\334\372\272\275\322\312\314=@X\216=\023\363\310=\352\360\216\275\210\266\352\274\226\336\263\275C4\346<2V\302\275\264\321\347\274/C1>\005x\002\276\251\352\013>\342\207\017>\254\370,>\036\234\212=\335\233B\274\343\034!>\246?>\275_8\207=\315\223\032>Z\221\231\275P\273\333;\026Cs=\346+\300=\027\335V=iTZ=\263l\001=l(\177\276\001\367\343\273\010\251U<\237,\341\275@u\310=:\271\354\275#\036\300\2750\3234>t\256b>\216)p=\274dk<\266\2434\275uV\304=\001S\203=A\205(\275\230B\002\276\202_\000=\376d{>\360\333\321=!\n5=\316d\023\276F\256\016\276\014\303\025={e\'=K\356:\276}\310\275\275\376!\223;\214\244/\276;\361\020\276\035[\035>\367#\234\276\342\014\235\275\007_\013>\220I-\276\221e\010\276#*9\275\326\361\001\274\033\245\005>2>\375<FZG\276p=\224\275\346\275\315\274`\321\215\275\304\006p\275\244n\273=\211\300_>\356\272#\274\246\227,\276w`\237=\253\t\267\275j\343^\273\300w\024>X\200\222=\302%\307\275\205\r\375<\346\266\322=n\020\020\276$\347\'>$G\362\275\361Z\003\275B\360\227>>\320A<\t\226\215>\270\0100>\307\245h\275Y\272b\276\326\276V>\270=\234=\366u`\275\246\354\355\274\220\243\336<a\355X>_\251h>\300\\\266=\205\361\303<\237\312\377=\265\315\246\275\037\000h\276\364\264K=_\331\001\276\006\034\010\2758\371\026\276\240\353V\275\006Q\203=5(\n\275\321P\307\274\022pM=\25068\276F\2654>\306\327\314=B\330^\276\0258\233;\007\206\310\274\200\266\337\275\273\\g\276f$\273<\010*2\274\377;\022\276\2138\003>u\2609>\323& <\346\0327>\341S\242\275\352\331\371=.ho>\313\214\256\2756\030\030\275*h\221=\255\2601>\223\312\034\275\301\257\270\275\033t\037=\270:\225\275t\205\305<\006dG>\226\344\007\275\177~\004>\224\026\331=\005\204\014=Tb\343=n}S\275\355\264K\276\340\225?;b&<\275\360\335\217>\246\004w>\363\n\361=\233\346Q=\307,\263\273P\267\216\274f\264\330=Y\217i=~\002\304\274z\370P\275\362,\350>\255\007h>\"\216\220\274\270\3453\276\n&\031\276\304\365\365=Y\024\270\275\216\255\332\274:\213\026\275\343\254(\276y\257r=\213u\203\275\243<\350<\'G\231\275b \033=\025n\256=5\221D\275AW\"\276\365\233>>9!@\275L\2463=\032\222\310=\345\305\177\274@9\035\276[X\332=\337\200I>z\206\320:J\233\207\274h\3615=\320\345\262\274F\225\367=%\016\010\276\007\260\250\275\373(V<\241J#>G\254%\276^\032/\276w\273J\275\203\022\021\276b=\235\276\323\324&\275m\323\204<6\334\r>9\232\363=\'t\374=\336\320\216=\177\303\206<\352*I=\020`\204>e\204!>\201\036\244=\374H<>\226\033\222\275\261~<\276\307\022\033\276\351\314\320=\t\312\323\275\354i\367=S\354\363\275\020\354\223>\'\033\306\273\347\276\225\276\257iJ\276\277\210\033\275\301\033V>\203\230\317\275g\266\233=Q\251\267<\341\t\251\275\007_j\276\023\272\034>\275\300\216\275 \376\333\274WQ\245\274\306\363O=\177\025\231<J\034\373=\252\267\214=\253\325\271\275\206i\227=*\206\302\275\206\202{>7\224i=\232\000\264\274\266N\346<\342\364\314\275\210\257\001>\2469\257>n\013\233=\260\n\317=,O@\276\312<\266=\207\237\377<Ou\250>G\351\266<cn\023\276\277U\025\275\241\353\207>\217\271b=\345\351\236>=\336\316\275\362\334\236<\003\300P>6Q\001\276\321\3212=\\\206\234\274\334W\373\275T\031+<\303&{=;\347=>6\020Y=\357\n\224\2745~\333=\237\332%>Zw>\276}\254{\275V\232}\275`\216\274=*\320\375\275\370\316\313<w\344\267\275\361\271\234\275#\335\000<\314m>\276Cj\300\275\375\207\226\274<\373\300\274#f\246\275\306O\340:\037\2721>N:\252=\271\335N>tG\246\275\255\362\225=&\242\332\275\327\372\313=\376\337D\275\350\346$<\327\373\315\275\323x\333=\033F\213\275\362\241\013\275\353\027H>\375\341%\276\243T\030<\225(#=\331\310\">\265\005\244\275\003\336\311\275\215\202\t>5\t\257>\353\2072\276S\207,=\254\342\240\275\003\201Y=\304\200W=\347\301\222=\027\322%=\235I\313\274\233\032\020\276\374\005.<\032\264E\275\372\324\315=7\313\364\2751?\020>\223\000\272\275\303n\357\274\010\321s=\245,\363=\311D\017\276\266\351\225=\tpQ\274\365\337_>gg\235\275\003\326\377<{=\236\275\306\364\202\275\300o\n=8k\244\275\365\004\022\276<\t2\275\356?\324=\306\010\372;\037\3346<\344\261\023>\204\316,\276\225xg=\250=u>\266\330\204>\244\232\222=,z%=cm\211\275b_\033\275\354\311\210>\276\313\217>\354\260\266\275F\303\245\276<2\307=Ky\222=\237\353\220<\273\341-\276\321{\210=\243(M\275\336\3214\276\372\203\331\275\231\341\022=\335vB<\305\361\372=\302B|=!m\027\276\253\353\371<\013\225\324=\323:\254\275\034\"\300<\305~\000>h\242\307=\274\177\323\274\337U\004>\260\256Z=\250\243\027=\363_\032>h\225\236\276\320\005\227\273T\342\331\274\317\254\003\276\211T\257<\003z\207=\2200\204>\"]A=\372\212\351=%\000\226\275\244q\250=\373C\212\275C\210\274\275\343Me=\315>\006\276*[\031\275\212\215\324\275\275\201\262\275&\326\245\275\026yH\274\212x\034=\rc\331=Q\215\316\275\335>3\276\200\340[\275\322\314\245\275\337Z\317<0QM>z\254\273=\262\326\373=_\335Q=\202\253\200>\355\201\333\274\374\301\327\275\205O\325<\022\017\305=\0350\367<\321u\371=x\247p=\223<\244<\034R\265>r!\034\276\374\232\\\276`\307A>.\364\316<\023\323\254=l\257\362=87k\275\221w\252\275\032D|>q\256\271=\220\035a\276q\261r>\312\260I\275\356\025\253=\326!\263=\262\207E\276\201\017P\275\321\353\020\274\371Y\350\275\301;;\276\367\314\302>\023f\247\275>\2673\274\350t\305<Gd]\275;\022V\274N^\034=L.z\275\023\250\310=8\202;=\367\216\006\2762\215\217\275\010\270\237>\001\340;\276~\223\242:\221\306B<\317\016\010>zw\225=\326\220V>\236\251\275\274\253\'g\276\010c\006>OG^=\254\316\221\273\204o\235=\236\243\033\275\217T\'>\361\343$=\300]\207<\'\0179\276\025m\211\275L\r\231\275\036\010\304=U\207\313\275$\242B=r\304\362\275Z[\021>Y\205S\275\222\214o>V\021j\276;\220\010=\301S,>S\300\252\275\225\205\320\275\324\206J\276\0266\341=\036P\016\276\007w\000>\244\355\275<\222\323\031>B\243\007\276\356J\233<\316\363\346\274\207\317\002>\267ig\276\236-z<\330\0364=\301\203\340=X\230=\276\0061\221>\3556\256<A\343\227=\270\363\007<\243\224\031>,\2446>\177\275\254<\227\310\247=\326\230\215\274Y}\206=\034\014W\274\331R_<\2308@\276\221H/=\350\003c>\256=e\276\003\342\232\274\313\330\030=\277\004T\274&\323^=\025Z;\275\001\234\266\2759=\244\275\254~?\276\3458\200\276\324\'\024=\024\305\356<\224w\252\275\210t=<\2073\022>\236V(>\315\310d=\223\017\202\276\274\2532\275\247\231\216=h\244S\276e\274\275<\223L\020\275\2534R=\321\316\037>\272T\211\2755\372\315\274\254\370\373=\342\260N>\014\304\311\272l\324r\2759A\225=\225\343j\276\343\177\215=\376\034F\275\320\372j\272?\363\306=\005\020A\276:\001\235>\tB\013\275\'\356\201\276\024\221\r<\237q0\276\032B\212\275+6\316\273\303B\036>\230\007\361=\356\376\377\275\317\212\000=.\331\345\275\370\223T\276j\370L\276\247\3733>JW\331\275\216\3346\276\327%\373\2751\343\000\2764\271\243\275z\003=>g\276\317=\256\244#>\376\334\032<=\204\022=|\255\207\275\233?\032>\004\233\213=\033\323\327\275\005\357f\276;X^>\nv\026>b6s=J\375\177\276\341v;=,\320\315=\247\241\340=^\226\372<I\337\226;\354\226K>\001\272\242\275a\2171\276cUT=\205\\k\275\237}\350\275\332\006\222=\325\322\241=.\373\343\275\2110\234=m\371\215<V>\202\274`\020\326\275v\245\205=y*\021\276\351\236e\275\002\270g\275m\365\314\275\'\303\270=|\365o>s\207\272\275\362`\207\275\353\222/=,\233,>T\230\370=N\232\276=cw*\275\021\216\246\274\3265\311\275\345\036#>\017@\207\275C\323*\275:\267\253=k\214\234<\211+\264\274,%n\275\304c\035=Zl\211\276\367\013\010\276\352\215\201<w\377\340=1\375G=vGX\274F\252,=\232\273\245\276\326c\356<\252\216\002\275\305d\027>\253\303i\275h\365u==\310\036>\r\253\020>\341q\002\276\342\215\n>>\304\254\276M<h\276\000\316\365\274\300$T\276\367\355\306\275\017{\276=\346!\200<N\316V<\343\337\244\275\230FG>e\007{>k\316\346=\037|\202=uf\273=\367\372\325=\0264]\276\371$\n\274\021\217v\276\200\350\204\275\336\242\033\276\375\'\007\275g\375R\2758\264\352\274A\321U;\361\253\213\273\316\365\022\276&\026\312\276v\312\010\276uX\367\275 \325\372<p\316\267=\346\271j\274,\3270=2#\016;\266\212&>U\346,\276]>m\276[\257\t=\214\325\324=\212R\t\275\223\326\257<J\2609\275?2p=I\177C\276\243\212\037=\266\316)\276\221NC\275\247G\276\275\236Pb\276\"7\221=1\323\260:\270E\030\276\327\2340=\0146c\276)2\365=\261u4\275\332]\335=\354\252\225>\236\355\336\275.&\260\275\255\267\252=\033\030\244=\303C\304=\363\242\210=\301$w\275\332\203\365\275\200\361~>L\004\013>:\212\376=\321\220b\276.\257\332\274>\262\036\2755hm\275Vkf=\257t\n>\350\331a\275\t\312\n\276b\021\204=\307\2276\276j}!\276\352\271n=\316\346\272=\374\036\035=!hA>m_\036\276\350\177\257>\242U\035\276/\254\001\276,\352\247<\364\200\274=7\231\227\274\036Z\256\275Y\345\351=uqR>\356\200\240=C\207\314<\375\0166\276\rp\003>\026\262\372\2757\227\275=8b~\274t\243\027\275\266\347#>\343Gj\275\214\236\211\276\243\016\331\275$r7\276qq\005>\030$\347\275#C4=\360;\210\275\031S\000\276h\333g\276\027\230:\276\010\027\352\275[g\350= \314\260\274\342}\264\275$\271Z\275\325U\314\274|\014\006>\te\356=\321(\\\276\033l\210=\3262\022=\343\203\037\276\245\026\347\275\213\231\027\275+\376\211=\021\3032\275\311PN=w\no=\\x/\276MV\257\274:\311\347<\334\260\320\275"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 8
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/pi_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 8
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/pi_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh"
      input: "oldpi/model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi_fc1/add"
      op: "Add"
      input: "oldpi/model/pi_fc1/MatMul"
      input: "oldpi/model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_2"
      op: "Tanh"
      input: "oldpi/model/pi_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
            tensor_content: "_a\000\276\007^&>O\366\323=\346\022g=\207\350\342\275\035]\322\274XS\000>\002\262\225>\177\321\231;6&2\275\361\376\207\276\276\001\303<R[\023\276\367!\231\275~\230\360\275\353G\266\274\202),\276\027;e\274\252\255\347<\215\374\264<\020\241\251<\n\027-\276\3516\375<4&\031\276\263\315\330\275\315\'[=G\370\212=\256\223<>$\200\024\275\207Z\001\276\247\227f\276\024\005\376\274a\021\001>i3O\275F\2341>\273\000\013>\032\006\231=\250d\314\274\235\242Q=\374\262\311=\000\365\236\275\016\211l=\321+\367\275\016\361l>\201\331`\275Y\215*=\357\200\231\275\265\207\273=\270\211\340<\037\303\327\272\007J\214\276\341\026\276=\021\223\006>\366\032\336=\223}\360=8\326@\276xR\262\275\004\356\263=\032VT\275\275\347\343=\005\236G;\t\006\274\274\307\233\022>K\267\314=\232\272(=\356\2320\274\217^\n>4\251n>\371\324\214\275\\\3369\275J\311\207;C\265a=\362/\356<\244\254\255<\235\270\030\276\342\335\303\275]\311\274=\245\211u=<\313\301\275\262]8\276\224\263\004>\337\254W>\231h\276\275\310k\335\275\364\236.\276\316\320\202\276\353|\000>\002\327\275>2w\224=\313S\373<\312\345+\276\026\020\220=e\004\363=\276\177a>\rG2\276<\356\245\275/x0>\242\213\367=5\363\335\275\250\242(=P#\223\274\t<+>\226G,\276]\364T=4\271\r>\t\301 >\342\223\003>\364\204\331<\265\254\233=\337t\017>\261\311\207>\"/\000\276\200{\242;><x\276<\351/;\3564\252<\233.V\276:\247%=\017\240\026=\t\347m>\312m\201>)\370\004>\007D\024\276\310\212\215=\250\254\004\276\376X\212>k0\265=\242\024\214\275L\335\025=#5\227>\224\n\024<,\270\000\276e\345B\275\334\325\211=\025\346\205\275\0173O=\316\026\275;\265!\023\275X\337\001>\354J\002\276`\316q\275\241\372\340\275\223\025\324=f\356\2629\300\265\362\274I^\351\274\274\\\215\274P\277\257=\271\250\236>g\352\256=\2729Y\276\332\022\334=\274{J\276\304A\001\274\000>5>\226\2748\276q\233\024\276\204b\260\275<S >\336>\010\276=\222\025>:\324\025\2767x\010\275J;\205=\t\244\263\275\301\235\232=\316\334\001=U\333\237>wCd\276\277\0226\274\352\263d\276n\330r><\331&;\016c\250\276j9\n\276pbi\274U\t5\276S\220\352<\014\263c=ZU\215\275t\200\345\274P\2276>\317g\302\275\023\241\247>\202\246\026>\020\362\244>\021\255\360<gt\304\274\244\201\240\274\357~\032\276\330\026\301\275\354+V\276p\324\326\275\277C\215\275\202\254\366\273\210\3406=\207\363(\276\273\005\250<\201\013\316\275\240\"M\276\007\365\025\276ir\371=\366\222\035>_R\332=U\327 \275\273\363\335=\273k\352=\214\211V=k\374\204=:\344\216;h.\014\276]\211M\2766\324\242=+6O>)\265\210\275@\376\'\276\r\250\211=\033\030\240>\002\235\204=!\270\005\276\360\014\362=\272!\207\275\256\332G=\332g\330<j\370=\275\000\267\002\276\212\313\n<\216w.=\030r0\275]\331\364=\371\360V\275nZH\276\344J/>nDg\275\nOg\275\032;\036=\326\200B\276\203A\312\275_e\255\274D\247\r>wJ,=\243\350\010>\033\003\264=QI\321<\200=X=\216\2466\275=`\213=\013\224\350=\215]\201\276FI(>i\035\237\276\202\365\307< \034\210\276\213\357Z\276k\223\024>\311cG\276\341b\034\276\206\212\324=\244\206\030>cq\264\275lt\332\275m,\357\274L\223\237\275HR\303=NE+>eir\276-nM\276H\306+><bx=Ax\333\275\324 \313<(\327\223=\223\344\215\275\tb\321=\031X`>\365\271G\276\366\3036\276\264\003\254;6\202@\276\"\261\032\274\031r\225\274\344w\304\274\230\034{\275)~E\274B\001\330\276\2421\223\275\374!U\275\3604\367\275\302,\377=\336\230\333\275b\241\016>\233\025\271\275\264\375\016>\225\242\357<\244\267\312=\376\304\332<P\362\212\275\201&\354\274\306\202\366<\235\023\342\275\344\027\310=\257\025\201=\346F\270\275y\361\236\275\361,s\276Qc\342\275\263p\365=:\204\337=\327A\261\275\202$\205\2753\327\244=~\340L\274\276\303\202=\016\270E\275Q|\373\275\311\031\235=\3037\022\276\221\224\273=\026\002\"\2759\274[=\216\270\236=1\314\'\276\274\030L>\t\220\356\273Nxv\274\036\341\356\275DC\250\275\0079+\276xf<=q85\276\304\335\241>\310Mn<wGh=4\335\271=\013\025P=\222~.\275\212\241h\275\264?\231=~\371\375=.\210\232\275G~\221>*P\002=5F\206\275\305\255T>C\245N\275w%#\276\312U]=X\276\202=P\234\320\274\374I\036\276pF\370\275\013j\216=A9\366\275z%.>+|\275\2755\330\027>\347\271\021>S\022\205=\017\377\177\275\353\223c=\264\200\305=\267\227\240=\t\241R>J\363\023\276\010\300\004>\310d\225\275!y\010\276v7\351<\305A\227=L\230\037=\377|\347;\224\347\227\274\rgb\275/\215;=1\"+>bL\002>=aP=\236\032\016\275\243\333G>\"\022\326\275\264S\021>\324\')\276\000$\'\276>\016\276\275\353\2749=\034\274j>\247\3111\275\256=\243\274|wp\276s\273\002>\007\236-\2760\351\233\275\364$\003>\232\255v=\022\304O>\227\334\354\275\211\202\327\275vx\214\275\355\271#:\243;\203\275x\322\360=)\330q=f\210\032=\304\307\276=r\356x<\256\323\220\276\206\333K\276\036pv<\013&c>\207\254\003=\365\245\245\274\303\263\r\276V\273M\276\336\312\235\275\364\255)\276\024T\235=\221\352\362\274\302\377\212=Q\'\322\275jb\360\276\305\225\021=\317\021\2309i\346\347=\tH\233=\235~\324=\221\243\016\275F(\360\274\326\260\222\275\021%H<\232,\r\276\037q\306\274\257H\361\274\212\022\270=\307\200p\274\236\304\276=\254\214\342\272e\r!\276\360nM\275]\222K<W\355T\275\202\241B=IJU>\252\251\330<\241Q\005\276\0313\026\276\223\034:>\010j\261\275\354\370\316\274()+=O@\">1\275)\274\266p\207=\310\270.=\260\311\203\2755\272\374\275\243D\200\275\261gW\275\3752c>\305\331\t\276D\261\002\276\377\264\027\276$\310k=\351\272\331\2745\024P\275.3\'>Z\016-\275\343\323\215=\025\3150\276>G<>8V\336=wy\"\276\002\2068\275\356\251,\274\367\276G;+R\326;\001,5=?\245W\275\0351\235>\330A\010=c\024\310;\005\216W=`x\226<\346\230->\005\242i>\303\353\232\274\356Q?>+\021\024>\372@\277\275\345\010\035\276oA\313=:@\255=\020\2064\276\274,U=|\361\204=\307\3743=\211\336\317=\364\2154\276\350\344\363=)\020\245<\255\311L9y\302\203=QMz=%\005\027\276\277D\315=^\037\331\274\211t\346<\'\245R\2751R\243;\311g\235\275f\365K\272Cy\034=\275\356\315<\312\243Y\275\020 \003\275m_\266=\265\2332>ZM\343\275\027&\201<!x6\275=\274\205=\377\000o\275%\272\264\275\213\2151\2754\203!=\320d;>\324aS\276 \373\255\273\002\035m=\260\232#\276W\340\000>6d\014<\216\3522>\372\377\005=\227y\244\276.\232\335\274\355~\346\2757\2103=\244\341`=\217\357j>\206\2125;}T\223\274\262\332\302\275\367\234\234=l+?=\"\025\030>B\205v=\222m\177\275*@\344\274NR\202\275\353\030D\2763,\340\275\346\304I\275\241\023(=\231\350\317\275\261\361\031=\243\247\003=\315\357\366=\025\274\227\276\273\337E\2766\022\025> \347\215=#?I\276K\221\353\275\234O\217\274P\0025\276\266V\014>b:\275\275<A\215\275\266|j\276\336n\035;\034b\376<\377g\034\276}\221\">\233\260\241=\0144\205\276u\031F\275\270<\003>\035S\n=\2137Y\276R\3623\276\300\327\201\275OV\304<\350\232\200=\252\366U<\233h\023>/\362\305\275\303\347\235\275c\207\351\274\307lH\275\245b\000\276\216\316\036>\372\224\365\275r\004\377<\352T\365<\367W\t\274i\310\244=-\233V\276\307O%\276L\376\370;)\340\310\273\2752\034\272\277\225U\276\250\272&=o{\363=\272%F=\301\035\353;A\304\271;\276\177\225\274\013\213\036\274L\354\214=\362i\006>$\267\226\275b\005\226\276\333\374\021\275\271=6\274\231\254_\275\377\357\"\275)s\335\274U.==y\366\002=\311\250\351<Q\260\360\274\007vP>\310>\264\275V);\276Oh\r\274\233\223\"\276\246\240\327\275\341\344\271\274,\032\216=G\'\213\275\262\006C\276\017\0343>\020]\317\273J\365\021\275\252\'\271=\202\341\210<%r\367\275\340`\200>\371 \224\275*\377\211=\354H\251>\240>\243>\006\212\n>D\360\235\274\035\217c>\220L\314<\301\355<<\202\334\n\274\002\037\315\275f\177\025\276\206\364\311\274\000\341\306=du\312\274i\261\n=HY/\276\004\217\202\275\260a5>\253\245\363\274\"a\031>q\307\027>\312[\032;\330\207F\274n\301k=8\005\275\275\215\031\023>\227A1>y\300\026>\334b\t\276\025\261H\275\242\270\255\275\240\264\260\276d`w>\232\231\215=\213\"\202=\272\343\000=\352\261\255\275\260\026\325<\216\224y=\207\260\272\275\352\272\315=\035\316\010\276\3301`=\014\353\000>\276\342\253;\022ha=\3705\225>\2658\225<(\242\001>\232>\027\276.\031\236<\267\037-\275j\201\222\275A\2003\276\266+\342=\373\234C\2753\000\246\275\212\250U>\347\017\222=\026\014\013\275c)\005>\201\245\304:\363\376\204>>y\337\275\352(\001:\241[\032\273\264\353\203\276x\2678\275>\021\273\272\033\372\r\275\212\360\261=\306|\006\276q\223\307\274\344\270\236=\037\304\013\275\374\237\240>\030\353\311\275\326\351\203=\301\\\017\275q\240\022\275\345\212\316=\301\234\310=\257\\5\275jZ\340\275\264(\225=\034\252\264\275f[`\275\3365\025\276\023i2\276\277{\032>N\276\204\275\312\277\213\275\'\234\025\276\310\203\202\275\023j\007>\223\330\004>\340J\235\275\310\032\002\275\252\231\251=\244g*=\237\253u\275\252C\245>&),>\224-O\276\365\213\321\275\2232\373=\226\267\261\274\363Y\323;}\371\034>d\233\211<\270\273\313=[\354\205=e\371\236=\202\3460<B\267z=\272vV;=\335`=r\334\031\276\210L+\275\370\316m\276\320\203\334<MJS=?\264#\276?\370\036>\033\247\025\276\300\n\207<\002gY\276\367Kf\273I\265\207\276 H\213\276\354!\365<\261\267y\276\226&j\274O\2408=\245\274\302=W\020j\275\366w\201>!\013+<\242\367\007;L\t.>N\245\204>\357\375\306<\014p\251=\256\200\205\274\377\212\240\276\254\303\227\275O\201\026=Z\300\r\276}q\330=\024\326\005=\336\r\225\274b\304Z\274\251\316\026\275\212X\270\275\227\233\356\274\026\276\207\275d\306\314\275\257D\352<\377C1=!f\363\275\000\327\310\275a\353\270=\266dR>:b\343<\246\224\241\275\314\322h\275\261\274v\276.\031\261=\371-Z>\\\200\231<\222\301\213=\365\205\356=\350\023\271\274\036\221\372\273U\rD\2764\270\213\275\004\023K\276=\013]\276\"\250\">\272\202\353=\202\000A\2768yA>\274[0<I\357\260<\257\247\230\275\275\375\355\272h\001D\275P\3300\275L\253)\275oXu\274F\341\004=K\311\307=\212\252\357\275\035(\367=`+\366=\237\t\231=V\342\257=W\203<\276\220\026\002>:\0130\276\205\333r>&\3330\274\326\t\375\275\"\251\032\276\031J\007>N\021.\276\372\271\246=eaj\274Y`\345=;\177\325=\356\317\361\273\301\0074\276j\204d\274\323\'\307=]\256\207=\006\372\256\276\312\270\024< \256\002\276\014\257\272=*@\203=3.3\275\337\225\324=\256=\215\275-\211\234\275F\357@>]\313B\275\316\326\000\276\247\271\372\275\355(\004\276Bj\217\273\314*\257\275\324(`>\267\"J>\306\024D\276/?\251=\230\365\006\276\224\260\305=\201u\342=\332\177h\2763\024a\276\371e\214=\007\370k=\2069\244>\341\231\364\275#\233H\276\224\037$\275\304\316\266=\200\375\226<\255\273\350=2\323B\275\351v5\274A\222\007>\276-\t>~,\341\273 9g>$\333\320<M\003\215=^\375\230>b\327\201\275\267\306\r\275t\360p=\202\307\247=\361\022P\276\350o0<oG\236\275\333\201\363<7\205\036\275\\K\327;X\034\333=\227r%\273ob\306\274\215k\337\274F?\235\275\nM\004>a\005\214\275\337\325J>N\317)\276N*\020>PC-\274\3008&\275\223L\351\275\221\272\241=\275G\203\275A\275\032>\342\231)>x\373\220\274\324R\362\274\317\353]\276\342\235\202\276\252R\303\274e\203\252\275\262\2217=\236\016\222:\313,2>H\332\322=Z\226\004\275\200\254\310\275\361]\206>\372\217\226\276\213\332Y;\304\330p>xQ\212=\343n\'>h\217#>\202\271\000<\313/2>\320\020;\274\013\006>>3`t=R\005\357\275\317{a>\032#\213\275\311\034\021=K\323#>\370\001L=\263~l\275\341-\225<X\0041\27660\330\273z\302\210\275j\2256>\251R\257=H\037\311<\363\236`>\250\342%\275^\3043\275\3416M<\351s\216\274\236ta\275\202)\221\275m\0135\276Cn\352\274 Pa\275\276II=r\021s\276N\177\266=\364qn\274\373\233\314<G)E=|\330S\274\320\r\210\275\353\253\036\275\233\000\344\275&\251&\276=\270\037=\370\354u=\200/-\275Y\256L\276\316\327<;\026\350\362\275\255EV>}\252\243\273P\036`={\251\213=\371\233\332=\'\3315>:i\027>EY\027=\221\262#\276\337\255\262=\035\333K\275\224\323\260<\237DU\272\334\365\320\275\236c\000=\367\351u=j\3008\276?\030\371=6\312\370\275~\031\017<\230\211\317=\211=\356=\316v->K\017\001\276\351\346\017\276 \250\016\276\353KC>4\363\257=\347LJ=\224T\201>~u\277\275\014\016J>\207\264\245\275\025\301=\273"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 8
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "oldpi/model/vf_fc1/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/w/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 8
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/b/read"
      op: "Identity"
      input: "oldpi/model/vf_fc1/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_1"
      input: "oldpi/model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf_fc1/add"
      op: "Add"
      input: "oldpi/model/vf_fc1/MatMul"
      input: "oldpi/model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Tanh_3"
      op: "Tanh"
      input: "oldpi/model/vf_fc1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\207\031\313>U:\223\276\202\306 >\350,\227>:\032\273\276)\272\014\2763s\305\276\265\313\026?"
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/Assign"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/w/read"
      op: "Identity"
      input: "oldpi/model/vf/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/Assign"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/vf/b/read"
      op: "Identity"
      input: "oldpi/model/vf/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/vf/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/vf/add"
      op: "Add"
      input: "oldpi/model/vf/MatMul"
      input: "oldpi/model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
            tensor_content: "@\307\t;8\267m\273\320\355\357;}\364\201;\022\3758;>\314\313\272$Y\241:(}\216\272"
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/Assign"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/w/read"
      op: "Identity"
      input: "oldpi/model/pi/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/Assign"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/b/read"
      op: "Identity"
      input: "oldpi/model/pi/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_2"
      input: "oldpi/model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/pi/add"
      op: "Add"
      input: "oldpi/model/pi/MatMul"
      input: "oldpi/model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/Assign"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/logstd/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/pi/logstd/read"
      op: "Identity"
      input: "oldpi/model/pi/logstd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/mul"
      op: "Mul"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/add"
      op: "Add"
      input: "oldpi/model/mul"
      input: "oldpi/model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/concat"
      op: "ConcatV2"
      input: "oldpi/model/pi/add"
      input: "oldpi/model/add"
      input: "oldpi/model/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
            tensor_content: "^\312\313;\267\215\037;!\225.;##\265;\330\265O\273G\225\3259\323\033\270\272\215{\032;"
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/w"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/w/Assign"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "oldpi/model/q/w/Initializer/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/w/read"
      op: "Identity"
      input: "oldpi/model/q/w"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Initializer/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/b"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "oldpi/model/q/b/Assign"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/b/Initializer/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "oldpi/model/q/b/read"
      op: "Identity"
      input: "oldpi/model/q/b"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/q/MatMul"
      op: "MatMul"
      input: "oldpi/model/Tanh_3"
      input: "oldpi/model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/model/q/add"
      op: "Add"
      input: "oldpi/model/q/MatMul"
      input: "oldpi/model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/model/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "oldpi/model/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/model/split"
      op: "Split"
      input: "oldpi/model/split/split_dim"
      input: "oldpi/model/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 2
        }
      }
    }
    node {
      name: "oldpi/model/Exp"
      op: "Exp"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape"
      op: "Shape"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "oldpi/output/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "oldpi/output/random_normal/mul"
      op: "Mul"
      input: "oldpi/output/random_normal/RandomStandardNormal"
      input: "oldpi/output/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/random_normal"
      op: "Add"
      input: "oldpi/output/random_normal/mul"
      input: "oldpi/output/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul"
      op: "Mul"
      input: "oldpi/model/Exp"
      input: "oldpi/output/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add"
      op: "Add"
      input: "oldpi/model/split"
      input: "oldpi/output/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/sub"
      op: "Sub"
      input: "oldpi/output/add"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/truediv"
      op: "RealDiv"
      input: "oldpi/output/sub"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Square"
      op: "Square"
      input: "oldpi/output/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum"
      op: "Sum"
      input: "oldpi/output/Square"
      input: "oldpi/output/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_1"
      op: "Mul"
      input: "oldpi/output/mul_1/x"
      input: "oldpi/output/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Shape_1"
      op: "Shape"
      input: "oldpi/output/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice"
      op: "StridedSlice"
      input: "oldpi/output/Shape_1"
      input: "oldpi/output/strided_slice/stack"
      input: "oldpi/output/strided_slice/stack_1"
      input: "oldpi/output/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "oldpi/output/Cast"
      op: "Cast"
      input: "oldpi/output/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385175704956
          }
        }
      }
    }
    node {
      name: "oldpi/output/mul_2"
      op: "Mul"
      input: "oldpi/output/mul_2/x"
      input: "oldpi/output/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/add_1"
      op: "Add"
      input: "oldpi/output/mul_1"
      input: "oldpi/output/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "oldpi/output/Sum_1"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "oldpi/output/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "oldpi/output/add_2"
      op: "Add"
      input: "oldpi/output/add_1"
      input: "oldpi/output/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "oldpi/output/strided_slice_1"
      op: "StridedSlice"
      input: "oldpi/model/vf/add"
      input: "oldpi/output/strided_slice_1/stack"
      input: "oldpi/output/strided_slice_1/stack_1"
      input: "oldpi/output/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "loss/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/lrmult"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "loss/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "loss/mul"
      op: "Mul"
      input: "loss/mul/x"
      input: "loss/lrmult"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Placeholder_2"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "loss/sub"
      op: "Sub"
      input: "model/split:1"
      input: "oldpi/model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square"
      op: "Square"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_1"
      op: "Sub"
      input: "oldpi/model/split"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_1"
      op: "Square"
      input: "loss/sub_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add"
      op: "Add"
      input: "loss/Square"
      input: "loss/Square_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_2"
      op: "Square"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "loss/mul_1"
      op: "Mul"
      input: "loss/mul_1/x"
      input: "loss/Square_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv"
      op: "RealDiv"
      input: "loss/add"
      input: "loss/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/add_1"
      op: "Add"
      input: "loss/sub"
      input: "loss/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/sub_2"
      op: "Sub"
      input: "loss/add_1"
      input: "loss/sub_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum"
      op: "Sum"
      input: "loss/sub_2"
      input: "loss/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.4189385175704956
          }
        }
      }
    }
    node {
      name: "loss/add_2"
      op: "Add"
      input: "model/split:1"
      input: "loss/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_1"
      op: "Sum"
      input: "loss/add_2"
      input: "loss/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean"
      op: "Mean"
      input: "loss/Sum"
      input: "loss/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_1"
      op: "Mean"
      input: "loss/Sum_1"
      input: "loss/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_2/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.009999999776482582
          }
        }
      }
    }
    node {
      name: "loss/mul_2"
      op: "Mul"
      input: "loss/mul_2/x"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_3"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_1"
      op: "RealDiv"
      input: "loss/sub_3"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_3"
      op: "Square"
      input: "loss/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_2/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_2"
      op: "Sum"
      input: "loss/Square_3"
      input: "loss/Sum_2/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_3/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_3"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice"
      op: "StridedSlice"
      input: "loss/Shape"
      input: "loss/strided_slice/stack"
      input: "loss/strided_slice/stack_1"
      input: "loss/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast"
      op: "Cast"
      input: "loss/strided_slice"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_4/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385175704956
          }
        }
      }
    }
    node {
      name: "loss/mul_4"
      op: "Mul"
      input: "loss/mul_4/x"
      input: "loss/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_3"
      op: "Add"
      input: "loss/mul_3"
      input: "loss/mul_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_3/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_3"
      op: "Sum"
      input: "model/split:1"
      input: "loss/Sum_3/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_4"
      op: "Add"
      input: "loss/add_3"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg"
      op: "Neg"
      input: "loss/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_4"
      op: "Sub"
      input: "loss/Placeholder_2"
      input: "oldpi/model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/truediv_2"
      op: "RealDiv"
      input: "loss/sub_4"
      input: "oldpi/model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_4"
      op: "Square"
      input: "loss/truediv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_4/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_4"
      op: "Sum"
      input: "loss/Square_4"
      input: "loss/Sum_4/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul_5/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "loss/mul_5"
      op: "Mul"
      input: "loss/mul_5/x"
      input: "loss/Sum_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/strided_slice_1"
      op: "StridedSlice"
      input: "loss/Shape_1"
      input: "loss/strided_slice_1/stack"
      input: "loss/strided_slice_1/stack_1"
      input: "loss/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "loss/Cast_1"
      op: "Cast"
      input: "loss/strided_slice_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9189385175704956
          }
        }
      }
    }
    node {
      name: "loss/mul_6"
      op: "Mul"
      input: "loss/mul_6/x"
      input: "loss/Cast_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_5"
      op: "Add"
      input: "loss/mul_5"
      input: "loss/mul_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Sum_5/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/Sum_5"
      op: "Sum"
      input: "oldpi/model/split:1"
      input: "loss/Sum_5/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_6"
      op: "Add"
      input: "loss/add_5"
      input: "loss/Sum_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Neg_1"
      op: "Neg"
      input: "loss/add_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_5"
      op: "Sub"
      input: "loss/Neg"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Exp"
      op: "Exp"
      input: "loss/sub_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_7"
      op: "Mul"
      input: "loss/Exp"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/sub_6"
      op: "Sub"
      input: "loss/sub_6/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_7/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/add_7"
      op: "Add"
      input: "loss/add_7/x"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value/Minimum"
      op: "Minimum"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_by_value"
      op: "Maximum"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/mul_8"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Minimum"
      op: "Minimum"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_2"
      op: "Mean"
      input: "loss/Minimum"
      input: "loss/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/Neg_2"
      op: "Neg"
      input: "loss/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/sub_7"
      op: "Sub"
      input: "output/strided_slice_1"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Square_5"
      op: "Square"
      input: "loss/sub_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/Mean_3"
      op: "Mean"
      input: "loss/Square_5"
      input: "loss/Const_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/add_8"
      op: "Add"
      input: "loss/Neg_2"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/add_9"
      op: "Add"
      input: "loss/add_8"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/entropy_loss"
          }
        }
      }
    }
    node {
      name: "loss/entropy_loss"
      op: "ScalarSummary"
      input: "loss/entropy_loss/tags"
      input: "loss/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/policy_gradient_loss"
          }
        }
      }
    }
    node {
      name: "loss/policy_gradient_loss"
      op: "ScalarSummary"
      input: "loss/policy_gradient_loss/tags"
      input: "loss/Neg_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/value_function_loss"
          }
        }
      }
    }
    node {
      name: "loss/value_function_loss"
      op: "ScalarSummary"
      input: "loss/value_function_loss/tags"
      input: "loss/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/approximate_kullback-leibler"
          }
        }
      }
    }
    node {
      name: "loss/approximate_kullback-leibler"
      op: "ScalarSummary"
      input: "loss/approximate_kullback-leibler/tags"
      input: "loss/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/clip_factor/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/clip_factor"
          }
        }
      }
    }
    node {
      name: "loss/clip_factor"
      op: "ScalarSummary"
      input: "loss/clip_factor/tags"
      input: "loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/loss"
          }
        }
      }
    }
    node {
      name: "loss/loss"
      op: "ScalarSummary"
      input: "loss/loss/tags"
      input: "loss/add_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/Assign"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_1"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "model/pi_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_2"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_3"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "model/vf_fc0/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_4"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_5"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "model/pi_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_6"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_7"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "model/vf_fc1/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_8"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_9"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "model/vf/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_10"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_11"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "model/pi/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_12"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "model/pi/logstd/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_13"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "model/q/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/Assign_14"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "model/q/b/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/group_deps"
      op: "NoOp"
      input: "^loss/Assign"
      input: "^loss/Assign_1"
      input: "^loss/Assign_10"
      input: "^loss/Assign_11"
      input: "^loss/Assign_12"
      input: "^loss/Assign_13"
      input: "^loss/Assign_14"
      input: "^loss/Assign_2"
      input: "^loss/Assign_3"
      input: "^loss/Assign_4"
      input: "^loss/Assign_5"
      input: "^loss/Assign_6"
      input: "^loss/Assign_7"
      input: "^loss/Assign_8"
      input: "^loss/Assign_9"
    }
    node {
      name: "Adam_mpi/Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10028
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10028
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3840
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice/stack"
      input: "Adam_mpi/strided_slice/stack_1"
      input: "Adam_mpi/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3840
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\036\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape"
      op: "Reshape"
      input: "Adam_mpi/strided_slice"
      input: "Adam_mpi/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "Adam_mpi/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3840
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3968
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_1"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_1/stack"
      input: "Adam_mpi/strided_slice_1/stack_1"
      input: "Adam_mpi/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_1"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_1"
      input: "Adam_mpi/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_1"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "Adam_mpi/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3968
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 7808
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_2"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_2/stack"
      input: "Adam_mpi/strided_slice_2/stack_1"
      input: "Adam_mpi/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3840
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\036\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_2"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_2"
      input: "Adam_mpi/Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_2"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "Adam_mpi/Reshape_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 7808
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 7936
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_3"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_3/stack"
      input: "Adam_mpi/strided_slice_3/stack_1"
      input: "Adam_mpi/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_3"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_3"
      input: "Adam_mpi/Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_3"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "Adam_mpi/Reshape_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 7936
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8960
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_4"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_4/stack"
      input: "Adam_mpi/strided_slice_4/stack_1"
      input: "Adam_mpi/strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\010\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_4"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_4"
      input: "Adam_mpi/Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_4"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "Adam_mpi/Reshape_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8960
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8968
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_5"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_5/stack"
      input: "Adam_mpi/strided_slice_5/stack_1"
      input: "Adam_mpi/strided_slice_5/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_5"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_5"
      input: "Adam_mpi/Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "Adam_mpi/Reshape_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8968
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 9992
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_6"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_6/stack"
      input: "Adam_mpi/strided_slice_6/stack_1"
      input: "Adam_mpi/strided_slice_6/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\010\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_6"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_6"
      input: "Adam_mpi/Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_6"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "Adam_mpi/Reshape_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 9992
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10000
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_7"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_7/stack"
      input: "Adam_mpi/strided_slice_7/stack_1"
      input: "Adam_mpi/strided_slice_7/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_7"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_7"
      input: "Adam_mpi/Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_7"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "Adam_mpi/Reshape_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10000
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10008
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_8"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_8/stack"
      input: "Adam_mpi/strided_slice_8/stack_1"
      input: "Adam_mpi/strided_slice_8/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\010\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_8"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_8"
      input: "Adam_mpi/Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_8"
      op: "Assign"
      input: "model/vf/w"
      input: "Adam_mpi/Reshape_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10008
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10009
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_9"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_9/stack"
      input: "Adam_mpi/strided_slice_9/stack_1"
      input: "Adam_mpi/strided_slice_9/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_9"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_9"
      input: "Adam_mpi/Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "Adam_mpi/Reshape_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10009
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10017
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_10"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_10/stack"
      input: "Adam_mpi/strided_slice_10/stack_1"
      input: "Adam_mpi/strided_slice_10/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\010\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_10"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_10"
      input: "Adam_mpi/Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_10"
      op: "Assign"
      input: "model/pi/w"
      input: "Adam_mpi/Reshape_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10017
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10018
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_11"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_11/stack"
      input: "Adam_mpi/strided_slice_11/stack_1"
      input: "Adam_mpi/strided_slice_11/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_11"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_11"
      input: "Adam_mpi/Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_11"
      op: "Assign"
      input: "model/pi/b"
      input: "Adam_mpi/Reshape_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10018
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10019
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_12"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_12/stack"
      input: "Adam_mpi/strided_slice_12/stack_1"
      input: "Adam_mpi/strided_slice_12/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_12"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_12"
      input: "Adam_mpi/Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_12"
      op: "Assign"
      input: "model/pi/logstd"
      input: "Adam_mpi/Reshape_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10019
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10027
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_13"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_13/stack"
      input: "Adam_mpi/strided_slice_13/stack_1"
      input: "Adam_mpi/strided_slice_13/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\010\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_13"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_13"
      input: "Adam_mpi/Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_13"
      op: "Assign"
      input: "model/q/w"
      input: "Adam_mpi/Reshape_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10027
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 10028
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/strided_slice_14"
      op: "StridedSlice"
      input: "Adam_mpi/Placeholder"
      input: "Adam_mpi/strided_slice_14/stack"
      input: "Adam_mpi/strided_slice_14/stack_1"
      input: "Adam_mpi/strided_slice_14/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_14"
      op: "Reshape"
      input: "Adam_mpi/strided_slice_14"
      input: "Adam_mpi/Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Assign_14"
      op: "Assign"
      input: "model/q/b"
      input: "Adam_mpi/Reshape_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Adam_mpi/group_deps"
      op: "NoOp"
      input: "^Adam_mpi/Assign"
      input: "^Adam_mpi/Assign_1"
      input: "^Adam_mpi/Assign_10"
      input: "^Adam_mpi/Assign_11"
      input: "^Adam_mpi/Assign_12"
      input: "^Adam_mpi/Assign_13"
      input: "^Adam_mpi/Assign_14"
      input: "^Adam_mpi/Assign_2"
      input: "^Adam_mpi/Assign_3"
      input: "^Adam_mpi/Assign_4"
      input: "^Adam_mpi/Assign_5"
      input: "^Adam_mpi/Assign_6"
      input: "^Adam_mpi/Assign_7"
      input: "^Adam_mpi/Assign_8"
      input: "^Adam_mpi/Assign_9"
    }
    node {
      name: "Adam_mpi/Reshape_15/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3840
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_15"
      op: "Reshape"
      input: "model/pi_fc0/w/read"
      input: "Adam_mpi/Reshape_15/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3840
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_16"
      op: "Reshape"
      input: "model/pi_fc0/b/read"
      input: "Adam_mpi/Reshape_16/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3840
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_17"
      op: "Reshape"
      input: "model/vf_fc0/w/read"
      input: "Adam_mpi/Reshape_17/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3840
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_18"
      op: "Reshape"
      input: "model/vf_fc0/b/read"
      input: "Adam_mpi/Reshape_18/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1024
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_19"
      op: "Reshape"
      input: "model/pi_fc1/w/read"
      input: "Adam_mpi/Reshape_19/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_20"
      op: "Reshape"
      input: "model/pi_fc1/b/read"
      input: "Adam_mpi/Reshape_20/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1024
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_21"
      op: "Reshape"
      input: "model/vf_fc1/w/read"
      input: "Adam_mpi/Reshape_21/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_22"
      op: "Reshape"
      input: "model/vf_fc1/b/read"
      input: "Adam_mpi/Reshape_22/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_23"
      op: "Reshape"
      input: "model/vf/w/read"
      input: "Adam_mpi/Reshape_23/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_24"
      op: "Reshape"
      input: "model/vf/b/read"
      input: "Adam_mpi/Reshape_24/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_25"
      op: "Reshape"
      input: "model/pi/w/read"
      input: "Adam_mpi/Reshape_25/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_26"
      op: "Reshape"
      input: "model/pi/b/read"
      input: "Adam_mpi/Reshape_26/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_27"
      op: "Reshape"
      input: "model/pi/logstd/read"
      input: "Adam_mpi/Reshape_27/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_28"
      op: "Reshape"
      input: "model/q/w/read"
      input: "Adam_mpi/Reshape_28/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Adam_mpi/Reshape_29"
      op: "Reshape"
      input: "model/q/b/read"
      input: "Adam_mpi/Reshape_29/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Adam_mpi/concat"
      op: "ConcatV2"
      input: "Adam_mpi/Reshape_15"
      input: "Adam_mpi/Reshape_16"
      input: "Adam_mpi/Reshape_17"
      input: "Adam_mpi/Reshape_18"
      input: "Adam_mpi/Reshape_19"
      input: "Adam_mpi/Reshape_20"
      input: "Adam_mpi/Reshape_21"
      input: "Adam_mpi/Reshape_22"
      input: "Adam_mpi/Reshape_23"
      input: "Adam_mpi/Reshape_24"
      input: "Adam_mpi/Reshape_25"
      input: "Adam_mpi/Reshape_26"
      input: "Adam_mpi/Reshape_27"
      input: "Adam_mpi/Reshape_28"
      input: "Adam_mpi/Reshape_29"
      input: "Adam_mpi/concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10028
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean"
      op: "Mean"
      input: "loss/Placeholder_1"
      input: "input_info/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/discounted_rewards/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/discounted_rewards"
          }
        }
      }
    }
    node {
      name: "input_info/discounted_rewards"
      op: "ScalarSummary"
      input: "input_info/discounted_rewards/tags"
      input: "input_info/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0010000000474974513
          }
        }
      }
    }
    node {
      name: "input_info/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range"
      op: "Range"
      input: "input_info/range/start"
      input: "input_info/Rank"
      input: "input_info/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0010000000474974513
          }
        }
      }
    }
    node {
      name: "input_info/Mean_1"
      op: "Mean"
      input: "input_info/Mean_1/input"
      input: "input_info/range"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/learning_rate/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/learning_rate"
          }
        }
      }
    }
    node {
      name: "input_info/learning_rate"
      op: "ScalarSummary"
      input: "input_info/learning_rate/tags"
      input: "input_info/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/Mean_2"
      op: "Mean"
      input: "loss/Placeholder"
      input: "input_info/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/advantage/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/advantage"
          }
        }
      }
    }
    node {
      name: "input_info/advantage"
      op: "ScalarSummary"
      input: "input_info/advantage/tags"
      input: "input_info/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "input_info/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "input_info/range_1/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "input_info/range_1"
      op: "Range"
      input: "input_info/range_1/start"
      input: "input_info/Rank_1"
      input: "input_info/range_1/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "input_info/Mean_3"
      op: "Mean"
      input: "input_info/Mean_3/input"
      input: "input_info/range_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "input_info/clip_range/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "input_info/clip_range"
          }
        }
      }
    }
    node {
      name: "input_info/clip_range"
      op: "ScalarSummary"
      input: "input_info/clip_range/tags"
      input: "input_info/Mean_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^model/pi/b/Assign"
      input: "^model/pi/logstd/Assign"
      input: "^model/pi/w/Assign"
      input: "^model/pi_fc0/b/Assign"
      input: "^model/pi_fc0/w/Assign"
      input: "^model/pi_fc1/b/Assign"
      input: "^model/pi_fc1/w/Assign"
      input: "^model/q/b/Assign"
      input: "^model/q/w/Assign"
      input: "^model/vf/b/Assign"
      input: "^model/vf/w/Assign"
      input: "^model/vf_fc0/b/Assign"
      input: "^model/vf_fc0/w/Assign"
      input: "^model/vf_fc1/b/Assign"
      input: "^model/vf_fc1/w/Assign"
      input: "^oldpi/model/pi/b/Assign"
      input: "^oldpi/model/pi/logstd/Assign"
      input: "^oldpi/model/pi/w/Assign"
      input: "^oldpi/model/pi_fc0/b/Assign"
      input: "^oldpi/model/pi_fc0/w/Assign"
      input: "^oldpi/model/pi_fc1/b/Assign"
      input: "^oldpi/model/pi_fc1/w/Assign"
      input: "^oldpi/model/q/b/Assign"
      input: "^oldpi/model/q/w/Assign"
      input: "^oldpi/model/vf/b/Assign"
      input: "^oldpi/model/vf/w/Assign"
      input: "^oldpi/model/vf_fc0/b/Assign"
      input: "^oldpi/model/vf_fc0/w/Assign"
      input: "^oldpi/model/vf_fc1/b/Assign"
      input: "^oldpi/model/vf_fc1/w/Assign"
    }
    node {
      name: "Merge/MergeSummary"
      op: "MergeSummary"
      input: "loss/entropy_loss"
      input: "loss/policy_gradient_loss"
      input: "loss/value_function_loss"
      input: "loss/approximate_kullback-leibler"
      input: "loss/clip_factor"
      input: "loss/loss"
      input: "input_info/discounted_rewards"
      input: "input_info/learning_rate"
      input: "input_info/advantage"
      input: "input_info/clip_range"
      attr {
        key: "N"
        value {
          i: 10
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/grad_ys_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "gradients/Fill"
      op: "Fill"
      input: "gradients/Shape"
      input: "gradients/grad_ys_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/Fill"
      input: "gradients/loss/Mean_3_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_3_grad/Reshape"
      input: "gradients/loss/Mean_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_1"
      input: "gradients/loss/Mean_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_3_grad/Shape_2"
      input: "gradients/loss/Mean_3_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_3_grad/Prod_1"
      input: "gradients/loss/Mean_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_3_grad/Prod"
      input: "gradients/loss/Mean_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_3_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_3_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_3_grad/Tile"
      input: "gradients/loss/Mean_3_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Neg_2_grad/Neg"
      op: "Neg"
      input: "gradients/Fill"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_2_grad/Mul_1"
      op: "Mul"
      input: "gradients/Fill"
      input: "loss/mul_2/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Const"
      op: "Const"
      input: "^gradients/loss/Mean_3_grad/truediv"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul"
      op: "Mul"
      input: "loss/sub_7"
      input: "gradients/loss/Square_5_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_5_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Mean_3_grad/truediv"
      input: "gradients/loss/Square_5_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Neg_2_grad/Neg"
      input: "gradients/loss/Mean_2_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_2_grad/Reshape"
      input: "gradients/loss/Mean_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_1"
      op: "Shape"
      input: "loss/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_1"
      input: "gradients/loss/Mean_2_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_2_grad/Shape_2"
      input: "gradients/loss/Mean_2_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_2_grad/Prod_1"
      input: "gradients/loss/Mean_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_2_grad/Prod"
      input: "gradients/loss/Mean_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_2_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_2_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_2_grad/Tile"
      input: "gradients/loss/Mean_2_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_2_grad/Mul_1"
      input: "gradients/loss/Mean_1_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Mean_1_grad/Reshape"
      input: "gradients/loss/Mean_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_1"
      input: "gradients/loss/Mean_1_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Prod_1"
      op: "Prod"
      input: "gradients/loss/Mean_1_grad/Shape_2"
      input: "gradients/loss/Mean_1_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Mean_1_grad/Prod_1"
      input: "gradients/loss/Mean_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Mean_1_grad/Prod"
      input: "gradients/loss/Mean_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/Cast"
      op: "Cast"
      input: "gradients/loss/Mean_1_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Mean_1_grad/truediv"
      op: "RealDiv"
      input: "gradients/loss/Mean_1_grad/Tile"
      input: "gradients/loss/Mean_1_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape"
      op: "Shape"
      input: "output/strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_7_grad/Shape"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Square_5_grad/Mul_1"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Sum"
      input: "gradients/loss/sub_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Square_5_grad/Mul_1"
      input: "gradients/loss/sub_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_7_grad/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_7_grad/Neg"
      input: "gradients/loss/sub_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/mul_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_1"
      op: "Shape"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/Minimum_grad/Shape_2"
      input: "gradients/loss/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/mul_7"
      input: "loss/mul_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/Minimum_grad/Shape"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Mean_2_grad/truediv"
      input: "gradients/loss/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum"
      input: "gradients/loss/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/Minimum_grad/LessEqual"
      input: "gradients/loss/Minimum_grad/zeros"
      input: "gradients/loss/Mean_2_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Minimum_grad/Select_1"
      input: "gradients/loss/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/Minimum_grad/Sum_1"
      input: "gradients/loss/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape"
      op: "Shape"
      input: "loss/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/add"
      op: "Add"
      input: "loss/Sum_1/reduction_indices"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_1_grad/add"
      input: "gradients/loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_1_grad/range/start"
      input: "gradients/loss/Sum_1_grad/Size"
      input: "gradients/loss/Sum_1_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_1_grad/Shape_1"
      input: "gradients/loss/Sum_1_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_1_grad/range"
      input: "gradients/loss/Sum_1_grad/mod"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      input: "gradients/loss/Sum_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_1_grad/Shape"
      input: "gradients/loss/Sum_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_1_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/Mean_1_grad/truediv"
      input: "gradients/loss/Sum_1_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_1_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_1_grad/Reshape"
      input: "gradients/loss/Sum_1_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/Shape"
      op: "Shape"
      input: "model/vf/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      op: "StridedSliceGrad"
      input: "gradients/output/strided_slice_1_grad/Shape"
      input: "output/strided_slice_1/stack"
      input: "output/strided_slice_1/stack_1"
      input: "output/strided_slice_1/stack_2"
      input: "gradients/loss/sub_7_grad/Reshape"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 2
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_7_grad/Shape"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum"
      input: "gradients/loss/mul_7_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Mul_1"
      op: "Mul"
      input: "loss/Exp"
      input: "gradients/loss/Minimum_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_7_grad/Mul_1"
      input: "gradients/loss/mul_7_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_7_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_7_grad/Sum_1"
      input: "gradients/loss/mul_7_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Shape_1"
      op: "Shape"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_8_grad/Shape"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul"
      op: "Mul"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      input: "loss/Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum"
      input: "gradients/loss/mul_8_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Mul_1"
      op: "Mul"
      input: "loss/clip_by_value"
      input: "gradients/loss/Minimum_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_8_grad/Mul_1"
      input: "gradients/loss/mul_8_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_8_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_8_grad/Sum_1"
      input: "gradients/loss/mul_8_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_2_grad/Shape"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum"
      input: "gradients/loss/add_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Sum_1_grad/Tile"
      input: "gradients/loss/add_2_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_2_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_2_grad/Sum_1"
      input: "gradients/loss/add_2_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape"
      op: "Shape"
      input: "model/vf/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf/add_grad/Shape"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum"
      input: "gradients/model/vf/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/output/strided_slice_1_grad/StridedSliceGrad"
      input: "gradients/model/vf/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Sum_1"
      input: "gradients/model/vf/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape"
      op: "Shape"
      input: "loss/clip_by_value/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value_grad/Shape_2"
      input: "gradients/loss/clip_by_value_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "loss/clip_by_value/Minimum"
      input: "loss/sub_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value_grad/Shape"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/mul_8_grad/Reshape"
      input: "gradients/loss/clip_by_value_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum"
      input: "gradients/loss/clip_by_value_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value_grad/GreaterEqual"
      input: "gradients/loss/clip_by_value_grad/zeros"
      input: "gradients/loss/mul_8_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value_grad/Select_1"
      input: "gradients/loss/clip_by_value_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value_grad/Sum_1"
      input: "gradients/loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf/add_grad/Reshape"
      input: "model/vf/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_3"
      input: "gradients/model/vf/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      op: "Shape"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      op: "Fill"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_2"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/Exp"
      input: "loss/add_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      op: "Select"
      input: "gradients/loss/clip_by_value/Minimum_grad/LessEqual"
      input: "gradients/loss/clip_by_value/Minimum_grad/zeros"
      input: "gradients/loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/clip_by_value/Minimum_grad/Select_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Sum_1"
      input: "gradients/loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_3_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_3"
      input: "gradients/model/vf/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN"
      op: "AddN"
      input: "gradients/loss/mul_7_grad/Reshape"
      input: "gradients/loss/clip_by_value/Minimum_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/mul_7_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Exp_grad/mul"
      op: "Mul"
      input: "gradients/AddN"
      input: "loss/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum"
      input: "gradients/model/vf_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_3_grad/TanhGrad"
      input: "gradients/model/vf_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Sum_1"
      input: "gradients/model/vf_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape"
      op: "Shape"
      input: "loss/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Shape_1"
      op: "Shape"
      input: "loss/Neg_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_5_grad/Shape"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Exp_grad/mul"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Sum"
      input: "gradients/loss/sub_5_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Exp_grad/mul"
      input: "gradients/loss/sub_5_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_5_grad/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_5_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_5_grad/Neg"
      input: "gradients/loss/sub_5_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      input: "model/vf_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/Neg_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_5_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Tanh_1_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_1"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape"
      op: "Shape"
      input: "loss/add_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_4_grad/Shape"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum"
      input: "gradients/loss/add_4_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/Neg_grad/Neg"
      input: "gradients/loss/add_4_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_4_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Sum_1"
      input: "gradients/loss/add_4_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/vf_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum"
      input: "gradients/model/vf_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_1_grad/TanhGrad"
      input: "gradients/model/vf_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Sum_1"
      input: "gradients/model/vf_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape"
      op: "Shape"
      input: "loss/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/add_3_grad/Shape"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum"
      input: "gradients/loss/add_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/add_4_grad/Reshape"
      input: "gradients/loss/add_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/add_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/add_3_grad/Sum_1"
      input: "gradients/loss/add_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape"
      op: "Shape"
      input: "model/split:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/add"
      op: "Add"
      input: "loss/Sum_3/reduction_indices"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_3_grad/add"
      input: "gradients/loss/Sum_3_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_3_grad/range/start"
      input: "gradients/loss/Sum_3_grad/Size"
      input: "gradients/loss/Sum_3_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_3_grad/Shape_1"
      input: "gradients/loss/Sum_3_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_3_grad/range"
      input: "gradients/loss/Sum_3_grad/mod"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      input: "gradients/loss/Sum_3_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_3_grad/Shape"
      input: "gradients/loss/Sum_3_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_3_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/add_4_grad/Reshape_1"
      input: "gradients/loss/Sum_3_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_3_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_3_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      input: "model/vf_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Shape_1"
      op: "Shape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/mul_3_grad/Shape"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul"
      op: "Mul"
      input: "gradients/loss/add_3_grad/Reshape"
      input: "loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum"
      input: "gradients/loss/mul_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Mul_1"
      op: "Mul"
      input: "loss/mul_3/x"
      input: "gradients/loss/add_3_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/mul_3_grad/Mul_1"
      input: "gradients/loss/mul_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/mul_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Sum_1"
      input: "gradients/loss/mul_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape"
      op: "Shape"
      input: "loss/Square_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/add"
      op: "Add"
      input: "loss/Sum_2/reduction_indices"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/mod"
      op: "FloorMod"
      input: "gradients/loss/Sum_2_grad/add"
      input: "gradients/loss/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/range"
      op: "Range"
      input: "gradients/loss/Sum_2_grad/range/start"
      input: "gradients/loss/Sum_2_grad/Size"
      input: "gradients/loss/Sum_2_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Fill"
      op: "Fill"
      input: "gradients/loss/Sum_2_grad/Shape_1"
      input: "gradients/loss/Sum_2_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "gradients/loss/Sum_2_grad/range"
      input: "gradients/loss/Sum_2_grad/mod"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Maximum"
      op: "Maximum"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      input: "gradients/loss/Sum_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/floordiv"
      op: "FloorDiv"
      input: "gradients/loss/Sum_2_grad/Shape"
      input: "gradients/loss/Sum_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/Sum_2_grad/Shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/mul_3_grad/Reshape_1"
      input: "gradients/loss/Sum_2_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Sum_2_grad/Tile"
      op: "Tile"
      input: "gradients/loss/Sum_2_grad/Reshape"
      input: "gradients/loss/Sum_2_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Const"
      op: "Const"
      input: "^gradients/loss/Sum_2_grad/Tile"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul"
      op: "Mul"
      input: "loss/truediv_1"
      input: "gradients/loss/Square_3_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/Square_3_grad/Mul_1"
      op: "Mul"
      input: "gradients/loss/Sum_2_grad/Tile"
      input: "gradients/loss/Square_3_grad/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape"
      op: "Shape"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Shape_1"
      op: "Shape"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/truediv_1_grad/Shape"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv"
      op: "RealDiv"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/RealDiv"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum"
      input: "gradients/loss/truediv_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Neg"
      op: "Neg"
      input: "loss/sub_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_1"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/Neg"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/RealDiv_2"
      op: "RealDiv"
      input: "gradients/loss/truediv_1_grad/RealDiv_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/mul"
      op: "Mul"
      input: "gradients/loss/Square_3_grad/Mul_1"
      input: "gradients/loss/truediv_1_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/mul"
      input: "gradients/loss/truediv_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/truediv_1_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/truediv_1_grad/Sum_1"
      input: "gradients/loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape"
      op: "Shape"
      input: "loss/Placeholder_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Shape_1"
      op: "Shape"
      input: "model/split"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/loss/sub_3_grad/Shape"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/Reshape"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Sum"
      input: "gradients/loss/sub_3_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Sum_1"
      op: "Sum"
      input: "gradients/loss/truediv_1_grad/Reshape"
      input: "gradients/loss/sub_3_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Neg"
      op: "Neg"
      input: "gradients/loss/sub_3_grad/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "gradients/loss/sub_3_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/loss/sub_3_grad/Neg"
      input: "gradients/loss/sub_3_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/Exp_grad/mul"
      op: "Mul"
      input: "gradients/loss/truediv_1_grad/Reshape_1"
      input: "model/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_1"
      op: "AddN"
      input: "gradients/loss/add_2_grad/Reshape"
      input: "gradients/loss/Sum_3_grad/Tile"
      input: "gradients/model/Exp_grad/mul"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/loss/add_2_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/split_grad/concat"
      op: "ConcatV2"
      input: "gradients/loss/sub_3_grad/Reshape_1"
      input: "gradients/AddN_1"
      input: "model/split/split_dim"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/mod"
      op: "FloorMod"
      input: "model/concat/axis"
      input: "gradients/model/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ShapeN"
      op: "ShapeN"
      input: "model/pi/add"
      input: "model/add"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "gradients/model/concat_grad/mod"
      input: "gradients/model/concat_grad/ShapeN"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset"
      input: "gradients/model/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/concat_grad/Slice_1"
      op: "Slice"
      input: "gradients/model/split_grad/concat"
      input: "gradients/model/concat_grad/ConcatOffset:1"
      input: "gradients/model/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape"
      op: "Shape"
      input: "model/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/add_grad/Shape"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum"
      input: "gradients/model/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/concat_grad/Slice_1"
      input: "gradients/model/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/add_grad/Sum_1"
      input: "gradients/model/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape"
      op: "Shape"
      input: "model/pi/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/mul_grad/Shape"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul"
      op: "Mul"
      input: "gradients/model/add_grad/Reshape"
      input: "model/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul"
      input: "gradients/model/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum"
      input: "gradients/model/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Mul_1"
      op: "Mul"
      input: "model/pi/add"
      input: "gradients/model/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/mul_grad/Mul_1"
      input: "gradients/model/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/mul_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/mul_grad/Sum_1"
      input: "gradients/model/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "gradients/AddN_2"
      op: "AddN"
      input: "gradients/model/concat_grad/Slice"
      input: "gradients/model/mul_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@gradients/model/concat_grad/Slice"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape"
      op: "Shape"
      input: "model/pi/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi/add_grad/Shape"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum"
      input: "gradients/model/pi/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/AddN_2"
      input: "gradients/model/pi/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Sum_1"
      input: "gradients/model/pi/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi/add_grad/Reshape"
      input: "model/pi/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh_2"
      input: "gradients/model/pi/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_2_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh_2"
      input: "gradients/model/pi/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc1/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum"
      input: "gradients/model/pi_fc1/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_2_grad/TanhGrad"
      input: "gradients/model/pi_fc1/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Sum_1"
      input: "gradients/model/pi_fc1/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      input: "model/pi_fc1/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/Tanh_grad/TanhGrad"
      op: "TanhGrad"
      input: "model/Tanh"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape"
      op: "Shape"
      input: "model/pi_fc0/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum"
      input: "gradients/model/pi_fc0/add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Sum_1"
      op: "Sum"
      input: "gradients/model/Tanh_grad/TanhGrad"
      input: "gradients/model/pi_fc0/add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/add_grad/Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Sum_1"
      input: "gradients/model/pi_fc0/add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul"
      op: "MatMul"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      input: "model/pi_fc0/w/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "model/flatten/Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3840
          }
        }
      }
    }
    node {
      name: "Reshape"
      op: "Reshape"
      input: "gradients/model/pi_fc0/MatMul_grad/MatMul_1"
      input: "Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3840
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "Reshape_1"
      op: "Reshape"
      input: "gradients/model/pi_fc0/add_grad/Reshape_1"
      input: "Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_2/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3840
          }
        }
      }
    }
    node {
      name: "Reshape_2"
      op: "Reshape"
      input: "gradients/model/vf_fc0/MatMul_grad/MatMul_1"
      input: "Reshape_2/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3840
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_3/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "Reshape_3"
      op: "Reshape"
      input: "gradients/model/vf_fc0/add_grad/Reshape_1"
      input: "Reshape_3/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_4/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1024
          }
        }
      }
    }
    node {
      name: "Reshape_4"
      op: "Reshape"
      input: "gradients/model/pi_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_4/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_5/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "Reshape_5"
      op: "Reshape"
      input: "gradients/model/pi_fc1/add_grad/Reshape_1"
      input: "Reshape_5/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_6/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1024
          }
        }
      }
    }
    node {
      name: "Reshape_6"
      op: "Reshape"
      input: "gradients/model/vf_fc1/MatMul_grad/MatMul_1"
      input: "Reshape_6/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1024
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_7/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "Reshape_7"
      op: "Reshape"
      input: "gradients/model/vf_fc1/add_grad/Reshape_1"
      input: "Reshape_7/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_8/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "Reshape_8"
      op: "Reshape"
      input: "gradients/model/vf/MatMul_grad/MatMul_1"
      input: "Reshape_8/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_9/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_9"
      op: "Reshape"
      input: "gradients/model/vf/add_grad/Reshape_1"
      input: "Reshape_9/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_10/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "Reshape_10"
      op: "Reshape"
      input: "gradients/model/pi/MatMul_grad/MatMul_1"
      input: "Reshape_10/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_11/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_11"
      op: "Reshape"
      input: "gradients/model/pi/add_grad/Reshape_1"
      input: "Reshape_11/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Reshape_12/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_12"
      op: "Reshape"
      input: "gradients/model/add_grad/Reshape_1"
      input: "Reshape_12/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_13/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 8
          }
        }
      }
    }
    node {
      name: "Reshape_13"
      op: "Reshape"
      input: "zeros_like"
      input: "Reshape_13/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "zeros_like_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Reshape_14/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Reshape_14"
      op: "Reshape"
      input: "zeros_like_1"
      input: "Reshape_14/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "concat"
      op: "ConcatV2"
      input: "Reshape"
      input: "Reshape_1"
      input: "Reshape_2"
      input: "Reshape_3"
      input: "Reshape_4"
      input: "Reshape_5"
      input: "Reshape_6"
      input: "Reshape_7"
      input: "Reshape_8"
      input: "Reshape_9"
      input: "Reshape_10"
      input: "Reshape_11"
      input: "Reshape_12"
      input: "Reshape_13"
      input: "Reshape_14"
      input: "concat/axis"
      attr {
        key: "N"
        value {
          i: 15
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10028
              }
            }
          }
        }
      }
    }
    node {
      name: "group_deps"
      op: "NoOp"
    }
    node {
      name: "group_deps_1"
      op: "NoOp"
    }
    node {
      name: "save/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/filename"
      op: "PlaceholderWithDefault"
      input: "save/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "PlaceholderWithDefault"
      input: "save/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_2"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
      input: "^save/Assign_24"
      input: "^save/Assign_25"
      input: "^save/Assign_26"
      input: "^save/Assign_27"
      input: "^save/Assign_28"
      input: "^save/Assign_29"
      input: "^save/Assign_3"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
    }
    node {
      name: "save_1/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/filename"
      op: "PlaceholderWithDefault"
      input: "save_1/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/Const"
      op: "PlaceholderWithDefault"
      input: "save_1/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/Const"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_1/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_1/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_1/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_1/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_1/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_1/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_1/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_1/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_1/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_1/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_1/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_1/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_1/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_1/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_1/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_1/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_1/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_1/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_1/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_1/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_1/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_1/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_1/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_1/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_1/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_1/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_1/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_1/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_1/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_24"
      input: "^save_1/Assign_25"
      input: "^save_1/Assign_26"
      input: "^save_1/Assign_27"
      input: "^save_1/Assign_28"
      input: "^save_1/Assign_29"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
    }
    node {
      name: "save_2/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_2/filename"
      op: "PlaceholderWithDefault"
      input: "save_2/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/Const"
      op: "PlaceholderWithDefault"
      input: "save_2/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/SaveV2"
      op: "SaveV2"
      input: "save_2/Const"
      input: "save_2/SaveV2/tensor_names"
      input: "save_2/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/control_dependency"
      op: "Identity"
      input: "save_2/Const"
      input: "^save_2/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_2/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_2/RestoreV2"
      op: "RestoreV2"
      input: "save_2/Const"
      input: "save_2/RestoreV2/tensor_names"
      input: "save_2/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_2/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_2/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_2/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_2/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_2/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_2/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_2/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_2/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_2/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_2/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_2/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_2/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_2/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_2/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_2/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_2/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_2/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_2/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_2/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_2/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_2/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_2/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_2/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_2/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_2/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_2/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_2/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_2/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_2/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_2/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_2/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_2/restore_all"
      op: "NoOp"
      input: "^save_2/Assign"
      input: "^save_2/Assign_1"
      input: "^save_2/Assign_10"
      input: "^save_2/Assign_11"
      input: "^save_2/Assign_12"
      input: "^save_2/Assign_13"
      input: "^save_2/Assign_14"
      input: "^save_2/Assign_15"
      input: "^save_2/Assign_16"
      input: "^save_2/Assign_17"
      input: "^save_2/Assign_18"
      input: "^save_2/Assign_19"
      input: "^save_2/Assign_2"
      input: "^save_2/Assign_20"
      input: "^save_2/Assign_21"
      input: "^save_2/Assign_22"
      input: "^save_2/Assign_23"
      input: "^save_2/Assign_24"
      input: "^save_2/Assign_25"
      input: "^save_2/Assign_26"
      input: "^save_2/Assign_27"
      input: "^save_2/Assign_28"
      input: "^save_2/Assign_29"
      input: "^save_2/Assign_3"
      input: "^save_2/Assign_4"
      input: "^save_2/Assign_5"
      input: "^save_2/Assign_6"
      input: "^save_2/Assign_7"
      input: "^save_2/Assign_8"
      input: "^save_2/Assign_9"
    }
    node {
      name: "save_3/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_3/filename"
      op: "PlaceholderWithDefault"
      input: "save_3/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_3/Const"
      op: "PlaceholderWithDefault"
      input: "save_3/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_3/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_3/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_3/SaveV2"
      op: "SaveV2"
      input: "save_3/Const"
      input: "save_3/SaveV2/tensor_names"
      input: "save_3/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_3/control_dependency"
      op: "Identity"
      input: "save_3/Const"
      input: "^save_3/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_3/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_3/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_3/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_3/RestoreV2"
      op: "RestoreV2"
      input: "save_3/Const"
      input: "save_3/RestoreV2/tensor_names"
      input: "save_3/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_3/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_3/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_3/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_3/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_3/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_3/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_3/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_3/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_3/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_3/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_3/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_3/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_3/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_3/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_3/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_3/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_3/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_3/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_3/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_3/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_3/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_3/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_3/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_3/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_3/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_3/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_3/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_3/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_3/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_3/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_3/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_3/restore_all"
      op: "NoOp"
      input: "^save_3/Assign"
      input: "^save_3/Assign_1"
      input: "^save_3/Assign_10"
      input: "^save_3/Assign_11"
      input: "^save_3/Assign_12"
      input: "^save_3/Assign_13"
      input: "^save_3/Assign_14"
      input: "^save_3/Assign_15"
      input: "^save_3/Assign_16"
      input: "^save_3/Assign_17"
      input: "^save_3/Assign_18"
      input: "^save_3/Assign_19"
      input: "^save_3/Assign_2"
      input: "^save_3/Assign_20"
      input: "^save_3/Assign_21"
      input: "^save_3/Assign_22"
      input: "^save_3/Assign_23"
      input: "^save_3/Assign_24"
      input: "^save_3/Assign_25"
      input: "^save_3/Assign_26"
      input: "^save_3/Assign_27"
      input: "^save_3/Assign_28"
      input: "^save_3/Assign_29"
      input: "^save_3/Assign_3"
      input: "^save_3/Assign_4"
      input: "^save_3/Assign_5"
      input: "^save_3/Assign_6"
      input: "^save_3/Assign_7"
      input: "^save_3/Assign_8"
      input: "^save_3/Assign_9"
    }
    node {
      name: "save_4/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_4/filename"
      op: "PlaceholderWithDefault"
      input: "save_4/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_4/Const"
      op: "PlaceholderWithDefault"
      input: "save_4/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_4/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_4/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_4/SaveV2"
      op: "SaveV2"
      input: "save_4/Const"
      input: "save_4/SaveV2/tensor_names"
      input: "save_4/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_4/control_dependency"
      op: "Identity"
      input: "save_4/Const"
      input: "^save_4/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_4/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_4/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_4/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_4/RestoreV2"
      op: "RestoreV2"
      input: "save_4/Const"
      input: "save_4/RestoreV2/tensor_names"
      input: "save_4/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_4/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_4/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_4/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_4/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_4/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_4/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_4/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_4/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_4/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_4/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_4/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_4/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_4/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_4/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_4/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_4/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_4/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_4/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_4/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_4/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_4/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_4/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_4/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_4/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_4/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_4/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_4/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_4/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_4/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_4/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_4/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_4/restore_all"
      op: "NoOp"
      input: "^save_4/Assign"
      input: "^save_4/Assign_1"
      input: "^save_4/Assign_10"
      input: "^save_4/Assign_11"
      input: "^save_4/Assign_12"
      input: "^save_4/Assign_13"
      input: "^save_4/Assign_14"
      input: "^save_4/Assign_15"
      input: "^save_4/Assign_16"
      input: "^save_4/Assign_17"
      input: "^save_4/Assign_18"
      input: "^save_4/Assign_19"
      input: "^save_4/Assign_2"
      input: "^save_4/Assign_20"
      input: "^save_4/Assign_21"
      input: "^save_4/Assign_22"
      input: "^save_4/Assign_23"
      input: "^save_4/Assign_24"
      input: "^save_4/Assign_25"
      input: "^save_4/Assign_26"
      input: "^save_4/Assign_27"
      input: "^save_4/Assign_28"
      input: "^save_4/Assign_29"
      input: "^save_4/Assign_3"
      input: "^save_4/Assign_4"
      input: "^save_4/Assign_5"
      input: "^save_4/Assign_6"
      input: "^save_4/Assign_7"
      input: "^save_4/Assign_8"
      input: "^save_4/Assign_9"
    }
    node {
      name: "save_5/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_5/filename"
      op: "PlaceholderWithDefault"
      input: "save_5/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_5/Const"
      op: "PlaceholderWithDefault"
      input: "save_5/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_5/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_5/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_5/SaveV2"
      op: "SaveV2"
      input: "save_5/Const"
      input: "save_5/SaveV2/tensor_names"
      input: "save_5/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_5/control_dependency"
      op: "Identity"
      input: "save_5/Const"
      input: "^save_5/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_5/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_5/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_5/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_5/RestoreV2"
      op: "RestoreV2"
      input: "save_5/Const"
      input: "save_5/RestoreV2/tensor_names"
      input: "save_5/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_5/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_5/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_5/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_5/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_5/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_5/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_5/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_5/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_5/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_5/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_5/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_5/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_5/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_5/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_5/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_5/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_5/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_5/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_5/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_5/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_5/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_5/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_5/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_5/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_5/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_5/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_5/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_5/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_5/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_5/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_5/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_5/restore_all"
      op: "NoOp"
      input: "^save_5/Assign"
      input: "^save_5/Assign_1"
      input: "^save_5/Assign_10"
      input: "^save_5/Assign_11"
      input: "^save_5/Assign_12"
      input: "^save_5/Assign_13"
      input: "^save_5/Assign_14"
      input: "^save_5/Assign_15"
      input: "^save_5/Assign_16"
      input: "^save_5/Assign_17"
      input: "^save_5/Assign_18"
      input: "^save_5/Assign_19"
      input: "^save_5/Assign_2"
      input: "^save_5/Assign_20"
      input: "^save_5/Assign_21"
      input: "^save_5/Assign_22"
      input: "^save_5/Assign_23"
      input: "^save_5/Assign_24"
      input: "^save_5/Assign_25"
      input: "^save_5/Assign_26"
      input: "^save_5/Assign_27"
      input: "^save_5/Assign_28"
      input: "^save_5/Assign_29"
      input: "^save_5/Assign_3"
      input: "^save_5/Assign_4"
      input: "^save_5/Assign_5"
      input: "^save_5/Assign_6"
      input: "^save_5/Assign_7"
      input: "^save_5/Assign_8"
      input: "^save_5/Assign_9"
    }
    node {
      name: "save_6/filename/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_6/filename"
      op: "PlaceholderWithDefault"
      input: "save_6/filename/input"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_6/Const"
      op: "PlaceholderWithDefault"
      input: "save_6/filename"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "save_6/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_72bfc9ffe11746fd8134a1f88fa01f2a/part"
          }
        }
      }
    }
    node {
      name: "save_6/StringJoin"
      op: "StringJoin"
      input: "save_6/Const"
      input: "save_6/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_6/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_6/ShardedFilename/shard"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_6/ShardedFilename"
      op: "ShardedFilename"
      input: "save_6/StringJoin"
      input: "save_6/ShardedFilename/shard"
      input: "save_6/num_shards"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_6/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_6/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_6/SaveV2"
      op: "SaveV2"
      input: "save_6/ShardedFilename"
      input: "save_6/SaveV2/tensor_names"
      input: "save_6/SaveV2/shape_and_slices"
      input: "model/pi/b"
      input: "model/pi/logstd"
      input: "model/pi/w"
      input: "model/pi_fc0/b"
      input: "model/pi_fc0/w"
      input: "model/pi_fc1/b"
      input: "model/pi_fc1/w"
      input: "model/q/b"
      input: "model/q/w"
      input: "model/vf/b"
      input: "model/vf/w"
      input: "model/vf_fc0/b"
      input: "model/vf_fc0/w"
      input: "model/vf_fc1/b"
      input: "model/vf_fc1/w"
      input: "oldpi/model/pi/b"
      input: "oldpi/model/pi/logstd"
      input: "oldpi/model/pi/w"
      input: "oldpi/model/pi_fc0/b"
      input: "oldpi/model/pi_fc0/w"
      input: "oldpi/model/pi_fc1/b"
      input: "oldpi/model/pi_fc1/w"
      input: "oldpi/model/q/b"
      input: "oldpi/model/q/w"
      input: "oldpi/model/vf/b"
      input: "oldpi/model/vf/w"
      input: "oldpi/model/vf_fc0/b"
      input: "oldpi/model/vf_fc0/w"
      input: "oldpi/model/vf_fc1/b"
      input: "oldpi/model/vf_fc1/w"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_6/control_dependency"
      op: "Identity"
      input: "save_6/ShardedFilename"
      input: "^save_6/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_6/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_6/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_6/ShardedFilename"
      input: "^save_6/control_dependency"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_6/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_6/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_6/Const"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Identity"
      op: "Identity"
      input: "save_6/Const"
      input: "^save_6/MergeV2Checkpoints"
      input: "^save_6/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_6/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: "model/pi/b"
            string_val: "model/pi/logstd"
            string_val: "model/pi/w"
            string_val: "model/pi_fc0/b"
            string_val: "model/pi_fc0/w"
            string_val: "model/pi_fc1/b"
            string_val: "model/pi_fc1/w"
            string_val: "model/q/b"
            string_val: "model/q/w"
            string_val: "model/vf/b"
            string_val: "model/vf/w"
            string_val: "model/vf_fc0/b"
            string_val: "model/vf_fc0/w"
            string_val: "model/vf_fc1/b"
            string_val: "model/vf_fc1/w"
            string_val: "oldpi/model/pi/b"
            string_val: "oldpi/model/pi/logstd"
            string_val: "oldpi/model/pi/w"
            string_val: "oldpi/model/pi_fc0/b"
            string_val: "oldpi/model/pi_fc0/w"
            string_val: "oldpi/model/pi_fc1/b"
            string_val: "oldpi/model/pi_fc1/w"
            string_val: "oldpi/model/q/b"
            string_val: "oldpi/model/q/w"
            string_val: "oldpi/model/vf/b"
            string_val: "oldpi/model/vf/w"
            string_val: "oldpi/model/vf_fc0/b"
            string_val: "oldpi/model/vf_fc0/w"
            string_val: "oldpi/model/vf_fc1/b"
            string_val: "oldpi/model/vf_fc1/w"
          }
        }
      }
    }
    node {
      name: "save_6/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 30
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_6/RestoreV2"
      op: "RestoreV2"
      input: "save_6/Const"
      input: "save_6/RestoreV2/tensor_names"
      input: "save_6/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_6/Assign"
      op: "Assign"
      input: "model/pi/b"
      input: "save_6/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_1"
      op: "Assign"
      input: "model/pi/logstd"
      input: "save_6/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_2"
      op: "Assign"
      input: "model/pi/w"
      input: "save_6/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_3"
      op: "Assign"
      input: "model/pi_fc0/b"
      input: "save_6/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_4"
      op: "Assign"
      input: "model/pi_fc0/w"
      input: "save_6/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_5"
      op: "Assign"
      input: "model/pi_fc1/b"
      input: "save_6/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_6"
      op: "Assign"
      input: "model/pi_fc1/w"
      input: "save_6/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_7"
      op: "Assign"
      input: "model/q/b"
      input: "save_6/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_8"
      op: "Assign"
      input: "model/q/w"
      input: "save_6/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_9"
      op: "Assign"
      input: "model/vf/b"
      input: "save_6/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_10"
      op: "Assign"
      input: "model/vf/w"
      input: "save_6/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_11"
      op: "Assign"
      input: "model/vf_fc0/b"
      input: "save_6/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_12"
      op: "Assign"
      input: "model/vf_fc0/w"
      input: "save_6/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_13"
      op: "Assign"
      input: "model/vf_fc1/b"
      input: "save_6/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_14"
      op: "Assign"
      input: "model/vf_fc1/w"
      input: "save_6/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_15"
      op: "Assign"
      input: "oldpi/model/pi/b"
      input: "save_6/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_16"
      op: "Assign"
      input: "oldpi/model/pi/logstd"
      input: "save_6/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/logstd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_17"
      op: "Assign"
      input: "oldpi/model/pi/w"
      input: "save_6/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_18"
      op: "Assign"
      input: "oldpi/model/pi_fc0/b"
      input: "save_6/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_19"
      op: "Assign"
      input: "oldpi/model/pi_fc0/w"
      input: "save_6/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_20"
      op: "Assign"
      input: "oldpi/model/pi_fc1/b"
      input: "save_6/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_21"
      op: "Assign"
      input: "oldpi/model/pi_fc1/w"
      input: "save_6/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/pi_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_22"
      op: "Assign"
      input: "oldpi/model/q/b"
      input: "save_6/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_23"
      op: "Assign"
      input: "oldpi/model/q/w"
      input: "save_6/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/q/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_24"
      op: "Assign"
      input: "oldpi/model/vf/b"
      input: "save_6/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_25"
      op: "Assign"
      input: "oldpi/model/vf/w"
      input: "save_6/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_26"
      op: "Assign"
      input: "oldpi/model/vf_fc0/b"
      input: "save_6/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_27"
      op: "Assign"
      input: "oldpi/model/vf_fc0/w"
      input: "save_6/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc0/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 30
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_28"
      op: "Assign"
      input: "oldpi/model/vf_fc1/b"
      input: "save_6/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/b"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/Assign_29"
      op: "Assign"
      input: "oldpi/model/vf_fc1/w"
      input: "save_6/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@oldpi/model/vf_fc1/w"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_6/restore_shard"
      op: "NoOp"
      input: "^save_6/Assign"
      input: "^save_6/Assign_1"
      input: "^save_6/Assign_10"
      input: "^save_6/Assign_11"
      input: "^save_6/Assign_12"
      input: "^save_6/Assign_13"
      input: "^save_6/Assign_14"
      input: "^save_6/Assign_15"
      input: "^save_6/Assign_16"
      input: "^save_6/Assign_17"
      input: "^save_6/Assign_18"
      input: "^save_6/Assign_19"
      input: "^save_6/Assign_2"
      input: "^save_6/Assign_20"
      input: "^save_6/Assign_21"
      input: "^save_6/Assign_22"
      input: "^save_6/Assign_23"
      input: "^save_6/Assign_24"
      input: "^save_6/Assign_25"
      input: "^save_6/Assign_26"
      input: "^save_6/Assign_27"
      input: "^save_6/Assign_28"
      input: "^save_6/Assign_29"
      input: "^save_6/Assign_3"
      input: "^save_6/Assign_4"
      input: "^save_6/Assign_5"
      input: "^save_6/Assign_6"
      input: "^save_6/Assign_7"
      input: "^save_6/Assign_8"
      input: "^save_6/Assign_9"
    }
    node {
      name: "save_6/restore_all"
      op: "NoOp"
      input: "^save_6/restore_shard"
    }
    library {
    }
    versions {
      producer: 38
    }
  }
  saver_def {
    filename_tensor_name: "save_6/Const:0"
    save_tensor_name: "save_6/Identity:0"
    restore_op_name: "save_6/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "summaries"
    value {
      node_list {
        value: "loss/entropy_loss:0"
        value: "loss/policy_gradient_loss:0"
        value: "loss/value_function_loss:0"
        value: "loss/approximate_kullback-leibler:0"
        value: "loss/clip_factor:0"
        value: "loss/loss:0"
        value: "input_info/discounted_rewards:0"
        value: "input_info/learning_rate:0"
        value: "input_info/advantage:0"
        value: "input_info/clip_range:0"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\020model/pi_fc0/w:0\022\025model/pi_fc0/w/Assign\032\025model/pi_fc0/w/read:02*model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc0/b:0\022\025model/pi_fc0/b/Assign\032\025model/pi_fc0/b/read:02\"model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc0/w:0\022\025model/vf_fc0/w/Assign\032\025model/vf_fc0/w/read:02*model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc0/b:0\022\025model/vf_fc0/b/Assign\032\025model/vf_fc0/b/read:02\"model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\020model/pi_fc1/w:0\022\025model/pi_fc1/w/Assign\032\025model/pi_fc1/w/read:02*model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/pi_fc1/b:0\022\025model/pi_fc1/b/Assign\032\025model/pi_fc1/b/read:02\"model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\020model/vf_fc1/w:0\022\025model/vf_fc1/w/Assign\032\025model/vf_fc1/w/read:02*model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\020model/vf_fc1/b:0\022\025model/vf_fc1/b/Assign\032\025model/vf_fc1/b/read:02\"model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\014model/vf/w:0\022\021model/vf/w/Assign\032\021model/vf/w/read:02&model/vf/w/Initializer/initial_value:08\001"
        value: "\n\014model/vf/b:0\022\021model/vf/b/Assign\032\021model/vf/b/read:02\036model/vf/b/Initializer/Const:08\001"
        value: "\n\014model/pi/w:0\022\021model/pi/w/Assign\032\021model/pi/w/read:02&model/pi/w/Initializer/initial_value:08\001"
        value: "\n\014model/pi/b:0\022\021model/pi/b/Assign\032\021model/pi/b/read:02\036model/pi/b/Initializer/Const:08\001"
        value: "\n\021model/pi/logstd:0\022\026model/pi/logstd/Assign\032\026model/pi/logstd/read:02#model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\013model/q/w:0\022\020model/q/w/Assign\032\020model/q/w/read:02%model/q/w/Initializer/initial_value:08\001"
        value: "\n\013model/q/b:0\022\020model/q/b/Assign\032\020model/q/b/read:02\035model/q/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc0/w:0\022\033oldpi/model/pi_fc0/w/Assign\032\033oldpi/model/pi_fc0/w/read:020oldpi/model/pi_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc0/b:0\022\033oldpi/model/pi_fc0/b/Assign\032\033oldpi/model/pi_fc0/b/read:02(oldpi/model/pi_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc0/w:0\022\033oldpi/model/vf_fc0/w/Assign\032\033oldpi/model/vf_fc0/w/read:020oldpi/model/vf_fc0/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc0/b:0\022\033oldpi/model/vf_fc0/b/Assign\032\033oldpi/model/vf_fc0/b/read:02(oldpi/model/vf_fc0/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/pi_fc1/w:0\022\033oldpi/model/pi_fc1/w/Assign\032\033oldpi/model/pi_fc1/w/read:020oldpi/model/pi_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/pi_fc1/b:0\022\033oldpi/model/pi_fc1/b/Assign\032\033oldpi/model/pi_fc1/b/read:02(oldpi/model/pi_fc1/b/Initializer/Const:08\001"
        value: "\n\026oldpi/model/vf_fc1/w:0\022\033oldpi/model/vf_fc1/w/Assign\032\033oldpi/model/vf_fc1/w/read:020oldpi/model/vf_fc1/w/Initializer/initial_value:08\001"
        value: "\n\026oldpi/model/vf_fc1/b:0\022\033oldpi/model/vf_fc1/b/Assign\032\033oldpi/model/vf_fc1/b/read:02(oldpi/model/vf_fc1/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/vf/w:0\022\027oldpi/model/vf/w/Assign\032\027oldpi/model/vf/w/read:02,oldpi/model/vf/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/vf/b:0\022\027oldpi/model/vf/b/Assign\032\027oldpi/model/vf/b/read:02$oldpi/model/vf/b/Initializer/Const:08\001"
        value: "\n\022oldpi/model/pi/w:0\022\027oldpi/model/pi/w/Assign\032\027oldpi/model/pi/w/read:02,oldpi/model/pi/w/Initializer/initial_value:08\001"
        value: "\n\022oldpi/model/pi/b:0\022\027oldpi/model/pi/b/Assign\032\027oldpi/model/pi/b/read:02$oldpi/model/pi/b/Initializer/Const:08\001"
        value: "\n\027oldpi/model/pi/logstd:0\022\034oldpi/model/pi/logstd/Assign\032\034oldpi/model/pi/logstd/read:02)oldpi/model/pi/logstd/Initializer/zeros:08\001"
        value: "\n\021oldpi/model/q/w:0\022\026oldpi/model/q/w/Assign\032\026oldpi/model/q/w/read:02+oldpi/model/q/w/Initializer/initial_value:08\001"
        value: "\n\021oldpi/model/q/b:0\022\026oldpi/model/q/b/Assign\032\026oldpi/model/q/b/read:02#oldpi/model/q/b/Initializer/Const:08\001"
      }
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "ob"
        value {
          name: "input/Ob:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 30
            }
          }
        }
      }
      outputs {
        key: "act"
        value {
          name: "model/split:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      outputs {
        key: "stochastic_act"
        value {
          name: "output/add:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
